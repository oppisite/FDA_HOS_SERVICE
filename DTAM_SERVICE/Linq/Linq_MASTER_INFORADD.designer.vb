'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DTAM_TIHI")>  _
Partial Public Class Linq_MASTERDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMAS_ABOGROUP(instance As MAS_ABOGROUP)
    End Sub
  Partial Private Sub UpdateMAS_ABOGROUP(instance As MAS_ABOGROUP)
    End Sub
  Partial Private Sub DeleteMAS_ABOGROUP(instance As MAS_ABOGROUP)
    End Sub
  Partial Private Sub InsertMAS_ZODIAC(instance As MAS_ZODIAC)
    End Sub
  Partial Private Sub UpdateMAS_ZODIAC(instance As MAS_ZODIAC)
    End Sub
  Partial Private Sub DeleteMAS_ZODIAC(instance As MAS_ZODIAC)
    End Sub
  Partial Private Sub InsertMAS_ACONTROL(instance As MAS_ACONTROL)
    End Sub
  Partial Private Sub UpdateMAS_ACONTROL(instance As MAS_ACONTROL)
    End Sub
  Partial Private Sub DeleteMAS_ACONTROL(instance As MAS_ACONTROL)
    End Sub
  Partial Private Sub InsertMAS_ACUPUNCTURE(instance As MAS_ACUPUNCTURE)
    End Sub
  Partial Private Sub UpdateMAS_ACUPUNCTURE(instance As MAS_ACUPUNCTURE)
    End Sub
  Partial Private Sub DeleteMAS_ACUPUNCTURE(instance As MAS_ACUPUNCTURE)
    End Sub
  Partial Private Sub InsertMAS_ACUPUNCTURE_MAIN(instance As MAS_ACUPUNCTURE_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_ACUPUNCTURE_MAIN(instance As MAS_ACUPUNCTURE_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_ACUPUNCTURE_MAIN(instance As MAS_ACUPUNCTURE_MAIN)
    End Sub
  Partial Private Sub InsertMAS_ACUPUNCTURE_POINT(instance As MAS_ACUPUNCTURE_POINT)
    End Sub
  Partial Private Sub UpdateMAS_ACUPUNCTURE_POINT(instance As MAS_ACUPUNCTURE_POINT)
    End Sub
  Partial Private Sub DeleteMAS_ACUPUNCTURE_POINT(instance As MAS_ACUPUNCTURE_POINT)
    End Sub
  Partial Private Sub InsertMAS_ADDRESSTYPE(instance As MAS_ADDRESSTYPE)
    End Sub
  Partial Private Sub UpdateMAS_ADDRESSTYPE(instance As MAS_ADDRESSTYPE)
    End Sub
  Partial Private Sub DeleteMAS_ADDRESSTYPE(instance As MAS_ADDRESSTYPE)
    End Sub
  Partial Private Sub InsertMAS_ALEVEL(instance As MAS_ALEVEL)
    End Sub
  Partial Private Sub UpdateMAS_ALEVEL(instance As MAS_ALEVEL)
    End Sub
  Partial Private Sub DeleteMAS_ALEVEL(instance As MAS_ALEVEL)
    End Sub
  Partial Private Sub InsertMAS_ALLERGIC_TYPE(instance As MAS_ALLERGIC_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_ALLERGIC_TYPE(instance As MAS_ALLERGIC_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_ALLERGIC_TYPE(instance As MAS_ALLERGIC_TYPE)
    End Sub
  Partial Private Sub InsertMAS_ALLERGICGRUG(instance As MAS_ALLERGICGRUG)
    End Sub
  Partial Private Sub UpdateMAS_ALLERGICGRUG(instance As MAS_ALLERGICGRUG)
    End Sub
  Partial Private Sub DeleteMAS_ALLERGICGRUG(instance As MAS_ALLERGICGRUG)
    End Sub
  Partial Private Sub InsertMAS_ALLERGICSENSITIVE(instance As MAS_ALLERGICSENSITIVE)
    End Sub
  Partial Private Sub UpdateMAS_ALLERGICSENSITIVE(instance As MAS_ALLERGICSENSITIVE)
    End Sub
  Partial Private Sub DeleteMAS_ALLERGICSENSITIVE(instance As MAS_ALLERGICSENSITIVE)
    End Sub
  Partial Private Sub InsertMAS_AMPHUR(instance As MAS_AMPHUR)
    End Sub
  Partial Private Sub UpdateMAS_AMPHUR(instance As MAS_AMPHUR)
    End Sub
  Partial Private Sub DeleteMAS_AMPHUR(instance As MAS_AMPHUR)
    End Sub
  Partial Private Sub InsertMAS_ANSWER_SET(instance As MAS_ANSWER_SET)
    End Sub
  Partial Private Sub UpdateMAS_ANSWER_SET(instance As MAS_ANSWER_SET)
    End Sub
  Partial Private Sub DeleteMAS_ANSWER_SET(instance As MAS_ANSWER_SET)
    End Sub
  Partial Private Sub InsertMAS_ANSWER(instance As MAS_ANSWER)
    End Sub
  Partial Private Sub UpdateMAS_ANSWER(instance As MAS_ANSWER)
    End Sub
  Partial Private Sub DeleteMAS_ANSWER(instance As MAS_ANSWER)
    End Sub
  Partial Private Sub InsertMAS_BACTERIALEVEL(instance As MAS_BACTERIALEVEL)
    End Sub
  Partial Private Sub UpdateMAS_BACTERIALEVEL(instance As MAS_BACTERIALEVEL)
    End Sub
  Partial Private Sub DeleteMAS_BACTERIALEVEL(instance As MAS_BACTERIALEVEL)
    End Sub
  Partial Private Sub InsertMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub UpdateMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub DeleteMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub InsertMAS_BASE(instance As MAS_BASE)
    End Sub
  Partial Private Sub UpdateMAS_BASE(instance As MAS_BASE)
    End Sub
  Partial Private Sub DeleteMAS_BASE(instance As MAS_BASE)
    End Sub
  Partial Private Sub InsertMAS_BCONTROL(instance As MAS_BCONTROL)
    End Sub
  Partial Private Sub UpdateMAS_BCONTROL(instance As MAS_BCONTROL)
    End Sub
  Partial Private Sub DeleteMAS_BCONTROL(instance As MAS_BCONTROL)
    End Sub
  Partial Private Sub InsertMAS_BED(instance As MAS_BED)
    End Sub
  Partial Private Sub UpdateMAS_BED(instance As MAS_BED)
    End Sub
  Partial Private Sub DeleteMAS_BED(instance As MAS_BED)
    End Sub
  Partial Private Sub InsertMAS_BUDGET(instance As MAS_BUDGET)
    End Sub
  Partial Private Sub UpdateMAS_BUDGET(instance As MAS_BUDGET)
    End Sub
  Partial Private Sub DeleteMAS_BUDGET(instance As MAS_BUDGET)
    End Sub
  Partial Private Sub InsertMAS_BUILDINGHOSPITAL(instance As MAS_BUILDINGHOSPITAL)
    End Sub
  Partial Private Sub UpdateMAS_BUILDINGHOSPITAL(instance As MAS_BUILDINGHOSPITAL)
    End Sub
  Partial Private Sub DeleteMAS_BUILDINGHOSPITAL(instance As MAS_BUILDINGHOSPITAL)
    End Sub
  Partial Private Sub InsertMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub InsertMAS_CATEGORYDRUG_MAIN(instance As MAS_CATEGORYDRUG_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_CATEGORYDRUG_MAIN(instance As MAS_CATEGORYDRUG_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_CATEGORYDRUG_MAIN(instance As MAS_CATEGORYDRUG_MAIN)
    End Sub
  Partial Private Sub InsertMAS_CAUSEDISEASE(instance As MAS_CAUSEDISEASE)
    End Sub
  Partial Private Sub UpdateMAS_CAUSEDISEASE(instance As MAS_CAUSEDISEASE)
    End Sub
  Partial Private Sub DeleteMAS_CAUSEDISEASE(instance As MAS_CAUSEDISEASE)
    End Sub
  Partial Private Sub InsertMAS_CAUSEIN(instance As MAS_CAUSEIN)
    End Sub
  Partial Private Sub UpdateMAS_CAUSEIN(instance As MAS_CAUSEIN)
    End Sub
  Partial Private Sub DeleteMAS_CAUSEIN(instance As MAS_CAUSEIN)
    End Sub
  Partial Private Sub InsertMAS_CC(instance As MAS_CC)
    End Sub
  Partial Private Sub UpdateMAS_CC(instance As MAS_CC)
    End Sub
  Partial Private Sub DeleteMAS_CC(instance As MAS_CC)
    End Sub
  Partial Private Sub InsertMAS_CDGITEM(instance As MAS_CDGITEM)
    End Sub
  Partial Private Sub UpdateMAS_CDGITEM(instance As MAS_CDGITEM)
    End Sub
  Partial Private Sub DeleteMAS_CDGITEM(instance As MAS_CDGITEM)
    End Sub
  Partial Private Sub InsertMAS_CENTER(instance As MAS_CENTER)
    End Sub
  Partial Private Sub UpdateMAS_CENTER(instance As MAS_CENTER)
    End Sub
  Partial Private Sub DeleteMAS_CENTER(instance As MAS_CENTER)
    End Sub
  Partial Private Sub InsertMAS_CHARGEITEM(instance As MAS_CHARGEITEM)
    End Sub
  Partial Private Sub UpdateMAS_CHARGEITEM(instance As MAS_CHARGEITEM)
    End Sub
  Partial Private Sub DeleteMAS_CHARGEITEM(instance As MAS_CHARGEITEM)
    End Sub
  Partial Private Sub InsertMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub UpdateMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub DeleteMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub InsertMAS_CHINESEYEAR(instance As MAS_CHINESEYEAR)
    End Sub
  Partial Private Sub UpdateMAS_CHINESEYEAR(instance As MAS_CHINESEYEAR)
    End Sub
  Partial Private Sub DeleteMAS_CHINESEYEAR(instance As MAS_CHINESEYEAR)
    End Sub
  Partial Private Sub InsertMAS_CLAIM_MAIN(instance As MAS_CLAIM_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_CLAIM_MAIN(instance As MAS_CLAIM_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_CLAIM_MAIN(instance As MAS_CLAIM_MAIN)
    End Sub
  Partial Private Sub InsertMAS_CLEANLINESS(instance As MAS_CLEANLINESS)
    End Sub
  Partial Private Sub UpdateMAS_CLEANLINESS(instance As MAS_CLEANLINESS)
    End Sub
  Partial Private Sub DeleteMAS_CLEANLINESS(instance As MAS_CLEANLINESS)
    End Sub
  Partial Private Sub InsertMAS_CLINIC(instance As MAS_CLINIC)
    End Sub
  Partial Private Sub UpdateMAS_CLINIC(instance As MAS_CLINIC)
    End Sub
  Partial Private Sub DeleteMAS_CLINIC(instance As MAS_CLINIC)
    End Sub
  Partial Private Sub InsertMAS_CLINIC_DETAIL(instance As MAS_CLINIC_DETAIL)
    End Sub
  Partial Private Sub UpdateMAS_CLINIC_DETAIL(instance As MAS_CLINIC_DETAIL)
    End Sub
  Partial Private Sub DeleteMAS_CLINIC_DETAIL(instance As MAS_CLINIC_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_CLINIC_MAIN(instance As MAS_CLINIC_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_CLINIC_MAIN(instance As MAS_CLINIC_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_CLINIC_MAIN(instance As MAS_CLINIC_MAIN)
    End Sub
  Partial Private Sub InsertMAS_CODE_DA(instance As MAS_CODE_DA)
    End Sub
  Partial Private Sub UpdateMAS_CODE_DA(instance As MAS_CODE_DA)
    End Sub
  Partial Private Sub DeleteMAS_CODE_DA(instance As MAS_CODE_DA)
    End Sub
  Partial Private Sub InsertMAS_CODE_DAS_CHAINA(instance As MAS_CODE_DAS_CHAINA)
    End Sub
  Partial Private Sub UpdateMAS_CODE_DAS_CHAINA(instance As MAS_CODE_DAS_CHAINA)
    End Sub
  Partial Private Sub DeleteMAS_CODE_DAS_CHAINA(instance As MAS_CODE_DAS_CHAINA)
    End Sub
  Partial Private Sub InsertMAS_CODE_DEATH(instance As MAS_CODE_DEATH)
    End Sub
  Partial Private Sub UpdateMAS_CODE_DEATH(instance As MAS_CODE_DEATH)
    End Sub
  Partial Private Sub DeleteMAS_CODE_DEATH(instance As MAS_CODE_DEATH)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICD10(instance As MAS_CODE_ICD10)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICD10(instance As MAS_CODE_ICD10)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICD10(instance As MAS_CODE_ICD10)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICD10_EMPLOYEE(instance As MAS_CODE_ICD10_EMPLOYEE)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICD10_EMPLOYEE(instance As MAS_CODE_ICD10_EMPLOYEE)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICD10_EMPLOYEE(instance As MAS_CODE_ICD10_EMPLOYEE)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICD10_SERVICEUNIT(instance As MAS_CODE_ICD10_SERVICEUNIT)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICD10_SERVICEUNIT(instance As MAS_CODE_ICD10_SERVICEUNIT)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICD10_SERVICEUNIT(instance As MAS_CODE_ICD10_SERVICEUNIT)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICD9(instance As MAS_CODE_ICD9)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICD9(instance As MAS_CODE_ICD9)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICD9(instance As MAS_CODE_ICD9)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICD9_EMPLOYEE(instance As MAS_CODE_ICD9_EMPLOYEE)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICD9_EMPLOYEE(instance As MAS_CODE_ICD9_EMPLOYEE)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICD9_EMPLOYEE(instance As MAS_CODE_ICD9_EMPLOYEE)
    End Sub
  Partial Private Sub InsertMAS_CODE_ICDO(instance As MAS_CODE_ICDO)
    End Sub
  Partial Private Sub UpdateMAS_CODE_ICDO(instance As MAS_CODE_ICDO)
    End Sub
  Partial Private Sub DeleteMAS_CODE_ICDO(instance As MAS_CODE_ICDO)
    End Sub
  Partial Private Sub InsertMAS_CONDITION(instance As MAS_CONDITION)
    End Sub
  Partial Private Sub UpdateMAS_CONDITION(instance As MAS_CONDITION)
    End Sub
  Partial Private Sub DeleteMAS_CONDITION(instance As MAS_CONDITION)
    End Sub
  Partial Private Sub InsertMAS_CONSULT(instance As MAS_CONSULT)
    End Sub
  Partial Private Sub UpdateMAS_CONSULT(instance As MAS_CONSULT)
    End Sub
  Partial Private Sub DeleteMAS_CONSULT(instance As MAS_CONSULT)
    End Sub
  Partial Private Sub InsertMAS_Contentmen(instance As MAS_Contentmen)
    End Sub
  Partial Private Sub UpdateMAS_Contentmen(instance As MAS_Contentmen)
    End Sub
  Partial Private Sub DeleteMAS_Contentmen(instance As MAS_Contentmen)
    End Sub
  Partial Private Sub InsertMAS_COUNCIL(instance As MAS_COUNCIL)
    End Sub
  Partial Private Sub UpdateMAS_COUNCIL(instance As MAS_COUNCIL)
    End Sub
  Partial Private Sub DeleteMAS_COUNCIL(instance As MAS_COUNCIL)
    End Sub
  Partial Private Sub InsertMAS_COUNTRY(instance As MAS_COUNTRY)
    End Sub
  Partial Private Sub UpdateMAS_COUNTRY(instance As MAS_COUNTRY)
    End Sub
  Partial Private Sub DeleteMAS_COUNTRY(instance As MAS_COUNTRY)
    End Sub
  Partial Private Sub InsertMAS_CutOff_TYPE(instance As MAS_CutOff_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_CutOff_TYPE(instance As MAS_CutOff_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_CutOff_TYPE(instance As MAS_CutOff_TYPE)
    End Sub
  Partial Private Sub InsertMAS_DATASOURCE(instance As MAS_DATASOURCE)
    End Sub
  Partial Private Sub UpdateMAS_DATASOURCE(instance As MAS_DATASOURCE)
    End Sub
  Partial Private Sub DeleteMAS_DATASOURCE(instance As MAS_DATASOURCE)
    End Sub
  Partial Private Sub InsertMAS_DAY(instance As MAS_DAY)
    End Sub
  Partial Private Sub UpdateMAS_DAY(instance As MAS_DAY)
    End Sub
  Partial Private Sub DeleteMAS_DAY(instance As MAS_DAY)
    End Sub
  Partial Private Sub InsertMAS_DEALER(instance As MAS_DEALER)
    End Sub
  Partial Private Sub UpdateMAS_DEALER(instance As MAS_DEALER)
    End Sub
  Partial Private Sub DeleteMAS_DEALER(instance As MAS_DEALER)
    End Sub
  Partial Private Sub InsertMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub UpdateMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub DeleteMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub InsertMAS_DEPARTMENT_MAIN(instance As MAS_DEPARTMENT_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_DEPARTMENT_MAIN(instance As MAS_DEPARTMENT_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_DEPARTMENT_MAIN(instance As MAS_DEPARTMENT_MAIN)
    End Sub
  Partial Private Sub InsertMAS_DEPENDENT(instance As MAS_DEPENDENT)
    End Sub
  Partial Private Sub UpdateMAS_DEPENDENT(instance As MAS_DEPENDENT)
    End Sub
  Partial Private Sub DeleteMAS_DEPENDENT(instance As MAS_DEPENDENT)
    End Sub
  Partial Private Sub InsertMAS_DESCRIPTION_DISTRIBUTION(instance As MAS_DESCRIPTION_DISTRIBUTION)
    End Sub
  Partial Private Sub UpdateMAS_DESCRIPTION_DISTRIBUTION(instance As MAS_DESCRIPTION_DISTRIBUTION)
    End Sub
  Partial Private Sub DeleteMAS_DESCRIPTION_DISTRIBUTION(instance As MAS_DESCRIPTION_DISTRIBUTION)
    End Sub
  Partial Private Sub InsertMAS_DIAGCODE(instance As MAS_DIAGCODE)
    End Sub
  Partial Private Sub UpdateMAS_DIAGCODE(instance As MAS_DIAGCODE)
    End Sub
  Partial Private Sub DeleteMAS_DIAGCODE(instance As MAS_DIAGCODE)
    End Sub
  Partial Private Sub InsertMAS_DIAGNOSEAGE(instance As MAS_DIAGNOSEAGE)
    End Sub
  Partial Private Sub UpdateMAS_DIAGNOSEAGE(instance As MAS_DIAGNOSEAGE)
    End Sub
  Partial Private Sub DeleteMAS_DIAGNOSEAGE(instance As MAS_DIAGNOSEAGE)
    End Sub
  Partial Private Sub InsertMAS_DIAGNOSEBOOK(instance As MAS_DIAGNOSEBOOK)
    End Sub
  Partial Private Sub UpdateMAS_DIAGNOSEBOOK(instance As MAS_DIAGNOSEBOOK)
    End Sub
  Partial Private Sub DeleteMAS_DIAGNOSEBOOK(instance As MAS_DIAGNOSEBOOK)
    End Sub
  Partial Private Sub InsertMAS_DIAGNOSI(instance As MAS_DIAGNOSI)
    End Sub
  Partial Private Sub UpdateMAS_DIAGNOSI(instance As MAS_DIAGNOSI)
    End Sub
  Partial Private Sub DeleteMAS_DIAGNOSI(instance As MAS_DIAGNOSI)
    End Sub
  Partial Private Sub InsertMAS_DIAGTYPE(instance As MAS_DIAGTYPE)
    End Sub
  Partial Private Sub UpdateMAS_DIAGTYPE(instance As MAS_DIAGTYPE)
    End Sub
  Partial Private Sub DeleteMAS_DIAGTYPE(instance As MAS_DIAGTYPE)
    End Sub
  Partial Private Sub InsertMAS_DISABCAUSE(instance As MAS_DISABCAUSE)
    End Sub
  Partial Private Sub UpdateMAS_DISABCAUSE(instance As MAS_DISABCAUSE)
    End Sub
  Partial Private Sub DeleteMAS_DISABCAUSE(instance As MAS_DISABCAUSE)
    End Sub
  Partial Private Sub InsertMAS_DISABLEREASON(instance As MAS_DISABLEREASON)
    End Sub
  Partial Private Sub UpdateMAS_DISABLEREASON(instance As MAS_DISABLEREASON)
    End Sub
  Partial Private Sub DeleteMAS_DISABLEREASON(instance As MAS_DISABLEREASON)
    End Sub
  Partial Private Sub InsertMAS_DISABTYPE(instance As MAS_DISABTYPE)
    End Sub
  Partial Private Sub UpdateMAS_DISABTYPE(instance As MAS_DISABTYPE)
    End Sub
  Partial Private Sub DeleteMAS_DISABTYPE(instance As MAS_DISABTYPE)
    End Sub
  Partial Private Sub InsertMAS_DISCHARGE(instance As MAS_DISCHARGE)
    End Sub
  Partial Private Sub UpdateMAS_DISCHARGE(instance As MAS_DISCHARGE)
    End Sub
  Partial Private Sub DeleteMAS_DISCHARGE(instance As MAS_DISCHARGE)
    End Sub
  Partial Private Sub InsertMAS_DISCOUNT(instance As MAS_DISCOUNT)
    End Sub
  Partial Private Sub UpdateMAS_DISCOUNT(instance As MAS_DISCOUNT)
    End Sub
  Partial Private Sub DeleteMAS_DISCOUNT(instance As MAS_DISCOUNT)
    End Sub
  Partial Private Sub InsertMAS_DISCOUNTREASON(instance As MAS_DISCOUNTREASON)
    End Sub
  Partial Private Sub UpdateMAS_DISCOUNTREASON(instance As MAS_DISCOUNTREASON)
    End Sub
  Partial Private Sub DeleteMAS_DISCOUNTREASON(instance As MAS_DISCOUNTREASON)
    End Sub
  Partial Private Sub InsertMAS_DISCREPANCY_CUASE(instance As MAS_DISCREPANCY_CUASE)
    End Sub
  Partial Private Sub UpdateMAS_DISCREPANCY_CUASE(instance As MAS_DISCREPANCY_CUASE)
    End Sub
  Partial Private Sub DeleteMAS_DISCREPANCY_CUASE(instance As MAS_DISCREPANCY_CUASE)
    End Sub
  Partial Private Sub InsertMAS_DISCREPANCY_GROUP(instance As MAS_DISCREPANCY_GROUP)
    End Sub
  Partial Private Sub UpdateMAS_DISCREPANCY_GROUP(instance As MAS_DISCREPANCY_GROUP)
    End Sub
  Partial Private Sub DeleteMAS_DISCREPANCY_GROUP(instance As MAS_DISCREPANCY_GROUP)
    End Sub
  Partial Private Sub InsertMAS_DISCREPANCY_TYPE(instance As MAS_DISCREPANCY_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_DISCREPANCY_TYPE(instance As MAS_DISCREPANCY_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_DISCREPANCY_TYPE(instance As MAS_DISCREPANCY_TYPE)
    End Sub
  Partial Private Sub InsertMAS_DISEASE(instance As MAS_DISEASE)
    End Sub
  Partial Private Sub UpdateMAS_DISEASE(instance As MAS_DISEASE)
    End Sub
  Partial Private Sub DeleteMAS_DISEASE(instance As MAS_DISEASE)
    End Sub
  Partial Private Sub InsertMAS_DISTRIBUTE_OUT(instance As MAS_DISTRIBUTE_OUT)
    End Sub
  Partial Private Sub UpdateMAS_DISTRIBUTE_OUT(instance As MAS_DISTRIBUTE_OUT)
    End Sub
  Partial Private Sub DeleteMAS_DISTRIBUTE_OUT(instance As MAS_DISTRIBUTE_OUT)
    End Sub
  Partial Private Sub InsertMAS_DISTRIBUTE_WARD(instance As MAS_DISTRIBUTE_WARD)
    End Sub
  Partial Private Sub UpdateMAS_DISTRIBUTE_WARD(instance As MAS_DISTRIBUTE_WARD)
    End Sub
  Partial Private Sub DeleteMAS_DISTRIBUTE_WARD(instance As MAS_DISTRIBUTE_WARD)
    End Sub
  Partial Private Sub InsertMAS_DISTRICT(instance As MAS_DISTRICT)
    End Sub
  Partial Private Sub UpdateMAS_DISTRICT(instance As MAS_DISTRICT)
    End Sub
  Partial Private Sub DeleteMAS_DISTRICT(instance As MAS_DISTRICT)
    End Sub
  Partial Private Sub InsertMAS_Doctor(instance As MAS_Doctor)
    End Sub
  Partial Private Sub UpdateMAS_Doctor(instance As MAS_Doctor)
    End Sub
  Partial Private Sub DeleteMAS_Doctor(instance As MAS_Doctor)
    End Sub
  Partial Private Sub InsertMAS_Drug(instance As MAS_Drug)
    End Sub
  Partial Private Sub UpdateMAS_Drug(instance As MAS_Drug)
    End Sub
  Partial Private Sub DeleteMAS_Drug(instance As MAS_Drug)
    End Sub
  Partial Private Sub InsertMAS_DRUG_MAIN(instance As MAS_DRUG_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_MAIN(instance As MAS_DRUG_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_MAIN(instance As MAS_DRUG_MAIN)
    End Sub
  Partial Private Sub InsertMAS_DRUG_SETDETAIL(instance As MAS_DRUG_SETDETAIL)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_SETDETAIL(instance As MAS_DRUG_SETDETAIL)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_SETDETAIL(instance As MAS_DRUG_SETDETAIL)
    End Sub
  Partial Private Sub InsertMAS_DRUG_SETMAIN(instance As MAS_DRUG_SETMAIN)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_SETMAIN(instance As MAS_DRUG_SETMAIN)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_SETMAIN(instance As MAS_DRUG_SETMAIN)
    End Sub
  Partial Private Sub InsertMAS_DRUG_TYPE(instance As MAS_DRUG_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_TYPE(instance As MAS_DRUG_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_TYPE(instance As MAS_DRUG_TYPE)
    End Sub
  Partial Private Sub InsertMAS_DRUG_USE(instance As MAS_DRUG_USE)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_USE(instance As MAS_DRUG_USE)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_USE(instance As MAS_DRUG_USE)
    End Sub
  Partial Private Sub InsertMAS_DRUGALLERGY(instance As MAS_DRUGALLERGY)
    End Sub
  Partial Private Sub UpdateMAS_DRUGALLERGY(instance As MAS_DRUGALLERGY)
    End Sub
  Partial Private Sub DeleteMAS_DRUGALLERGY(instance As MAS_DRUGALLERGY)
    End Sub
  Partial Private Sub InsertMAS_DRUGGENERIC_MAIN(instance As MAS_DRUGGENERIC_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_DRUGGENERIC_MAIN(instance As MAS_DRUGGENERIC_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_DRUGGENERIC_MAIN(instance As MAS_DRUGGENERIC_MAIN)
    End Sub
  Partial Private Sub InsertMAS_DRUGMIM(instance As MAS_DRUGMIM)
    End Sub
  Partial Private Sub UpdateMAS_DRUGMIM(instance As MAS_DRUGMIM)
    End Sub
  Partial Private Sub DeleteMAS_DRUGMIM(instance As MAS_DRUGMIM)
    End Sub
  Partial Private Sub InsertMAS_DRUGPREG(instance As MAS_DRUGPREG)
    End Sub
  Partial Private Sub UpdateMAS_DRUGPREG(instance As MAS_DRUGPREG)
    End Sub
  Partial Private Sub DeleteMAS_DRUGPREG(instance As MAS_DRUGPREG)
    End Sub
  Partial Private Sub InsertMAS_DRUGQTY(instance As MAS_DRUGQTY)
    End Sub
  Partial Private Sub UpdateMAS_DRUGQTY(instance As MAS_DRUGQTY)
    End Sub
  Partial Private Sub DeleteMAS_DRUGQTY(instance As MAS_DRUGQTY)
    End Sub
  Partial Private Sub InsertMAS_DRUGSTRENGTH(instance As MAS_DRUGSTRENGTH)
    End Sub
  Partial Private Sub UpdateMAS_DRUGSTRENGTH(instance As MAS_DRUGSTRENGTH)
    End Sub
  Partial Private Sub DeleteMAS_DRUGSTRENGTH(instance As MAS_DRUGSTRENGTH)
    End Sub
  Partial Private Sub InsertMAS_DRUGTHAICATEGORY(instance As MAS_DRUGTHAICATEGORY)
    End Sub
  Partial Private Sub UpdateMAS_DRUGTHAICATEGORY(instance As MAS_DRUGTHAICATEGORY)
    End Sub
  Partial Private Sub DeleteMAS_DRUGTHAICATEGORY(instance As MAS_DRUGTHAICATEGORY)
    End Sub
  Partial Private Sub InsertMAS_DRUGTIME(instance As MAS_DRUGTIME)
    End Sub
  Partial Private Sub UpdateMAS_DRUGTIME(instance As MAS_DRUGTIME)
    End Sub
  Partial Private Sub DeleteMAS_DRUGTIME(instance As MAS_DRUGTIME)
    End Sub
  Partial Private Sub InsertMAS_DURABILITY(instance As MAS_DURABILITY)
    End Sub
  Partial Private Sub UpdateMAS_DURABILITY(instance As MAS_DURABILITY)
    End Sub
  Partial Private Sub DeleteMAS_DURABILITY(instance As MAS_DURABILITY)
    End Sub
  Partial Private Sub InsertMAS_DURATION_MAIN(instance As MAS_DURATION_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_DURATION_MAIN(instance As MAS_DURATION_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_DURATION_MAIN(instance As MAS_DURATION_MAIN)
    End Sub
  Partial Private Sub InsertMAS_EDUCATION(instance As MAS_EDUCATION)
    End Sub
  Partial Private Sub UpdateMAS_EDUCATION(instance As MAS_EDUCATION)
    End Sub
  Partial Private Sub DeleteMAS_EDUCATION(instance As MAS_EDUCATION)
    End Sub
  Partial Private Sub InsertMAS_EDUCATIONLEVEL(instance As MAS_EDUCATIONLEVEL)
    End Sub
  Partial Private Sub UpdateMAS_EDUCATIONLEVEL(instance As MAS_EDUCATIONLEVEL)
    End Sub
  Partial Private Sub DeleteMAS_EDUCATIONLEVEL(instance As MAS_EDUCATIONLEVEL)
    End Sub
  Partial Private Sub InsertMAS_ELEMENTAL(instance As MAS_ELEMENTAL)
    End Sub
  Partial Private Sub UpdateMAS_ELEMENTAL(instance As MAS_ELEMENTAL)
    End Sub
  Partial Private Sub DeleteMAS_ELEMENTAL(instance As MAS_ELEMENTAL)
    End Sub
  Partial Private Sub InsertMAS_EMERGENCE(instance As MAS_EMERGENCE)
    End Sub
  Partial Private Sub UpdateMAS_EMERGENCE(instance As MAS_EMERGENCE)
    End Sub
  Partial Private Sub DeleteMAS_EMERGENCE(instance As MAS_EMERGENCE)
    End Sub
  Partial Private Sub InsertMAS_EXPENSE(instance As MAS_EXPENSE)
    End Sub
  Partial Private Sub UpdateMAS_EXPENSE(instance As MAS_EXPENSE)
    End Sub
  Partial Private Sub DeleteMAS_EXPENSE(instance As MAS_EXPENSE)
    End Sub
  Partial Private Sub InsertMAS_F18VACCINE(instance As MAS_F18VACCINE)
    End Sub
  Partial Private Sub UpdateMAS_F18VACCINE(instance As MAS_F18VACCINE)
    End Sub
  Partial Private Sub DeleteMAS_F18VACCINE(instance As MAS_F18VACCINE)
    End Sub
  Partial Private Sub InsertMAS_FLOOR_INBUILDING(instance As MAS_FLOOR_INBUILDING)
    End Sub
  Partial Private Sub UpdateMAS_FLOOR_INBUILDING(instance As MAS_FLOOR_INBUILDING)
    End Sub
  Partial Private Sub DeleteMAS_FLOOR_INBUILDING(instance As MAS_FLOOR_INBUILDING)
    End Sub
  Partial Private Sub InsertMAS_FOOD(instance As MAS_FOOD)
    End Sub
  Partial Private Sub UpdateMAS_FOOD(instance As MAS_FOOD)
    End Sub
  Partial Private Sub DeleteMAS_FOOD(instance As MAS_FOOD)
    End Sub
  Partial Private Sub InsertMAS_FOOD_NATURE(instance As MAS_FOOD_NATURE)
    End Sub
  Partial Private Sub UpdateMAS_FOOD_NATURE(instance As MAS_FOOD_NATURE)
    End Sub
  Partial Private Sub DeleteMAS_FOOD_NATURE(instance As MAS_FOOD_NATURE)
    End Sub
  Partial Private Sub InsertMAS_FORMAT_FOOD(instance As MAS_FORMAT_FOOD)
    End Sub
  Partial Private Sub UpdateMAS_FORMAT_FOOD(instance As MAS_FORMAT_FOOD)
    End Sub
  Partial Private Sub DeleteMAS_FORMAT_FOOD(instance As MAS_FORMAT_FOOD)
    End Sub
  Partial Private Sub InsertMAS_FPTYPE(instance As MAS_FPTYPE)
    End Sub
  Partial Private Sub UpdateMAS_FPTYPE(instance As MAS_FPTYPE)
    End Sub
  Partial Private Sub DeleteMAS_FPTYPE(instance As MAS_FPTYPE)
    End Sub
  Partial Private Sub InsertMAS_FSTATUS(instance As MAS_FSTATUS)
    End Sub
  Partial Private Sub UpdateMAS_FSTATUS(instance As MAS_FSTATUS)
    End Sub
  Partial Private Sub DeleteMAS_FSTATUS(instance As MAS_FSTATUS)
    End Sub
  Partial Private Sub InsertMAS_FUNCTIONAL_TEST(instance As MAS_FUNCTIONAL_TEST)
    End Sub
  Partial Private Sub UpdateMAS_FUNCTIONAL_TEST(instance As MAS_FUNCTIONAL_TEST)
    End Sub
  Partial Private Sub DeleteMAS_FUNCTIONAL_TEST(instance As MAS_FUNCTIONAL_TEST)
    End Sub
  Partial Private Sub InsertMAS_GARBAGE(instance As MAS_GARBAGE)
    End Sub
  Partial Private Sub UpdateMAS_GARBAGE(instance As MAS_GARBAGE)
    End Sub
  Partial Private Sub DeleteMAS_GARBAGE(instance As MAS_GARBAGE)
    End Sub
  Partial Private Sub InsertMAS_GARBAGE_VILLAGE(instance As MAS_GARBAGE_VILLAGE)
    End Sub
  Partial Private Sub UpdateMAS_GARBAGE_VILLAGE(instance As MAS_GARBAGE_VILLAGE)
    End Sub
  Partial Private Sub DeleteMAS_GARBAGE_VILLAGE(instance As MAS_GARBAGE_VILLAGE)
    End Sub
  Partial Private Sub InsertMAS_GENDER(instance As MAS_GENDER)
    End Sub
  Partial Private Sub UpdateMAS_GENDER(instance As MAS_GENDER)
    End Sub
  Partial Private Sub DeleteMAS_GENDER(instance As MAS_GENDER)
    End Sub
  Partial Private Sub InsertMAS_GENERICDRUG(instance As MAS_GENERICDRUG)
    End Sub
  Partial Private Sub UpdateMAS_GENERICDRUG(instance As MAS_GENERICDRUG)
    End Sub
  Partial Private Sub DeleteMAS_GENERICDRUG(instance As MAS_GENERICDRUG)
    End Sub
  Partial Private Sub InsertMAS_GROUPCOST(instance As MAS_GROUPCOST)
    End Sub
  Partial Private Sub UpdateMAS_GROUPCOST(instance As MAS_GROUPCOST)
    End Sub
  Partial Private Sub DeleteMAS_GROUPCOST(instance As MAS_GROUPCOST)
    End Sub
  Partial Private Sub InsertMAS_GROUPITEM_MAIN(instance As MAS_GROUPITEM_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_GROUPITEM_MAIN(instance As MAS_GROUPITEM_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_GROUPITEM_MAIN(instance As MAS_GROUPITEM_MAIN)
    End Sub
  Partial Private Sub InsertMAS_GROUPMEDICAL_SUPPLy(instance As MAS_GROUPMEDICAL_SUPPLy)
    End Sub
  Partial Private Sub UpdateMAS_GROUPMEDICAL_SUPPLy(instance As MAS_GROUPMEDICAL_SUPPLy)
    End Sub
  Partial Private Sub DeleteMAS_GROUPMEDICAL_SUPPLy(instance As MAS_GROUPMEDICAL_SUPPLy)
    End Sub
  Partial Private Sub InsertMAS_GROUPTYPE(instance As MAS_GROUPTYPE)
    End Sub
  Partial Private Sub UpdateMAS_GROUPTYPE(instance As MAS_GROUPTYPE)
    End Sub
  Partial Private Sub DeleteMAS_GROUPTYPE(instance As MAS_GROUPTYPE)
    End Sub
  Partial Private Sub InsertMAS_HEAL(instance As MAS_HEAL)
    End Sub
  Partial Private Sub UpdateMAS_HEAL(instance As MAS_HEAL)
    End Sub
  Partial Private Sub DeleteMAS_HEAL(instance As MAS_HEAL)
    End Sub
  Partial Private Sub InsertMAS_HEALTHREGION(instance As MAS_HEALTHREGION)
    End Sub
  Partial Private Sub UpdateMAS_HEALTHREGION(instance As MAS_HEALTHREGION)
    End Sub
  Partial Private Sub DeleteMAS_HEALTHREGION(instance As MAS_HEALTHREGION)
    End Sub
  Partial Private Sub InsertMAS_HISTORY_MEDICALPRICE(instance As MAS_HISTORY_MEDICALPRICE)
    End Sub
  Partial Private Sub UpdateMAS_HISTORY_MEDICALPRICE(instance As MAS_HISTORY_MEDICALPRICE)
    End Sub
  Partial Private Sub DeleteMAS_HISTORY_MEDICALPRICE(instance As MAS_HISTORY_MEDICALPRICE)
    End Sub
  Partial Private Sub InsertMAS_HOLIDAYDATE(instance As MAS_HOLIDAYDATE)
    End Sub
  Partial Private Sub UpdateMAS_HOLIDAYDATE(instance As MAS_HOLIDAYDATE)
    End Sub
  Partial Private Sub DeleteMAS_HOLIDAYDATE(instance As MAS_HOLIDAYDATE)
    End Sub
  Partial Private Sub InsertMAS_HOPITALMAIN(instance As MAS_HOPITALMAIN)
    End Sub
  Partial Private Sub UpdateMAS_HOPITALMAIN(instance As MAS_HOPITALMAIN)
    End Sub
  Partial Private Sub DeleteMAS_HOPITALMAIN(instance As MAS_HOPITALMAIN)
    End Sub
  Partial Private Sub InsertMAS_Hospital(instance As MAS_Hospital)
    End Sub
  Partial Private Sub UpdateMAS_Hospital(instance As MAS_Hospital)
    End Sub
  Partial Private Sub DeleteMAS_Hospital(instance As MAS_Hospital)
    End Sub
  Partial Private Sub InsertMAS_HOSPITALCATEGORY(instance As MAS_HOSPITALCATEGORY)
    End Sub
  Partial Private Sub UpdateMAS_HOSPITALCATEGORY(instance As MAS_HOSPITALCATEGORY)
    End Sub
  Partial Private Sub DeleteMAS_HOSPITALCATEGORY(instance As MAS_HOSPITALCATEGORY)
    End Sub
  Partial Private Sub InsertMAS_HOUSETYPE(instance As MAS_HOUSETYPE)
    End Sub
  Partial Private Sub UpdateMAS_HOUSETYPE(instance As MAS_HOUSETYPE)
    End Sub
  Partial Private Sub DeleteMAS_HOUSETYPE(instance As MAS_HOUSETYPE)
    End Sub
  Partial Private Sub InsertMAS_HOUSETYPE_HOME(instance As MAS_HOUSETYPE_HOME)
    End Sub
  Partial Private Sub UpdateMAS_HOUSETYPE_HOME(instance As MAS_HOUSETYPE_HOME)
    End Sub
  Partial Private Sub DeleteMAS_HOUSETYPE_HOME(instance As MAS_HOUSETYPE_HOME)
    End Sub
  Partial Private Sub InsertMAS_HOUSING(instance As MAS_HOUSING)
    End Sub
  Partial Private Sub UpdateMAS_HOUSING(instance As MAS_HOUSING)
    End Sub
  Partial Private Sub DeleteMAS_HOUSING(instance As MAS_HOUSING)
    End Sub
  Partial Private Sub InsertMAS_HOW_TO_PRICE(instance As MAS_HOW_TO_PRICE)
    End Sub
  Partial Private Sub UpdateMAS_HOW_TO_PRICE(instance As MAS_HOW_TO_PRICE)
    End Sub
  Partial Private Sub DeleteMAS_HOW_TO_PRICE(instance As MAS_HOW_TO_PRICE)
    End Sub
  Partial Private Sub InsertMAS_ICF(instance As MAS_ICF)
    End Sub
  Partial Private Sub UpdateMAS_ICF(instance As MAS_ICF)
    End Sub
  Partial Private Sub DeleteMAS_ICF(instance As MAS_ICF)
    End Sub
  Partial Private Sub InsertMAS_IDENTITYBOOK(instance As MAS_IDENTITYBOOK)
    End Sub
  Partial Private Sub UpdateMAS_IDENTITYBOOK(instance As MAS_IDENTITYBOOK)
    End Sub
  Partial Private Sub DeleteMAS_IDENTITYBOOK(instance As MAS_IDENTITYBOOK)
    End Sub
  Partial Private Sub InsertMAS_INFORMANT(instance As MAS_INFORMANT)
    End Sub
  Partial Private Sub UpdateMAS_INFORMANT(instance As MAS_INFORMANT)
    End Sub
  Partial Private Sub DeleteMAS_INFORMANT(instance As MAS_INFORMANT)
    End Sub
  Partial Private Sub InsertMAS_INSTYPE_NEW(instance As MAS_INSTYPE_NEW)
    End Sub
  Partial Private Sub UpdateMAS_INSTYPE_NEW(instance As MAS_INSTYPE_NEW)
    End Sub
  Partial Private Sub DeleteMAS_INSTYPE_NEW(instance As MAS_INSTYPE_NEW)
    End Sub
  Partial Private Sub InsertMAS_INSTYPE_OLD(instance As MAS_INSTYPE_OLD)
    End Sub
  Partial Private Sub UpdateMAS_INSTYPE_OLD(instance As MAS_INSTYPE_OLD)
    End Sub
  Partial Private Sub DeleteMAS_INSTYPE_OLD(instance As MAS_INSTYPE_OLD)
    End Sub
  Partial Private Sub InsertMAS_INTIME(instance As MAS_INTIME)
    End Sub
  Partial Private Sub UpdateMAS_INTIME(instance As MAS_INTIME)
    End Sub
  Partial Private Sub DeleteMAS_INTIME(instance As MAS_INTIME)
    End Sub
  Partial Private Sub InsertMAS_ITEM_THAIHERB(instance As MAS_ITEM_THAIHERB)
    End Sub
  Partial Private Sub UpdateMAS_ITEM_THAIHERB(instance As MAS_ITEM_THAIHERB)
    End Sub
  Partial Private Sub DeleteMAS_ITEM_THAIHERB(instance As MAS_ITEM_THAIHERB)
    End Sub
  Partial Private Sub InsertMAS_ITEMDRUG_THAIHERB(instance As MAS_ITEMDRUG_THAIHERB)
    End Sub
  Partial Private Sub UpdateMAS_ITEMDRUG_THAIHERB(instance As MAS_ITEMDRUG_THAIHERB)
    End Sub
  Partial Private Sub DeleteMAS_ITEMDRUG_THAIHERB(instance As MAS_ITEMDRUG_THAIHERB)
    End Sub
  Partial Private Sub InsertMAS_KEYWORDEM(instance As MAS_KEYWORDEM)
    End Sub
  Partial Private Sub UpdateMAS_KEYWORDEM(instance As MAS_KEYWORDEM)
    End Sub
  Partial Private Sub DeleteMAS_KEYWORDEM(instance As MAS_KEYWORDEM)
    End Sub
  Partial Private Sub InsertMAS_KEYWORDEM_HXPI(instance As MAS_KEYWORDEM_HXPI)
    End Sub
  Partial Private Sub UpdateMAS_KEYWORDEM_HXPI(instance As MAS_KEYWORDEM_HXPI)
    End Sub
  Partial Private Sub DeleteMAS_KEYWORDEM_HXPI(instance As MAS_KEYWORDEM_HXPI)
    End Sub
  Partial Private Sub InsertMAS_LAB(instance As MAS_LAB)
    End Sub
  Partial Private Sub UpdateMAS_LAB(instance As MAS_LAB)
    End Sub
  Partial Private Sub DeleteMAS_LAB(instance As MAS_LAB)
    End Sub
  Partial Private Sub InsertMAS_LAB_BACTERIA(instance As MAS_LAB_BACTERIA)
    End Sub
  Partial Private Sub UpdateMAS_LAB_BACTERIA(instance As MAS_LAB_BACTERIA)
    End Sub
  Partial Private Sub DeleteMAS_LAB_BACTERIA(instance As MAS_LAB_BACTERIA)
    End Sub
  Partial Private Sub InsertMAS_LAB_EXAMINATION(instance As MAS_LAB_EXAMINATION)
    End Sub
  Partial Private Sub UpdateMAS_LAB_EXAMINATION(instance As MAS_LAB_EXAMINATION)
    End Sub
  Partial Private Sub DeleteMAS_LAB_EXAMINATION(instance As MAS_LAB_EXAMINATION)
    End Sub
  Partial Private Sub InsertMAS_LAB_ITEMMETHOD(instance As MAS_LAB_ITEMMETHOD)
    End Sub
  Partial Private Sub UpdateMAS_LAB_ITEMMETHOD(instance As MAS_LAB_ITEMMETHOD)
    End Sub
  Partial Private Sub DeleteMAS_LAB_ITEMMETHOD(instance As MAS_LAB_ITEMMETHOD)
    End Sub
  Partial Private Sub InsertMAS_LAB_LEVELUSE_BACTERIA(instance As MAS_LAB_LEVELUSE_BACTERIA)
    End Sub
  Partial Private Sub UpdateMAS_LAB_LEVELUSE_BACTERIA(instance As MAS_LAB_LEVELUSE_BACTERIA)
    End Sub
  Partial Private Sub DeleteMAS_LAB_LEVELUSE_BACTERIA(instance As MAS_LAB_LEVELUSE_BACTERIA)
    End Sub
  Partial Private Sub InsertMAS_LAB_LI(instance As MAS_LAB_LI)
    End Sub
  Partial Private Sub UpdateMAS_LAB_LI(instance As MAS_LAB_LI)
    End Sub
  Partial Private Sub DeleteMAS_LAB_LI(instance As MAS_LAB_LI)
    End Sub
  Partial Private Sub InsertMAS_LAB_LIS_COMMENT(instance As MAS_LAB_LIS_COMMENT)
    End Sub
  Partial Private Sub UpdateMAS_LAB_LIS_COMMENT(instance As MAS_LAB_LIS_COMMENT)
    End Sub
  Partial Private Sub DeleteMAS_LAB_LIS_COMMENT(instance As MAS_LAB_LIS_COMMENT)
    End Sub
  Partial Private Sub InsertMAS_LAB_LIS_TESTCODE(instance As MAS_LAB_LIS_TESTCODE)
    End Sub
  Partial Private Sub UpdateMAS_LAB_LIS_TESTCODE(instance As MAS_LAB_LIS_TESTCODE)
    End Sub
  Partial Private Sub DeleteMAS_LAB_LIS_TESTCODE(instance As MAS_LAB_LIS_TESTCODE)
    End Sub
  Partial Private Sub InsertMAS_LAB_PHYSIOLOGY(instance As MAS_LAB_PHYSIOLOGY)
    End Sub
  Partial Private Sub UpdateMAS_LAB_PHYSIOLOGY(instance As MAS_LAB_PHYSIOLOGY)
    End Sub
  Partial Private Sub DeleteMAS_LAB_PHYSIOLOGY(instance As MAS_LAB_PHYSIOLOGY)
    End Sub
  Partial Private Sub InsertMAS_LAB_SENSITIVE_BACTERIA(instance As MAS_LAB_SENSITIVE_BACTERIA)
    End Sub
  Partial Private Sub UpdateMAS_LAB_SENSITIVE_BACTERIA(instance As MAS_LAB_SENSITIVE_BACTERIA)
    End Sub
  Partial Private Sub DeleteMAS_LAB_SENSITIVE_BACTERIA(instance As MAS_LAB_SENSITIVE_BACTERIA)
    End Sub
  Partial Private Sub InsertMAS_LAB_SETDETAIL(instance As MAS_LAB_SETDETAIL)
    End Sub
  Partial Private Sub UpdateMAS_LAB_SETDETAIL(instance As MAS_LAB_SETDETAIL)
    End Sub
  Partial Private Sub DeleteMAS_LAB_SETDETAIL(instance As MAS_LAB_SETDETAIL)
    End Sub
  Partial Private Sub InsertMAS_LAB_SETMAIN(instance As MAS_LAB_SETMAIN)
    End Sub
  Partial Private Sub UpdateMAS_LAB_SETMAIN(instance As MAS_LAB_SETMAIN)
    End Sub
  Partial Private Sub DeleteMAS_LAB_SETMAIN(instance As MAS_LAB_SETMAIN)
    End Sub
  Partial Private Sub InsertMAS_LAB_SETTRANSMISSION(instance As MAS_LAB_SETTRANSMISSION)
    End Sub
  Partial Private Sub UpdateMAS_LAB_SETTRANSMISSION(instance As MAS_LAB_SETTRANSMISSION)
    End Sub
  Partial Private Sub DeleteMAS_LAB_SETTRANSMISSION(instance As MAS_LAB_SETTRANSMISSION)
    End Sub
  Partial Private Sub InsertMAS_LAB_TYPE_Pathology(instance As MAS_LAB_TYPE_Pathology)
    End Sub
  Partial Private Sub UpdateMAS_LAB_TYPE_Pathology(instance As MAS_LAB_TYPE_Pathology)
    End Sub
  Partial Private Sub DeleteMAS_LAB_TYPE_Pathology(instance As MAS_LAB_TYPE_Pathology)
    End Sub
  Partial Private Sub InsertMAS_LABITEM(instance As MAS_LABITEM)
    End Sub
  Partial Private Sub UpdateMAS_LABITEM(instance As MAS_LABITEM)
    End Sub
  Partial Private Sub DeleteMAS_LABITEM(instance As MAS_LABITEM)
    End Sub
  Partial Private Sub InsertMAS_LABMETHOD(instance As MAS_LABMETHOD)
    End Sub
  Partial Private Sub UpdateMAS_LABMETHOD(instance As MAS_LABMETHOD)
    End Sub
  Partial Private Sub DeleteMAS_LABMETHOD(instance As MAS_LABMETHOD)
    End Sub
  Partial Private Sub InsertMAS_LABOR(instance As MAS_LABOR)
    End Sub
  Partial Private Sub UpdateMAS_LABOR(instance As MAS_LABOR)
    End Sub
  Partial Private Sub DeleteMAS_LABOR(instance As MAS_LABOR)
    End Sub
  Partial Private Sub InsertMAS_LABOUTPUT(instance As MAS_LABOUTPUT)
    End Sub
  Partial Private Sub UpdateMAS_LABOUTPUT(instance As MAS_LABOUTPUT)
    End Sub
  Partial Private Sub DeleteMAS_LABOUTPUT(instance As MAS_LABOUTPUT)
    End Sub
  Partial Private Sub InsertMAS_LABOUTPUTREF(instance As MAS_LABOUTPUTREF)
    End Sub
  Partial Private Sub UpdateMAS_LABOUTPUTREF(instance As MAS_LABOUTPUTREF)
    End Sub
  Partial Private Sub DeleteMAS_LABOUTPUTREF(instance As MAS_LABOUTPUTREF)
    End Sub
  Partial Private Sub InsertMAS_LABPHYSIOLOGIC(instance As MAS_LABPHYSIOLOGIC)
    End Sub
  Partial Private Sub UpdateMAS_LABPHYSIOLOGIC(instance As MAS_LABPHYSIOLOGIC)
    End Sub
  Partial Private Sub DeleteMAS_LABPHYSIOLOGIC(instance As MAS_LABPHYSIOLOGIC)
    End Sub
  Partial Private Sub InsertMAS_LabSenseDisc(instance As MAS_LabSenseDisc)
    End Sub
  Partial Private Sub UpdateMAS_LabSenseDisc(instance As MAS_LabSenseDisc)
    End Sub
  Partial Private Sub DeleteMAS_LabSenseDisc(instance As MAS_LabSenseDisc)
    End Sub
  Partial Private Sub InsertMAS_LEVELSEVERITY(instance As MAS_LEVELSEVERITY)
    End Sub
  Partial Private Sub UpdateMAS_LEVELSEVERITY(instance As MAS_LEVELSEVERITY)
    End Sub
  Partial Private Sub DeleteMAS_LEVELSEVERITY(instance As MAS_LEVELSEVERITY)
    End Sub
  Partial Private Sub InsertMAS_LIGHT(instance As MAS_LIGHT)
    End Sub
  Partial Private Sub UpdateMAS_LIGHT(instance As MAS_LIGHT)
    End Sub
  Partial Private Sub DeleteMAS_LIGHT(instance As MAS_LIGHT)
    End Sub
  Partial Private Sub InsertMAS_LOCATION(instance As MAS_LOCATION)
    End Sub
  Partial Private Sub UpdateMAS_LOCATION(instance As MAS_LOCATION)
    End Sub
  Partial Private Sub DeleteMAS_LOCATION(instance As MAS_LOCATION)
    End Sub
  Partial Private Sub InsertMAS_LOCATYPE(instance As MAS_LOCATYPE)
    End Sub
  Partial Private Sub UpdateMAS_LOCATYPE(instance As MAS_LOCATYPE)
    End Sub
  Partial Private Sub DeleteMAS_LOCATYPE(instance As MAS_LOCATYPE)
    End Sub
  Partial Private Sub InsertMAS_Major(instance As MAS_Major)
    End Sub
  Partial Private Sub UpdateMAS_Major(instance As MAS_Major)
    End Sub
  Partial Private Sub DeleteMAS_Major(instance As MAS_Major)
    End Sub
  Partial Private Sub InsertMAS_Major_Check(instance As MAS_Major_Check)
    End Sub
  Partial Private Sub UpdateMAS_Major_Check(instance As MAS_Major_Check)
    End Sub
  Partial Private Sub DeleteMAS_Major_Check(instance As MAS_Major_Check)
    End Sub
  Partial Private Sub InsertMAS_MANUFACTRER_DRUG(instance As MAS_MANUFACTRER_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_MANUFACTRER_DRUG(instance As MAS_MANUFACTRER_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_MANUFACTRER_DRUG(instance As MAS_MANUFACTRER_DRUG)
    End Sub
  Partial Private Sub InsertMAS_MASSAGEPOSITION(instance As MAS_MASSAGEPOSITION)
    End Sub
  Partial Private Sub UpdateMAS_MASSAGEPOSITION(instance As MAS_MASSAGEPOSITION)
    End Sub
  Partial Private Sub DeleteMAS_MASSAGEPOSITION(instance As MAS_MASSAGEPOSITION)
    End Sub
  Partial Private Sub InsertMAS_MC(instance As MAS_MC)
    End Sub
  Partial Private Sub UpdateMAS_MC(instance As MAS_MC)
    End Sub
  Partial Private Sub DeleteMAS_MC(instance As MAS_MC)
    End Sub
  Partial Private Sub InsertMAS_MC_MCPAYERNAME(instance As MAS_MC_MCPAYERNAME)
    End Sub
  Partial Private Sub UpdateMAS_MC_MCPAYERNAME(instance As MAS_MC_MCPAYERNAME)
    End Sub
  Partial Private Sub DeleteMAS_MC_MCPAYERNAME(instance As MAS_MC_MCPAYERNAME)
    End Sub
  Partial Private Sub InsertMAS_MCPatientGroup(instance As MAS_MCPatientGroup)
    End Sub
  Partial Private Sub UpdateMAS_MCPatientGroup(instance As MAS_MCPatientGroup)
    End Sub
  Partial Private Sub DeleteMAS_MCPatientGroup(instance As MAS_MCPatientGroup)
    End Sub
  Partial Private Sub InsertMAS_MCPAYER(instance As MAS_MCPAYER)
    End Sub
  Partial Private Sub UpdateMAS_MCPAYER(instance As MAS_MCPAYER)
    End Sub
  Partial Private Sub DeleteMAS_MCPAYER(instance As MAS_MCPAYER)
    End Sub
  Partial Private Sub InsertMAS_MCPAYERNAME(instance As MAS_MCPAYERNAME)
    End Sub
  Partial Private Sub UpdateMAS_MCPAYERNAME(instance As MAS_MCPAYERNAME)
    End Sub
  Partial Private Sub DeleteMAS_MCPAYERNAME(instance As MAS_MCPAYERNAME)
    End Sub
  Partial Private Sub InsertMAS_MED_MAIN(instance As MAS_MED_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_MED_MAIN(instance As MAS_MED_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_MED_MAIN(instance As MAS_MED_MAIN)
    End Sub
  Partial Private Sub InsertMAS_MED_PRICESELL(instance As MAS_MED_PRICESELL)
    End Sub
  Partial Private Sub UpdateMAS_MED_PRICESELL(instance As MAS_MED_PRICESELL)
    End Sub
  Partial Private Sub DeleteMAS_MED_PRICESELL(instance As MAS_MED_PRICESELL)
    End Sub
  Partial Private Sub InsertMAS_MEDICAL_SUPPLy(instance As MAS_MEDICAL_SUPPLy)
    End Sub
  Partial Private Sub UpdateMAS_MEDICAL_SUPPLy(instance As MAS_MEDICAL_SUPPLy)
    End Sub
  Partial Private Sub DeleteMAS_MEDICAL_SUPPLy(instance As MAS_MEDICAL_SUPPLy)
    End Sub
  Partial Private Sub InsertMAS_MEDICINE_COST(instance As MAS_MEDICINE_COST)
    End Sub
  Partial Private Sub UpdateMAS_MEDICINE_COST(instance As MAS_MEDICINE_COST)
    End Sub
  Partial Private Sub DeleteMAS_MEDICINE_COST(instance As MAS_MEDICINE_COST)
    End Sub
  Partial Private Sub InsertMAS_MEDICINE_DUE(instance As MAS_MEDICINE_DUE)
    End Sub
  Partial Private Sub UpdateMAS_MEDICINE_DUE(instance As MAS_MEDICINE_DUE)
    End Sub
  Partial Private Sub DeleteMAS_MEDICINE_DUE(instance As MAS_MEDICINE_DUE)
    End Sub
  Partial Private Sub InsertMAS_MEDICINE_INGREDENT(instance As MAS_MEDICINE_INGREDENT)
    End Sub
  Partial Private Sub UpdateMAS_MEDICINE_INGREDENT(instance As MAS_MEDICINE_INGREDENT)
    End Sub
  Partial Private Sub DeleteMAS_MEDICINE_INGREDENT(instance As MAS_MEDICINE_INGREDENT)
    End Sub
  Partial Private Sub InsertMAS_MEDICINE_MAIN(instance As MAS_MEDICINE_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_MEDICINE_MAIN(instance As MAS_MEDICINE_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_MEDICINE_MAIN(instance As MAS_MEDICINE_MAIN)
    End Sub
  Partial Private Sub InsertMAS_MENUSY(instance As MAS_MENUSY)
    End Sub
  Partial Private Sub UpdateMAS_MENUSY(instance As MAS_MENUSY)
    End Sub
  Partial Private Sub DeleteMAS_MENUSY(instance As MAS_MENUSY)
    End Sub
  Partial Private Sub InsertMAS_METHOD_CLAIM(instance As MAS_METHOD_CLAIM)
    End Sub
  Partial Private Sub UpdateMAS_METHOD_CLAIM(instance As MAS_METHOD_CLAIM)
    End Sub
  Partial Private Sub DeleteMAS_METHOD_CLAIM(instance As MAS_METHOD_CLAIM)
    End Sub
  Partial Private Sub InsertMAS_MFOOD(instance As MAS_MFOOD)
    End Sub
  Partial Private Sub UpdateMAS_MFOOD(instance As MAS_MFOOD)
    End Sub
  Partial Private Sub DeleteMAS_MFOOD(instance As MAS_MFOOD)
    End Sub
  Partial Private Sub InsertMAS_MILITARY(instance As MAS_MILITARY)
    End Sub
  Partial Private Sub UpdateMAS_MILITARY(instance As MAS_MILITARY)
    End Sub
  Partial Private Sub DeleteMAS_MILITARY(instance As MAS_MILITARY)
    End Sub
  Partial Private Sub InsertMAS_MINUTE(instance As MAS_MINUTE)
    End Sub
  Partial Private Sub UpdateMAS_MINUTE(instance As MAS_MINUTE)
    End Sub
  Partial Private Sub DeleteMAS_MINUTE(instance As MAS_MINUTE)
    End Sub
  Partial Private Sub InsertMAS_MRLIFETOMEGROUP(instance As MAS_MRLIFETOMEGROUP)
    End Sub
  Partial Private Sub UpdateMAS_MRLIFETOMEGROUP(instance As MAS_MRLIFETOMEGROUP)
    End Sub
  Partial Private Sub DeleteMAS_MRLIFETOMEGROUP(instance As MAS_MRLIFETOMEGROUP)
    End Sub
  Partial Private Sub InsertMAS_MSTATUS(instance As MAS_MSTATUS)
    End Sub
  Partial Private Sub UpdateMAS_MSTATUS(instance As MAS_MSTATUS)
    End Sub
  Partial Private Sub DeleteMAS_MSTATUS(instance As MAS_MSTATUS)
    End Sub
  Partial Private Sub InsertMAS_NAMECHANGE(instance As MAS_NAMECHANGE)
    End Sub
  Partial Private Sub UpdateMAS_NAMECHANGE(instance As MAS_NAMECHANGE)
    End Sub
  Partial Private Sub DeleteMAS_NAMECHANGE(instance As MAS_NAMECHANGE)
    End Sub
  Partial Private Sub InsertMAS_NAMECHANGEDOC(instance As MAS_NAMECHANGEDOC)
    End Sub
  Partial Private Sub UpdateMAS_NAMECHANGEDOC(instance As MAS_NAMECHANGEDOC)
    End Sub
  Partial Private Sub DeleteMAS_NAMECHANGEDOC(instance As MAS_NAMECHANGEDOC)
    End Sub
  Partial Private Sub InsertMAS_NARCOTICTYPE(instance As MAS_NARCOTICTYPE)
    End Sub
  Partial Private Sub UpdateMAS_NARCOTICTYPE(instance As MAS_NARCOTICTYPE)
    End Sub
  Partial Private Sub DeleteMAS_NARCOTICTYPE(instance As MAS_NARCOTICTYPE)
    End Sub
  Partial Private Sub InsertMAS_NATION(instance As MAS_NATION)
    End Sub
  Partial Private Sub UpdateMAS_NATION(instance As MAS_NATION)
    End Sub
  Partial Private Sub DeleteMAS_NATION(instance As MAS_NATION)
    End Sub
  Partial Private Sub InsertMAS_NOFPCAUSE(instance As MAS_NOFPCAUSE)
    End Sub
  Partial Private Sub UpdateMAS_NOFPCAUSE(instance As MAS_NOFPCAUSE)
    End Sub
  Partial Private Sub DeleteMAS_NOFPCAUSE(instance As MAS_NOFPCAUSE)
    End Sub
  Partial Private Sub InsertMAS_NONEDREASON(instance As MAS_NONEDREASON)
    End Sub
  Partial Private Sub UpdateMAS_NONEDREASON(instance As MAS_NONEDREASON)
    End Sub
  Partial Private Sub DeleteMAS_NONEDREASON(instance As MAS_NONEDREASON)
    End Sub
  Partial Private Sub InsertMAS_NORMALAPP(instance As MAS_NORMALAPP)
    End Sub
  Partial Private Sub UpdateMAS_NORMALAPP(instance As MAS_NORMALAPP)
    End Sub
  Partial Private Sub DeleteMAS_NORMALAPP(instance As MAS_NORMALAPP)
    End Sub
  Partial Private Sub InsertMAS_NURSECARE(instance As MAS_NURSECARE)
    End Sub
  Partial Private Sub UpdateMAS_NURSECARE(instance As MAS_NURSECARE)
    End Sub
  Partial Private Sub DeleteMAS_NURSECARE(instance As MAS_NURSECARE)
    End Sub
  Partial Private Sub InsertMAS_Nursing_service(instance As MAS_Nursing_service)
    End Sub
  Partial Private Sub UpdateMAS_Nursing_service(instance As MAS_Nursing_service)
    End Sub
  Partial Private Sub DeleteMAS_Nursing_service(instance As MAS_Nursing_service)
    End Sub
  Partial Private Sub InsertMAS_OBJECTIVE_DRUG(instance As MAS_OBJECTIVE_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_OBJECTIVE_DRUG(instance As MAS_OBJECTIVE_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_OBJECTIVE_DRUG(instance As MAS_OBJECTIVE_DRUG)
    End Sub
  Partial Private Sub InsertMAS_OBJECTIVECHECK(instance As MAS_OBJECTIVECHECK)
    End Sub
  Partial Private Sub UpdateMAS_OBJECTIVECHECK(instance As MAS_OBJECTIVECHECK)
    End Sub
  Partial Private Sub DeleteMAS_OBJECTIVECHECK(instance As MAS_OBJECTIVECHECK)
    End Sub
  Partial Private Sub InsertMAS_OCCUPATION_DRUG(instance As MAS_OCCUPATION_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_OCCUPATION_DRUG(instance As MAS_OCCUPATION_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_OCCUPATION_DRUG(instance As MAS_OCCUPATION_DRUG)
    End Sub
  Partial Private Sub InsertMAS_OCCUPATION_NEW(instance As MAS_OCCUPATION_NEW)
    End Sub
  Partial Private Sub UpdateMAS_OCCUPATION_NEW(instance As MAS_OCCUPATION_NEW)
    End Sub
  Partial Private Sub DeleteMAS_OCCUPATION_NEW(instance As MAS_OCCUPATION_NEW)
    End Sub
  Partial Private Sub InsertMAS_OCCUPATION_OLD(instance As MAS_OCCUPATION_OLD)
    End Sub
  Partial Private Sub UpdateMAS_OCCUPATION_OLD(instance As MAS_OCCUPATION_OLD)
    End Sub
  Partial Private Sub DeleteMAS_OCCUPATION_OLD(instance As MAS_OCCUPATION_OLD)
    End Sub
  Partial Private Sub InsertMAS_OCCUPATION(instance As MAS_OCCUPATION)
    End Sub
  Partial Private Sub UpdateMAS_OCCUPATION(instance As MAS_OCCUPATION)
    End Sub
  Partial Private Sub DeleteMAS_OCCUPATION(instance As MAS_OCCUPATION)
    End Sub
  Partial Private Sub InsertMAS_ORGANIZATION(instance As MAS_ORGANIZATION)
    End Sub
  Partial Private Sub UpdateMAS_ORGANIZATION(instance As MAS_ORGANIZATION)
    End Sub
  Partial Private Sub DeleteMAS_ORGANIZATION(instance As MAS_ORGANIZATION)
    End Sub
  Partial Private Sub InsertMAS_PATIENT_TYPE(instance As MAS_PATIENT_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_PATIENT_TYPE(instance As MAS_PATIENT_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_PATIENT_TYPE(instance As MAS_PATIENT_TYPE)
    End Sub
  Partial Private Sub InsertMAS_PATIENTGROUP(instance As MAS_PATIENTGROUP)
    End Sub
  Partial Private Sub UpdateMAS_PATIENTGROUP(instance As MAS_PATIENTGROUP)
    End Sub
  Partial Private Sub DeleteMAS_PATIENTGROUP(instance As MAS_PATIENTGROUP)
    End Sub
  Partial Private Sub InsertMAS_PATIENTGROUPMINISTRY(instance As MAS_PATIENTGROUPMINISTRY)
    End Sub
  Partial Private Sub UpdateMAS_PATIENTGROUPMINISTRY(instance As MAS_PATIENTGROUPMINISTRY)
    End Sub
  Partial Private Sub DeleteMAS_PATIENTGROUPMINISTRY(instance As MAS_PATIENTGROUPMINISTRY)
    End Sub
  Partial Private Sub InsertMAS_PATIENTGROUPRANK(instance As MAS_PATIENTGROUPRANK)
    End Sub
  Partial Private Sub UpdateMAS_PATIENTGROUPRANK(instance As MAS_PATIENTGROUPRANK)
    End Sub
  Partial Private Sub DeleteMAS_PATIENTGROUPRANK(instance As MAS_PATIENTGROUPRANK)
    End Sub
  Partial Private Sub InsertMAS_PAYMENT(instance As MAS_PAYMENT)
    End Sub
  Partial Private Sub UpdateMAS_PAYMENT(instance As MAS_PAYMENT)
    End Sub
  Partial Private Sub DeleteMAS_PAYMENT(instance As MAS_PAYMENT)
    End Sub
  Partial Private Sub InsertMAS_PAYOVERRIDE(instance As MAS_PAYOVERRIDE)
    End Sub
  Partial Private Sub UpdateMAS_PAYOVERRIDE(instance As MAS_PAYOVERRIDE)
    End Sub
  Partial Private Sub DeleteMAS_PAYOVERRIDE(instance As MAS_PAYOVERRIDE)
    End Sub
  Partial Private Sub InsertMAS_PAYTYPE(instance As MAS_PAYTYPE)
    End Sub
  Partial Private Sub UpdateMAS_PAYTYPE(instance As MAS_PAYTYPE)
    End Sub
  Partial Private Sub DeleteMAS_PAYTYPE(instance As MAS_PAYTYPE)
    End Sub
  Partial Private Sub InsertMAS_PDEATH(instance As MAS_PDEATH)
    End Sub
  Partial Private Sub UpdateMAS_PDEATH(instance As MAS_PDEATH)
    End Sub
  Partial Private Sub DeleteMAS_PDEATH(instance As MAS_PDEATH)
    End Sub
  Partial Private Sub InsertMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub UpdateMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub DeleteMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub InsertMAS_POSTPONE_APPOINTMENT(instance As MAS_POSTPONE_APPOINTMENT)
    End Sub
  Partial Private Sub UpdateMAS_POSTPONE_APPOINTMENT(instance As MAS_POSTPONE_APPOINTMENT)
    End Sub
  Partial Private Sub DeleteMAS_POSTPONE_APPOINTMENT(instance As MAS_POSTPONE_APPOINTMENT)
    End Sub
  Partial Private Sub InsertMAS_PREGDEATH(instance As MAS_PREGDEATH)
    End Sub
  Partial Private Sub UpdateMAS_PREGDEATH(instance As MAS_PREGDEATH)
    End Sub
  Partial Private Sub DeleteMAS_PREGDEATH(instance As MAS_PREGDEATH)
    End Sub
  Partial Private Sub InsertMAS_PRENAME(instance As MAS_PRENAME)
    End Sub
  Partial Private Sub UpdateMAS_PRENAME(instance As MAS_PRENAME)
    End Sub
  Partial Private Sub DeleteMAS_PRENAME(instance As MAS_PRENAME)
    End Sub
  Partial Private Sub InsertMAS_PROCEDURE_MAIN(instance As MAS_PROCEDURE_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_PROCEDURE_MAIN(instance As MAS_PROCEDURE_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_PROCEDURE_MAIN(instance As MAS_PROCEDURE_MAIN)
    End Sub
  Partial Private Sub InsertMAS_PROCEDURE_SETDETAIL(instance As MAS_PROCEDURE_SETDETAIL)
    End Sub
  Partial Private Sub UpdateMAS_PROCEDURE_SETDETAIL(instance As MAS_PROCEDURE_SETDETAIL)
    End Sub
  Partial Private Sub DeleteMAS_PROCEDURE_SETDETAIL(instance As MAS_PROCEDURE_SETDETAIL)
    End Sub
  Partial Private Sub InsertMAS_PROCEDURE_SETMAIN(instance As MAS_PROCEDURE_SETMAIN)
    End Sub
  Partial Private Sub UpdateMAS_PROCEDURE_SETMAIN(instance As MAS_PROCEDURE_SETMAIN)
    End Sub
  Partial Private Sub DeleteMAS_PROCEDURE_SETMAIN(instance As MAS_PROCEDURE_SETMAIN)
    End Sub
  Partial Private Sub InsertMAS_PROFESSIONAL(instance As MAS_PROFESSIONAL)
    End Sub
  Partial Private Sub UpdateMAS_PROFESSIONAL(instance As MAS_PROFESSIONAL)
    End Sub
  Partial Private Sub DeleteMAS_PROFESSIONAL(instance As MAS_PROFESSIONAL)
    End Sub
  Partial Private Sub InsertMAS_PROFESSIONLEVEL(instance As MAS_PROFESSIONLEVEL)
    End Sub
  Partial Private Sub UpdateMAS_PROFESSIONLEVEL(instance As MAS_PROFESSIONLEVEL)
    End Sub
  Partial Private Sub DeleteMAS_PROFESSIONLEVEL(instance As MAS_PROFESSIONLEVEL)
    End Sub
  Partial Private Sub InsertMAS_PROVIDER_HISTORY(instance As MAS_PROVIDER_HISTORY)
    End Sub
  Partial Private Sub UpdateMAS_PROVIDER_HISTORY(instance As MAS_PROVIDER_HISTORY)
    End Sub
  Partial Private Sub DeleteMAS_PROVIDER_HISTORY(instance As MAS_PROVIDER_HISTORY)
    End Sub
  Partial Private Sub InsertMAS_PROVIDERTYPE(instance As MAS_PROVIDERTYPE)
    End Sub
  Partial Private Sub UpdateMAS_PROVIDERTYPE(instance As MAS_PROVIDERTYPE)
    End Sub
  Partial Private Sub DeleteMAS_PROVIDERTYPE(instance As MAS_PROVIDERTYPE)
    End Sub
  Partial Private Sub InsertMAS_PROVINCE(instance As MAS_PROVINCE)
    End Sub
  Partial Private Sub UpdateMAS_PROVINCE(instance As MAS_PROVINCE)
    End Sub
  Partial Private Sub DeleteMAS_PROVINCE(instance As MAS_PROVINCE)
    End Sub
  Partial Private Sub InsertMAS_QUESTION(instance As MAS_QUESTION)
    End Sub
  Partial Private Sub UpdateMAS_QUESTION(instance As MAS_QUESTION)
    End Sub
  Partial Private Sub DeleteMAS_QUESTION(instance As MAS_QUESTION)
    End Sub
  Partial Private Sub InsertMAS_QUESTION_DRUG(instance As MAS_QUESTION_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_QUESTION_DRUG(instance As MAS_QUESTION_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_QUESTION_DRUG(instance As MAS_QUESTION_DRUG)
    End Sub
  Partial Private Sub InsertMAS_QUESTION_SET(instance As MAS_QUESTION_SET)
    End Sub
  Partial Private Sub UpdateMAS_QUESTION_SET(instance As MAS_QUESTION_SET)
    End Sub
  Partial Private Sub DeleteMAS_QUESTION_SET(instance As MAS_QUESTION_SET)
    End Sub
  Partial Private Sub InsertMAS_QUESTION_TYPE(instance As MAS_QUESTION_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_QUESTION_TYPE(instance As MAS_QUESTION_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_QUESTION_TYPE(instance As MAS_QUESTION_TYPE)
    End Sub
  Partial Private Sub InsertMAS_QUESTIONALLERGIC(instance As MAS_QUESTIONALLERGIC)
    End Sub
  Partial Private Sub UpdateMAS_QUESTIONALLERGIC(instance As MAS_QUESTIONALLERGIC)
    End Sub
  Partial Private Sub DeleteMAS_QUESTIONALLERGIC(instance As MAS_QUESTIONALLERGIC)
    End Sub
  Partial Private Sub InsertMAS_QUESTIONTEMPLATE(instance As MAS_QUESTIONTEMPLATE)
    End Sub
  Partial Private Sub UpdateMAS_QUESTIONTEMPLATE(instance As MAS_QUESTIONTEMPLATE)
    End Sub
  Partial Private Sub DeleteMAS_QUESTIONTEMPLATE(instance As MAS_QUESTIONTEMPLATE)
    End Sub
  Partial Private Sub InsertMAS_RACE(instance As MAS_RACE)
    End Sub
  Partial Private Sub UpdateMAS_RACE(instance As MAS_RACE)
    End Sub
  Partial Private Sub DeleteMAS_RACE(instance As MAS_RACE)
    End Sub
  Partial Private Sub InsertMAS_RANK(instance As MAS_RANK)
    End Sub
  Partial Private Sub UpdateMAS_RANK(instance As MAS_RANK)
    End Sub
  Partial Private Sub DeleteMAS_RANK(instance As MAS_RANK)
    End Sub
  Partial Private Sub InsertMAS_REASON_NOTUSE(instance As MAS_REASON_NOTUSE)
    End Sub
  Partial Private Sub UpdateMAS_REASON_NOTUSE(instance As MAS_REASON_NOTUSE)
    End Sub
  Partial Private Sub DeleteMAS_REASON_NOTUSE(instance As MAS_REASON_NOTUSE)
    End Sub
  Partial Private Sub InsertMAS_RECEIVETYPE(instance As MAS_RECEIVETYPE)
    End Sub
  Partial Private Sub UpdateMAS_RECEIVETYPE(instance As MAS_RECEIVETYPE)
    End Sub
  Partial Private Sub DeleteMAS_RECEIVETYPE(instance As MAS_RECEIVETYPE)
    End Sub
  Partial Private Sub InsertMAS_RECOMMEND(instance As MAS_RECOMMEND)
    End Sub
  Partial Private Sub UpdateMAS_RECOMMEND(instance As MAS_RECOMMEND)
    End Sub
  Partial Private Sub DeleteMAS_RECOMMEND(instance As MAS_RECOMMEND)
    End Sub
  Partial Private Sub InsertMAS_Recorder(instance As MAS_Recorder)
    End Sub
  Partial Private Sub UpdateMAS_Recorder(instance As MAS_Recorder)
    End Sub
  Partial Private Sub DeleteMAS_Recorder(instance As MAS_Recorder)
    End Sub
  Partial Private Sub InsertMAS_REFEROBJECT(instance As MAS_REFEROBJECT)
    End Sub
  Partial Private Sub UpdateMAS_REFEROBJECT(instance As MAS_REFEROBJECT)
    End Sub
  Partial Private Sub DeleteMAS_REFEROBJECT(instance As MAS_REFEROBJECT)
    End Sub
  Partial Private Sub InsertMAS_REGION_MAIN(instance As MAS_REGION_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_REGION_MAIN(instance As MAS_REGION_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_REGION_MAIN(instance As MAS_REGION_MAIN)
    End Sub
  Partial Private Sub InsertMAS_RELATIONSHIP(instance As MAS_RELATIONSHIP)
    End Sub
  Partial Private Sub UpdateMAS_RELATIONSHIP(instance As MAS_RELATIONSHIP)
    End Sub
  Partial Private Sub DeleteMAS_RELATIONSHIP(instance As MAS_RELATIONSHIP)
    End Sub
  Partial Private Sub InsertMAS_RELIGION(instance As MAS_RELIGION)
    End Sub
  Partial Private Sub UpdateMAS_RELIGION(instance As MAS_RELIGION)
    End Sub
  Partial Private Sub DeleteMAS_RELIGION(instance As MAS_RELIGION)
    End Sub
  Partial Private Sub InsertMAS_RELIGION_DETAIL(instance As MAS_RELIGION_DETAIL)
    End Sub
  Partial Private Sub UpdateMAS_RELIGION_DETAIL(instance As MAS_RELIGION_DETAIL)
    End Sub
  Partial Private Sub DeleteMAS_RELIGION_DETAIL(instance As MAS_RELIGION_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_RESIDENTROLE(instance As MAS_RESIDENTROLE)
    End Sub
  Partial Private Sub UpdateMAS_RESIDENTROLE(instance As MAS_RESIDENTROLE)
    End Sub
  Partial Private Sub DeleteMAS_RESIDENTROLE(instance As MAS_RESIDENTROLE)
    End Sub
  Partial Private Sub InsertMAS_RESULTPATIENT(instance As MAS_RESULTPATIENT)
    End Sub
  Partial Private Sub UpdateMAS_RESULTPATIENT(instance As MAS_RESULTPATIENT)
    End Sub
  Partial Private Sub DeleteMAS_RESULTPATIENT(instance As MAS_RESULTPATIENT)
    End Sub
  Partial Private Sub InsertMAS_RHGROUP(instance As MAS_RHGROUP)
    End Sub
  Partial Private Sub UpdateMAS_RHGROUP(instance As MAS_RHGROUP)
    End Sub
  Partial Private Sub DeleteMAS_RHGROUP(instance As MAS_RHGROUP)
    End Sub
  Partial Private Sub InsertMAS_Room(instance As MAS_Room)
    End Sub
  Partial Private Sub UpdateMAS_Room(instance As MAS_Room)
    End Sub
  Partial Private Sub DeleteMAS_Room(instance As MAS_Room)
    End Sub
  Partial Private Sub InsertMAS_ROOMPATIENT(instance As MAS_ROOMPATIENT)
    End Sub
  Partial Private Sub UpdateMAS_ROOMPATIENT(instance As MAS_ROOMPATIENT)
    End Sub
  Partial Private Sub DeleteMAS_ROOMPATIENT(instance As MAS_ROOMPATIENT)
    End Sub
  Partial Private Sub InsertMAS_SEARCH_DRUG(instance As MAS_SEARCH_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_SEARCH_DRUG(instance As MAS_SEARCH_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_SEARCH_DRUG(instance As MAS_SEARCH_DRUG)
    End Sub
  Partial Private Sub InsertMAS_SENSITIVECULTURE(instance As MAS_SENSITIVECULTURE)
    End Sub
  Partial Private Sub UpdateMAS_SENSITIVECULTURE(instance As MAS_SENSITIVECULTURE)
    End Sub
  Partial Private Sub DeleteMAS_SENSITIVECULTURE(instance As MAS_SENSITIVECULTURE)
    End Sub
  Partial Private Sub InsertMAS_SERVICE_HS_MAIN(instance As MAS_SERVICE_HS_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_SERVICE_HS_MAIN(instance As MAS_SERVICE_HS_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_SERVICE_HS_MAIN(instance As MAS_SERVICE_HS_MAIN)
    End Sub
  Partial Private Sub InsertMAS_SERVICE_UNIT(instance As MAS_SERVICE_UNIT)
    End Sub
  Partial Private Sub UpdateMAS_SERVICE_UNIT(instance As MAS_SERVICE_UNIT)
    End Sub
  Partial Private Sub DeleteMAS_SERVICE_UNIT(instance As MAS_SERVICE_UNIT)
    End Sub
  Partial Private Sub InsertMAS_SERVICEHEAL(instance As MAS_SERVICEHEAL)
    End Sub
  Partial Private Sub UpdateMAS_SERVICEHEAL(instance As MAS_SERVICEHEAL)
    End Sub
  Partial Private Sub DeleteMAS_SERVICEHEAL(instance As MAS_SERVICEHEAL)
    End Sub
  Partial Private Sub InsertMAS_SERVICE(instance As MAS_SERVICE)
    End Sub
  Partial Private Sub UpdateMAS_SERVICE(instance As MAS_SERVICE)
    End Sub
  Partial Private Sub DeleteMAS_SERVICE(instance As MAS_SERVICE)
    End Sub
  Partial Private Sub InsertMAS_SERVPLACE(instance As MAS_SERVPLACE)
    End Sub
  Partial Private Sub UpdateMAS_SERVPLACE(instance As MAS_SERVPLACE)
    End Sub
  Partial Private Sub DeleteMAS_SERVPLACE(instance As MAS_SERVPLACE)
    End Sub
  Partial Private Sub InsertMAS_SEVERITY(instance As MAS_SEVERITY)
    End Sub
  Partial Private Sub UpdateMAS_SEVERITY(instance As MAS_SEVERITY)
    End Sub
  Partial Private Sub DeleteMAS_SEVERITY(instance As MAS_SEVERITY)
    End Sub
  Partial Private Sub InsertMAS_SEX(instance As MAS_SEX)
    End Sub
  Partial Private Sub UpdateMAS_SEX(instance As MAS_SEX)
    End Sub
  Partial Private Sub DeleteMAS_SEX(instance As MAS_SEX)
    End Sub
  Partial Private Sub InsertMAS_SPECIALIZATION(instance As MAS_SPECIALIZATION)
    End Sub
  Partial Private Sub UpdateMAS_SPECIALIZATION(instance As MAS_SPECIALIZATION)
    End Sub
  Partial Private Sub DeleteMAS_SPECIALIZATION(instance As MAS_SPECIALIZATION)
    End Sub
  Partial Private Sub InsertMAS_SPECIALIZATION_EXTRA(instance As MAS_SPECIALIZATION_EXTRA)
    End Sub
  Partial Private Sub UpdateMAS_SPECIALIZATION_EXTRA(instance As MAS_SPECIALIZATION_EXTRA)
    End Sub
  Partial Private Sub DeleteMAS_SPECIALIZATION_EXTRA(instance As MAS_SPECIALIZATION_EXTRA)
    End Sub
  Partial Private Sub InsertMAS_SPECIFIC_FOOD(instance As MAS_SPECIFIC_FOOD)
    End Sub
  Partial Private Sub UpdateMAS_SPECIFIC_FOOD(instance As MAS_SPECIFIC_FOOD)
    End Sub
  Partial Private Sub DeleteMAS_SPECIFIC_FOOD(instance As MAS_SPECIFIC_FOOD)
    End Sub
  Partial Private Sub InsertMAS_SPECIMEN(instance As MAS_SPECIMEN)
    End Sub
  Partial Private Sub UpdateMAS_SPECIMEN(instance As MAS_SPECIMEN)
    End Sub
  Partial Private Sub DeleteMAS_SPECIMEN(instance As MAS_SPECIMEN)
    End Sub
  Partial Private Sub InsertMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub InsertMAS_STATUS_RECEIPT(instance As MAS_STATUS_RECEIPT)
    End Sub
  Partial Private Sub UpdateMAS_STATUS_RECEIPT(instance As MAS_STATUS_RECEIPT)
    End Sub
  Partial Private Sub DeleteMAS_STATUS_RECEIPT(instance As MAS_STATUS_RECEIPT)
    End Sub
  Partial Private Sub InsertMAS_STATUSPATIENT(instance As MAS_STATUSPATIENT)
    End Sub
  Partial Private Sub UpdateMAS_STATUSPATIENT(instance As MAS_STATUSPATIENT)
    End Sub
  Partial Private Sub DeleteMAS_STATUSPATIENT(instance As MAS_STATUSPATIENT)
    End Sub
  Partial Private Sub InsertMAS_STYLEDRUG(instance As MAS_STYLEDRUG)
    End Sub
  Partial Private Sub UpdateMAS_STYLEDRUG(instance As MAS_STYLEDRUG)
    End Sub
  Partial Private Sub DeleteMAS_STYLEDRUG(instance As MAS_STYLEDRUG)
    End Sub
  Partial Private Sub InsertMAS_STYLEHOSPITAL(instance As MAS_STYLEHOSPITAL)
    End Sub
  Partial Private Sub UpdateMAS_STYLEHOSPITAL(instance As MAS_STYLEHOSPITAL)
    End Sub
  Partial Private Sub DeleteMAS_STYLEHOSPITAL(instance As MAS_STYLEHOSPITAL)
    End Sub
  Partial Private Sub InsertMAS_Suggestion(instance As MAS_Suggestion)
    End Sub
  Partial Private Sub UpdateMAS_Suggestion(instance As MAS_Suggestion)
    End Sub
  Partial Private Sub DeleteMAS_Suggestion(instance As MAS_Suggestion)
    End Sub
  Partial Private Sub InsertMAS_SYMPTOP(instance As MAS_SYMPTOP)
    End Sub
  Partial Private Sub UpdateMAS_SYMPTOP(instance As MAS_SYMPTOP)
    End Sub
  Partial Private Sub DeleteMAS_SYMPTOP(instance As MAS_SYMPTOP)
    End Sub
  Partial Private Sub InsertMAS_TAKEDRUG(instance As MAS_TAKEDRUG)
    End Sub
  Partial Private Sub UpdateMAS_TAKEDRUG(instance As MAS_TAKEDRUG)
    End Sub
  Partial Private Sub DeleteMAS_TAKEDRUG(instance As MAS_TAKEDRUG)
    End Sub
  Partial Private Sub InsertMAS_TEMPALTEQUESTION(instance As MAS_TEMPALTEQUESTION)
    End Sub
  Partial Private Sub UpdateMAS_TEMPALTEQUESTION(instance As MAS_TEMPALTEQUESTION)
    End Sub
  Partial Private Sub DeleteMAS_TEMPALTEQUESTION(instance As MAS_TEMPALTEQUESTION)
    End Sub
  Partial Private Sub InsertMAS_TIME(instance As MAS_TIME)
    End Sub
  Partial Private Sub UpdateMAS_TIME(instance As MAS_TIME)
    End Sub
  Partial Private Sub DeleteMAS_TIME(instance As MAS_TIME)
    End Sub
  Partial Private Sub InsertMAS_TOILET(instance As MAS_TOILET)
    End Sub
  Partial Private Sub UpdateMAS_TOILET(instance As MAS_TOILET)
    End Sub
  Partial Private Sub DeleteMAS_TOILET(instance As MAS_TOILET)
    End Sub
  Partial Private Sub InsertMAS_TRANSMISSION(instance As MAS_TRANSMISSION)
    End Sub
  Partial Private Sub UpdateMAS_TRANSMISSION(instance As MAS_TRANSMISSION)
    End Sub
  Partial Private Sub DeleteMAS_TRANSMISSION(instance As MAS_TRANSMISSION)
    End Sub
  Partial Private Sub InsertMAS_TRIGGER(instance As MAS_TRIGGER)
    End Sub
  Partial Private Sub UpdateMAS_TRIGGER(instance As MAS_TRIGGER)
    End Sub
  Partial Private Sub DeleteMAS_TRIGGER(instance As MAS_TRIGGER)
    End Sub
  Partial Private Sub InsertMAS_TYPE_IN(instance As MAS_TYPE_IN)
    End Sub
  Partial Private Sub UpdateMAS_TYPE_IN(instance As MAS_TYPE_IN)
    End Sub
  Partial Private Sub DeleteMAS_TYPE_IN(instance As MAS_TYPE_IN)
    End Sub
  Partial Private Sub InsertMAS_TYPE_OUT(instance As MAS_TYPE_OUT)
    End Sub
  Partial Private Sub UpdateMAS_TYPE_OUT(instance As MAS_TYPE_OUT)
    End Sub
  Partial Private Sub DeleteMAS_TYPE_OUT(instance As MAS_TYPE_OUT)
    End Sub
  Partial Private Sub InsertMAS_TYPE_SERV(instance As MAS_TYPE_SERV)
    End Sub
  Partial Private Sub UpdateMAS_TYPE_SERV(instance As MAS_TYPE_SERV)
    End Sub
  Partial Private Sub DeleteMAS_TYPE_SERV(instance As MAS_TYPE_SERV)
    End Sub
  Partial Private Sub InsertMAS_TYPEADDRESS(instance As MAS_TYPEADDRESS)
    End Sub
  Partial Private Sub UpdateMAS_TYPEADDRESS(instance As MAS_TYPEADDRESS)
    End Sub
  Partial Private Sub DeleteMAS_TYPEADDRESS(instance As MAS_TYPEADDRESS)
    End Sub
  Partial Private Sub InsertMAS_TYPEAREA(instance As MAS_TYPEAREA)
    End Sub
  Partial Private Sub UpdateMAS_TYPEAREA(instance As MAS_TYPEAREA)
    End Sub
  Partial Private Sub DeleteMAS_TYPEAREA(instance As MAS_TYPEAREA)
    End Sub
  Partial Private Sub InsertMAS_TYPEBORROW(instance As MAS_TYPEBORROW)
    End Sub
  Partial Private Sub UpdateMAS_TYPEBORROW(instance As MAS_TYPEBORROW)
    End Sub
  Partial Private Sub DeleteMAS_TYPEBORROW(instance As MAS_TYPEBORROW)
    End Sub
  Partial Private Sub InsertMAS_TYPECLINIC(instance As MAS_TYPECLINIC)
    End Sub
  Partial Private Sub UpdateMAS_TYPECLINIC(instance As MAS_TYPECLINIC)
    End Sub
  Partial Private Sub DeleteMAS_TYPECLINIC(instance As MAS_TYPECLINIC)
    End Sub
  Partial Private Sub InsertMAS_TYPECOST(instance As MAS_TYPECOST)
    End Sub
  Partial Private Sub UpdateMAS_TYPECOST(instance As MAS_TYPECOST)
    End Sub
  Partial Private Sub DeleteMAS_TYPECOST(instance As MAS_TYPECOST)
    End Sub
  Partial Private Sub InsertMAS_TYPEDISCH(instance As MAS_TYPEDISCH)
    End Sub
  Partial Private Sub UpdateMAS_TYPEDISCH(instance As MAS_TYPEDISCH)
    End Sub
  Partial Private Sub DeleteMAS_TYPEDISCH(instance As MAS_TYPEDISCH)
    End Sub
  Partial Private Sub InsertMAS_TYPEDX(instance As MAS_TYPEDX)
    End Sub
  Partial Private Sub UpdateMAS_TYPEDX(instance As MAS_TYPEDX)
    End Sub
  Partial Private Sub DeleteMAS_TYPEDX(instance As MAS_TYPEDX)
    End Sub
  Partial Private Sub InsertMAS_TYPELAB(instance As MAS_TYPELAB)
    End Sub
  Partial Private Sub UpdateMAS_TYPELAB(instance As MAS_TYPELAB)
    End Sub
  Partial Private Sub DeleteMAS_TYPELAB(instance As MAS_TYPELAB)
    End Sub
  Partial Private Sub InsertMAS_TYPEOUT(instance As MAS_TYPEOUT)
    End Sub
  Partial Private Sub UpdateMAS_TYPEOUT(instance As MAS_TYPEOUT)
    End Sub
  Partial Private Sub DeleteMAS_TYPEOUT(instance As MAS_TYPEOUT)
    End Sub
  Partial Private Sub InsertMAS_TYPESTAFF(instance As MAS_TYPESTAFF)
    End Sub
  Partial Private Sub UpdateMAS_TYPESTAFF(instance As MAS_TYPESTAFF)
    End Sub
  Partial Private Sub DeleteMAS_TYPESTAFF(instance As MAS_TYPESTAFF)
    End Sub
  Partial Private Sub InsertMAS_UNIT_MAIN(instance As MAS_UNIT_MAIN)
    End Sub
  Partial Private Sub UpdateMAS_UNIT_MAIN(instance As MAS_UNIT_MAIN)
    End Sub
  Partial Private Sub DeleteMAS_UNIT_MAIN(instance As MAS_UNIT_MAIN)
    End Sub
  Partial Private Sub InsertMAS_UNITDRUG(instance As MAS_UNITDRUG)
    End Sub
  Partial Private Sub UpdateMAS_UNITDRUG(instance As MAS_UNITDRUG)
    End Sub
  Partial Private Sub DeleteMAS_UNITDRUG(instance As MAS_UNITDRUG)
    End Sub
  Partial Private Sub InsertMAS_USAGEDRUG(instance As MAS_USAGEDRUG)
    End Sub
  Partial Private Sub UpdateMAS_USAGEDRUG(instance As MAS_USAGEDRUG)
    End Sub
  Partial Private Sub DeleteMAS_USAGEDRUG(instance As MAS_USAGEDRUG)
    End Sub
  Partial Private Sub InsertMAS_USEDRUG(instance As MAS_USEDRUG)
    End Sub
  Partial Private Sub UpdateMAS_USEDRUG(instance As MAS_USEDRUG)
    End Sub
  Partial Private Sub DeleteMAS_USEDRUG(instance As MAS_USEDRUG)
    End Sub
  Partial Private Sub InsertMAS_VENTILATION(instance As MAS_VENTILATION)
    End Sub
  Partial Private Sub UpdateMAS_VENTILATION(instance As MAS_VENTILATION)
    End Sub
  Partial Private Sub DeleteMAS_VENTILATION(instance As MAS_VENTILATION)
    End Sub
  Partial Private Sub InsertMAS_VSTATUS(instance As MAS_VSTATUS)
    End Sub
  Partial Private Sub UpdateMAS_VSTATUS(instance As MAS_VSTATUS)
    End Sub
  Partial Private Sub DeleteMAS_VSTATUS(instance As MAS_VSTATUS)
    End Sub
  Partial Private Sub InsertMAS_VUCCINE(instance As MAS_VUCCINE)
    End Sub
  Partial Private Sub UpdateMAS_VUCCINE(instance As MAS_VUCCINE)
    End Sub
  Partial Private Sub DeleteMAS_VUCCINE(instance As MAS_VUCCINE)
    End Sub
  Partial Private Sub InsertMAS_WAREHOUSE_DRUG(instance As MAS_WAREHOUSE_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_WAREHOUSE_DRUG(instance As MAS_WAREHOUSE_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_WAREHOUSE_DRUG(instance As MAS_WAREHOUSE_DRUG)
    End Sub
  Partial Private Sub InsertMAS_WAREHOUSE_SUBCENTER(instance As MAS_WAREHOUSE_SUBCENTER)
    End Sub
  Partial Private Sub UpdateMAS_WAREHOUSE_SUBCENTER(instance As MAS_WAREHOUSE_SUBCENTER)
    End Sub
  Partial Private Sub DeleteMAS_WAREHOUSE_SUBCENTER(instance As MAS_WAREHOUSE_SUBCENTER)
    End Sub
  Partial Private Sub InsertMAS_WAREHOUSE_SUBMAIN(instance As MAS_WAREHOUSE_SUBMAIN)
    End Sub
  Partial Private Sub UpdateMAS_WAREHOUSE_SUBMAIN(instance As MAS_WAREHOUSE_SUBMAIN)
    End Sub
  Partial Private Sub DeleteMAS_WAREHOUSE_SUBMAIN(instance As MAS_WAREHOUSE_SUBMAIN)
    End Sub
  Partial Private Sub InsertMAS_WASTERWATER(instance As MAS_WASTERWATER)
    End Sub
  Partial Private Sub UpdateMAS_WASTERWATER(instance As MAS_WASTERWATER)
    End Sub
  Partial Private Sub DeleteMAS_WASTERWATER(instance As MAS_WASTERWATER)
    End Sub
  Partial Private Sub InsertMAS_WATER(instance As MAS_WATER)
    End Sub
  Partial Private Sub UpdateMAS_WATER(instance As MAS_WATER)
    End Sub
  Partial Private Sub DeleteMAS_WATER(instance As MAS_WATER)
    End Sub
  Partial Private Sub InsertMAS_WATERTM(instance As MAS_WATERTM)
    End Sub
  Partial Private Sub UpdateMAS_WATERTM(instance As MAS_WATERTM)
    End Sub
  Partial Private Sub DeleteMAS_WATERTM(instance As MAS_WATERTM)
    End Sub
  Partial Private Sub InsertMAS_WATERTYPE(instance As MAS_WATERTYPE)
    End Sub
  Partial Private Sub UpdateMAS_WATERTYPE(instance As MAS_WATERTYPE)
    End Sub
  Partial Private Sub DeleteMAS_WATERTYPE(instance As MAS_WATERTYPE)
    End Sub
  Partial Private Sub InsertMAS_WIDDEN_METHOD(instance As MAS_WIDDEN_METHOD)
    End Sub
  Partial Private Sub UpdateMAS_WIDDEN_METHOD(instance As MAS_WIDDEN_METHOD)
    End Sub
  Partial Private Sub DeleteMAS_WIDDEN_METHOD(instance As MAS_WIDDEN_METHOD)
    End Sub
  Partial Private Sub InsertMAS_HELPDOCWORD(instance As MAS_HELPDOCWORD)
    End Sub
  Partial Private Sub UpdateMAS_HELPDOCWORD(instance As MAS_HELPDOCWORD)
    End Sub
  Partial Private Sub DeleteMAS_HELPDOCWORD(instance As MAS_HELPDOCWORD)
    End Sub
  Partial Private Sub InsertMAS_HELPDOC(instance As MAS_HELPDOC)
    End Sub
  Partial Private Sub UpdateMAS_HELPDOC(instance As MAS_HELPDOC)
    End Sub
  Partial Private Sub DeleteMAS_HELPDOC(instance As MAS_HELPDOC)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DTAM_TIHIConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property MAS_ABOGROUPs() As System.Data.Linq.Table(Of MAS_ABOGROUP)
		Get
			Return Me.GetTable(Of MAS_ABOGROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ZODIACs() As System.Data.Linq.Table(Of MAS_ZODIAC)
		Get
			Return Me.GetTable(Of MAS_ZODIAC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ACONTROLs() As System.Data.Linq.Table(Of MAS_ACONTROL)
		Get
			Return Me.GetTable(Of MAS_ACONTROL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ACUPUNCTUREs() As System.Data.Linq.Table(Of MAS_ACUPUNCTURE)
		Get
			Return Me.GetTable(Of MAS_ACUPUNCTURE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ACUPUNCTURE_MAINs() As System.Data.Linq.Table(Of MAS_ACUPUNCTURE_MAIN)
		Get
			Return Me.GetTable(Of MAS_ACUPUNCTURE_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ACUPUNCTURE_POINTs() As System.Data.Linq.Table(Of MAS_ACUPUNCTURE_POINT)
		Get
			Return Me.GetTable(Of MAS_ACUPUNCTURE_POINT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ADDRESSTYPEs() As System.Data.Linq.Table(Of MAS_ADDRESSTYPE)
		Get
			Return Me.GetTable(Of MAS_ADDRESSTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ALEVELs() As System.Data.Linq.Table(Of MAS_ALEVEL)
		Get
			Return Me.GetTable(Of MAS_ALEVEL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ALLERGIC_TYPEs() As System.Data.Linq.Table(Of MAS_ALLERGIC_TYPE)
		Get
			Return Me.GetTable(Of MAS_ALLERGIC_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ALLERGICGRUGs() As System.Data.Linq.Table(Of MAS_ALLERGICGRUG)
		Get
			Return Me.GetTable(Of MAS_ALLERGICGRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ALLERGICSENSITIVEs() As System.Data.Linq.Table(Of MAS_ALLERGICSENSITIVE)
		Get
			Return Me.GetTable(Of MAS_ALLERGICSENSITIVE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_AMPHURs() As System.Data.Linq.Table(Of MAS_AMPHUR)
		Get
			Return Me.GetTable(Of MAS_AMPHUR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ANSWER_SETs() As System.Data.Linq.Table(Of MAS_ANSWER_SET)
		Get
			Return Me.GetTable(Of MAS_ANSWER_SET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ANSWERs() As System.Data.Linq.Table(Of MAS_ANSWER)
		Get
			Return Me.GetTable(Of MAS_ANSWER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BACTERIALEVELs() As System.Data.Linq.Table(Of MAS_BACTERIALEVEL)
		Get
			Return Me.GetTable(Of MAS_BACTERIALEVEL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BANKs() As System.Data.Linq.Table(Of MAS_BANK)
		Get
			Return Me.GetTable(Of MAS_BANK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BASEs() As System.Data.Linq.Table(Of MAS_BASE)
		Get
			Return Me.GetTable(Of MAS_BASE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BCONTROLs() As System.Data.Linq.Table(Of MAS_BCONTROL)
		Get
			Return Me.GetTable(Of MAS_BCONTROL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BEDs() As System.Data.Linq.Table(Of MAS_BED)
		Get
			Return Me.GetTable(Of MAS_BED)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BUDGETs() As System.Data.Linq.Table(Of MAS_BUDGET)
		Get
			Return Me.GetTable(Of MAS_BUDGET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BUILDINGHOSPITALs() As System.Data.Linq.Table(Of MAS_BUILDINGHOSPITAL)
		Get
			Return Me.GetTable(Of MAS_BUILDINGHOSPITAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CATEGORY_DRUGs() As System.Data.Linq.Table(Of MAS_CATEGORY_DRUG)
		Get
			Return Me.GetTable(Of MAS_CATEGORY_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CATEGORYDRUG_MAINs() As System.Data.Linq.Table(Of MAS_CATEGORYDRUG_MAIN)
		Get
			Return Me.GetTable(Of MAS_CATEGORYDRUG_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CAUSEDISEASEs() As System.Data.Linq.Table(Of MAS_CAUSEDISEASE)
		Get
			Return Me.GetTable(Of MAS_CAUSEDISEASE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CAUSEINs() As System.Data.Linq.Table(Of MAS_CAUSEIN)
		Get
			Return Me.GetTable(Of MAS_CAUSEIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CCs() As System.Data.Linq.Table(Of MAS_CC)
		Get
			Return Me.GetTable(Of MAS_CC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CDGITEMs() As System.Data.Linq.Table(Of MAS_CDGITEM)
		Get
			Return Me.GetTable(Of MAS_CDGITEM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CENTERs() As System.Data.Linq.Table(Of MAS_CENTER)
		Get
			Return Me.GetTable(Of MAS_CENTER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHARGEITEMs() As System.Data.Linq.Table(Of MAS_CHARGEITEM)
		Get
			Return Me.GetTable(Of MAS_CHARGEITEM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHEMICALs() As System.Data.Linq.Table(Of MAS_CHEMICAL)
		Get
			Return Me.GetTable(Of MAS_CHEMICAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHINESEYEARs() As System.Data.Linq.Table(Of MAS_CHINESEYEAR)
		Get
			Return Me.GetTable(Of MAS_CHINESEYEAR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CLAIM_MAINs() As System.Data.Linq.Table(Of MAS_CLAIM_MAIN)
		Get
			Return Me.GetTable(Of MAS_CLAIM_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CLEANLINESSes() As System.Data.Linq.Table(Of MAS_CLEANLINESS)
		Get
			Return Me.GetTable(Of MAS_CLEANLINESS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CLINICs() As System.Data.Linq.Table(Of MAS_CLINIC)
		Get
			Return Me.GetTable(Of MAS_CLINIC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CLINIC_DETAILs() As System.Data.Linq.Table(Of MAS_CLINIC_DETAIL)
		Get
			Return Me.GetTable(Of MAS_CLINIC_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CLINIC_MAINs() As System.Data.Linq.Table(Of MAS_CLINIC_MAIN)
		Get
			Return Me.GetTable(Of MAS_CLINIC_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_DAs() As System.Data.Linq.Table(Of MAS_CODE_DA)
		Get
			Return Me.GetTable(Of MAS_CODE_DA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_DAS_CHAINAs() As System.Data.Linq.Table(Of MAS_CODE_DAS_CHAINA)
		Get
			Return Me.GetTable(Of MAS_CODE_DAS_CHAINA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_DEATHs() As System.Data.Linq.Table(Of MAS_CODE_DEATH)
		Get
			Return Me.GetTable(Of MAS_CODE_DEATH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICD10s() As System.Data.Linq.Table(Of MAS_CODE_ICD10)
		Get
			Return Me.GetTable(Of MAS_CODE_ICD10)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICD10_EMPLOYEEs() As System.Data.Linq.Table(Of MAS_CODE_ICD10_EMPLOYEE)
		Get
			Return Me.GetTable(Of MAS_CODE_ICD10_EMPLOYEE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICD10_SERVICEUNITs() As System.Data.Linq.Table(Of MAS_CODE_ICD10_SERVICEUNIT)
		Get
			Return Me.GetTable(Of MAS_CODE_ICD10_SERVICEUNIT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICD9s() As System.Data.Linq.Table(Of MAS_CODE_ICD9)
		Get
			Return Me.GetTable(Of MAS_CODE_ICD9)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICD9_EMPLOYEEs() As System.Data.Linq.Table(Of MAS_CODE_ICD9_EMPLOYEE)
		Get
			Return Me.GetTable(Of MAS_CODE_ICD9_EMPLOYEE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CODE_ICDOs() As System.Data.Linq.Table(Of MAS_CODE_ICDO)
		Get
			Return Me.GetTable(Of MAS_CODE_ICDO)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CONDITIONs() As System.Data.Linq.Table(Of MAS_CONDITION)
		Get
			Return Me.GetTable(Of MAS_CONDITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CONSULTs() As System.Data.Linq.Table(Of MAS_CONSULT)
		Get
			Return Me.GetTable(Of MAS_CONSULT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Contentmens() As System.Data.Linq.Table(Of MAS_Contentmen)
		Get
			Return Me.GetTable(Of MAS_Contentmen)
		End Get
	End Property
	
	Public ReadOnly Property MAS_COUNCILs() As System.Data.Linq.Table(Of MAS_COUNCIL)
		Get
			Return Me.GetTable(Of MAS_COUNCIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_COUNTRies() As System.Data.Linq.Table(Of MAS_COUNTRY)
		Get
			Return Me.GetTable(Of MAS_COUNTRY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CutOff_TYPEs() As System.Data.Linq.Table(Of MAS_CutOff_TYPE)
		Get
			Return Me.GetTable(Of MAS_CutOff_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DATASOURCEs() As System.Data.Linq.Table(Of MAS_DATASOURCE)
		Get
			Return Me.GetTable(Of MAS_DATASOURCE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DAYs() As System.Data.Linq.Table(Of MAS_DAY)
		Get
			Return Me.GetTable(Of MAS_DAY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEALERs() As System.Data.Linq.Table(Of MAS_DEALER)
		Get
			Return Me.GetTable(Of MAS_DEALER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEPARTMENTs() As System.Data.Linq.Table(Of MAS_DEPARTMENT)
		Get
			Return Me.GetTable(Of MAS_DEPARTMENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEPARTMENT_MAINs() As System.Data.Linq.Table(Of MAS_DEPARTMENT_MAIN)
		Get
			Return Me.GetTable(Of MAS_DEPARTMENT_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEPENDENTs() As System.Data.Linq.Table(Of MAS_DEPENDENT)
		Get
			Return Me.GetTable(Of MAS_DEPENDENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DESCRIPTION_DISTRIBUTIONs() As System.Data.Linq.Table(Of MAS_DESCRIPTION_DISTRIBUTION)
		Get
			Return Me.GetTable(Of MAS_DESCRIPTION_DISTRIBUTION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DIAGCODEs() As System.Data.Linq.Table(Of MAS_DIAGCODE)
		Get
			Return Me.GetTable(Of MAS_DIAGCODE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DIAGNOSEAGEs() As System.Data.Linq.Table(Of MAS_DIAGNOSEAGE)
		Get
			Return Me.GetTable(Of MAS_DIAGNOSEAGE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DIAGNOSEBOOKs() As System.Data.Linq.Table(Of MAS_DIAGNOSEBOOK)
		Get
			Return Me.GetTable(Of MAS_DIAGNOSEBOOK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DIAGNOSIs() As System.Data.Linq.Table(Of MAS_DIAGNOSI)
		Get
			Return Me.GetTable(Of MAS_DIAGNOSI)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DIAGTYPEs() As System.Data.Linq.Table(Of MAS_DIAGTYPE)
		Get
			Return Me.GetTable(Of MAS_DIAGTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISABCAUSEs() As System.Data.Linq.Table(Of MAS_DISABCAUSE)
		Get
			Return Me.GetTable(Of MAS_DISABCAUSE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISABLEREASONs() As System.Data.Linq.Table(Of MAS_DISABLEREASON)
		Get
			Return Me.GetTable(Of MAS_DISABLEREASON)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISABTYPEs() As System.Data.Linq.Table(Of MAS_DISABTYPE)
		Get
			Return Me.GetTable(Of MAS_DISABTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCHARGEs() As System.Data.Linq.Table(Of MAS_DISCHARGE)
		Get
			Return Me.GetTable(Of MAS_DISCHARGE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCOUNTs() As System.Data.Linq.Table(Of MAS_DISCOUNT)
		Get
			Return Me.GetTable(Of MAS_DISCOUNT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCOUNTREASONs() As System.Data.Linq.Table(Of MAS_DISCOUNTREASON)
		Get
			Return Me.GetTable(Of MAS_DISCOUNTREASON)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCREPANCY_CUASEs() As System.Data.Linq.Table(Of MAS_DISCREPANCY_CUASE)
		Get
			Return Me.GetTable(Of MAS_DISCREPANCY_CUASE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCREPANCY_GROUPs() As System.Data.Linq.Table(Of MAS_DISCREPANCY_GROUP)
		Get
			Return Me.GetTable(Of MAS_DISCREPANCY_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISCREPANCY_TYPEs() As System.Data.Linq.Table(Of MAS_DISCREPANCY_TYPE)
		Get
			Return Me.GetTable(Of MAS_DISCREPANCY_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISEASEs() As System.Data.Linq.Table(Of MAS_DISEASE)
		Get
			Return Me.GetTable(Of MAS_DISEASE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISTRIBUTE_OUTs() As System.Data.Linq.Table(Of MAS_DISTRIBUTE_OUT)
		Get
			Return Me.GetTable(Of MAS_DISTRIBUTE_OUT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISTRIBUTE_WARDs() As System.Data.Linq.Table(Of MAS_DISTRIBUTE_WARD)
		Get
			Return Me.GetTable(Of MAS_DISTRIBUTE_WARD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DISTRICTs() As System.Data.Linq.Table(Of MAS_DISTRICT)
		Get
			Return Me.GetTable(Of MAS_DISTRICT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Doctors() As System.Data.Linq.Table(Of MAS_Doctor)
		Get
			Return Me.GetTable(Of MAS_Doctor)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Drugs() As System.Data.Linq.Table(Of MAS_Drug)
		Get
			Return Me.GetTable(Of MAS_Drug)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_MAINs() As System.Data.Linq.Table(Of MAS_DRUG_MAIN)
		Get
			Return Me.GetTable(Of MAS_DRUG_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_SETDETAILs() As System.Data.Linq.Table(Of MAS_DRUG_SETDETAIL)
		Get
			Return Me.GetTable(Of MAS_DRUG_SETDETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_SETMAINs() As System.Data.Linq.Table(Of MAS_DRUG_SETMAIN)
		Get
			Return Me.GetTable(Of MAS_DRUG_SETMAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_TYPEs() As System.Data.Linq.Table(Of MAS_DRUG_TYPE)
		Get
			Return Me.GetTable(Of MAS_DRUG_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_USEs() As System.Data.Linq.Table(Of MAS_DRUG_USE)
		Get
			Return Me.GetTable(Of MAS_DRUG_USE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGALLERGies() As System.Data.Linq.Table(Of MAS_DRUGALLERGY)
		Get
			Return Me.GetTable(Of MAS_DRUGALLERGY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGGENERIC_MAINs() As System.Data.Linq.Table(Of MAS_DRUGGENERIC_MAIN)
		Get
			Return Me.GetTable(Of MAS_DRUGGENERIC_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGMIMs() As System.Data.Linq.Table(Of MAS_DRUGMIM)
		Get
			Return Me.GetTable(Of MAS_DRUGMIM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGPREGs() As System.Data.Linq.Table(Of MAS_DRUGPREG)
		Get
			Return Me.GetTable(Of MAS_DRUGPREG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGQTies() As System.Data.Linq.Table(Of MAS_DRUGQTY)
		Get
			Return Me.GetTable(Of MAS_DRUGQTY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGSTRENGTHs() As System.Data.Linq.Table(Of MAS_DRUGSTRENGTH)
		Get
			Return Me.GetTable(Of MAS_DRUGSTRENGTH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGTHAICATEGORies() As System.Data.Linq.Table(Of MAS_DRUGTHAICATEGORY)
		Get
			Return Me.GetTable(Of MAS_DRUGTHAICATEGORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUGTIMEs() As System.Data.Linq.Table(Of MAS_DRUGTIME)
		Get
			Return Me.GetTable(Of MAS_DRUGTIME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DURABILITies() As System.Data.Linq.Table(Of MAS_DURABILITY)
		Get
			Return Me.GetTable(Of MAS_DURABILITY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DURATION_MAINs() As System.Data.Linq.Table(Of MAS_DURATION_MAIN)
		Get
			Return Me.GetTable(Of MAS_DURATION_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EDUCATIONs() As System.Data.Linq.Table(Of MAS_EDUCATION)
		Get
			Return Me.GetTable(Of MAS_EDUCATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EDUCATIONLEVELs() As System.Data.Linq.Table(Of MAS_EDUCATIONLEVEL)
		Get
			Return Me.GetTable(Of MAS_EDUCATIONLEVEL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ELEMENTALs() As System.Data.Linq.Table(Of MAS_ELEMENTAL)
		Get
			Return Me.GetTable(Of MAS_ELEMENTAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EMERGENCEs() As System.Data.Linq.Table(Of MAS_EMERGENCE)
		Get
			Return Me.GetTable(Of MAS_EMERGENCE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EXPENSEs() As System.Data.Linq.Table(Of MAS_EXPENSE)
		Get
			Return Me.GetTable(Of MAS_EXPENSE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_F18VACCINEs() As System.Data.Linq.Table(Of MAS_F18VACCINE)
		Get
			Return Me.GetTable(Of MAS_F18VACCINE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FLOOR_INBUILDINGs() As System.Data.Linq.Table(Of MAS_FLOOR_INBUILDING)
		Get
			Return Me.GetTable(Of MAS_FLOOR_INBUILDING)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FOODs() As System.Data.Linq.Table(Of MAS_FOOD)
		Get
			Return Me.GetTable(Of MAS_FOOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FOOD_NATUREs() As System.Data.Linq.Table(Of MAS_FOOD_NATURE)
		Get
			Return Me.GetTable(Of MAS_FOOD_NATURE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FORMAT_FOODs() As System.Data.Linq.Table(Of MAS_FORMAT_FOOD)
		Get
			Return Me.GetTable(Of MAS_FORMAT_FOOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FPTYPEs() As System.Data.Linq.Table(Of MAS_FPTYPE)
		Get
			Return Me.GetTable(Of MAS_FPTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FSTATUS() As System.Data.Linq.Table(Of MAS_FSTATUS)
		Get
			Return Me.GetTable(Of MAS_FSTATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FUNCTIONAL_TESTs() As System.Data.Linq.Table(Of MAS_FUNCTIONAL_TEST)
		Get
			Return Me.GetTable(Of MAS_FUNCTIONAL_TEST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GARBAGEs() As System.Data.Linq.Table(Of MAS_GARBAGE)
		Get
			Return Me.GetTable(Of MAS_GARBAGE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GARBAGE_VILLAGEs() As System.Data.Linq.Table(Of MAS_GARBAGE_VILLAGE)
		Get
			Return Me.GetTable(Of MAS_GARBAGE_VILLAGE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GENDERs() As System.Data.Linq.Table(Of MAS_GENDER)
		Get
			Return Me.GetTable(Of MAS_GENDER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GENERICDRUGs() As System.Data.Linq.Table(Of MAS_GENERICDRUG)
		Get
			Return Me.GetTable(Of MAS_GENERICDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GROUPCOSTs() As System.Data.Linq.Table(Of MAS_GROUPCOST)
		Get
			Return Me.GetTable(Of MAS_GROUPCOST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GROUPITEM_MAINs() As System.Data.Linq.Table(Of MAS_GROUPITEM_MAIN)
		Get
			Return Me.GetTable(Of MAS_GROUPITEM_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GROUPMEDICAL_SUPPLies() As System.Data.Linq.Table(Of MAS_GROUPMEDICAL_SUPPLy)
		Get
			Return Me.GetTable(Of MAS_GROUPMEDICAL_SUPPLy)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GROUPTYPEs() As System.Data.Linq.Table(Of MAS_GROUPTYPE)
		Get
			Return Me.GetTable(Of MAS_GROUPTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HEALs() As System.Data.Linq.Table(Of MAS_HEAL)
		Get
			Return Me.GetTable(Of MAS_HEAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HEALTHREGIONs() As System.Data.Linq.Table(Of MAS_HEALTHREGION)
		Get
			Return Me.GetTable(Of MAS_HEALTHREGION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HISTORY_MEDICALPRICEs() As System.Data.Linq.Table(Of MAS_HISTORY_MEDICALPRICE)
		Get
			Return Me.GetTable(Of MAS_HISTORY_MEDICALPRICE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOLIDAYDATEs() As System.Data.Linq.Table(Of MAS_HOLIDAYDATE)
		Get
			Return Me.GetTable(Of MAS_HOLIDAYDATE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOPITALMAINs() As System.Data.Linq.Table(Of MAS_HOPITALMAIN)
		Get
			Return Me.GetTable(Of MAS_HOPITALMAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Hospitals() As System.Data.Linq.Table(Of MAS_Hospital)
		Get
			Return Me.GetTable(Of MAS_Hospital)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOSPITALCATEGORies() As System.Data.Linq.Table(Of MAS_HOSPITALCATEGORY)
		Get
			Return Me.GetTable(Of MAS_HOSPITALCATEGORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOUSETYPEs() As System.Data.Linq.Table(Of MAS_HOUSETYPE)
		Get
			Return Me.GetTable(Of MAS_HOUSETYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOUSETYPE_HOMEs() As System.Data.Linq.Table(Of MAS_HOUSETYPE_HOME)
		Get
			Return Me.GetTable(Of MAS_HOUSETYPE_HOME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOUSINGs() As System.Data.Linq.Table(Of MAS_HOUSING)
		Get
			Return Me.GetTable(Of MAS_HOUSING)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HOW_TO_PRICEs() As System.Data.Linq.Table(Of MAS_HOW_TO_PRICE)
		Get
			Return Me.GetTable(Of MAS_HOW_TO_PRICE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ICFs() As System.Data.Linq.Table(Of MAS_ICF)
		Get
			Return Me.GetTable(Of MAS_ICF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_IDENTITYBOOKs() As System.Data.Linq.Table(Of MAS_IDENTITYBOOK)
		Get
			Return Me.GetTable(Of MAS_IDENTITYBOOK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_INFORMANTs() As System.Data.Linq.Table(Of MAS_INFORMANT)
		Get
			Return Me.GetTable(Of MAS_INFORMANT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_INSTYPE_NEWs() As System.Data.Linq.Table(Of MAS_INSTYPE_NEW)
		Get
			Return Me.GetTable(Of MAS_INSTYPE_NEW)
		End Get
	End Property
	
	Public ReadOnly Property MAS_INSTYPE_OLDs() As System.Data.Linq.Table(Of MAS_INSTYPE_OLD)
		Get
			Return Me.GetTable(Of MAS_INSTYPE_OLD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_INTIMEs() As System.Data.Linq.Table(Of MAS_INTIME)
		Get
			Return Me.GetTable(Of MAS_INTIME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ITEM_THAIHERBs() As System.Data.Linq.Table(Of MAS_ITEM_THAIHERB)
		Get
			Return Me.GetTable(Of MAS_ITEM_THAIHERB)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ITEMDRUG_THAIHERBs() As System.Data.Linq.Table(Of MAS_ITEMDRUG_THAIHERB)
		Get
			Return Me.GetTable(Of MAS_ITEMDRUG_THAIHERB)
		End Get
	End Property
	
	Public ReadOnly Property MAS_KEYWORDEMs() As System.Data.Linq.Table(Of MAS_KEYWORDEM)
		Get
			Return Me.GetTable(Of MAS_KEYWORDEM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_KEYWORDEM_HXPIs() As System.Data.Linq.Table(Of MAS_KEYWORDEM_HXPI)
		Get
			Return Me.GetTable(Of MAS_KEYWORDEM_HXPI)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABs() As System.Data.Linq.Table(Of MAS_LAB)
		Get
			Return Me.GetTable(Of MAS_LAB)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_BACTERIAs() As System.Data.Linq.Table(Of MAS_LAB_BACTERIA)
		Get
			Return Me.GetTable(Of MAS_LAB_BACTERIA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_EXAMINATIONs() As System.Data.Linq.Table(Of MAS_LAB_EXAMINATION)
		Get
			Return Me.GetTable(Of MAS_LAB_EXAMINATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_ITEMMETHODs() As System.Data.Linq.Table(Of MAS_LAB_ITEMMETHOD)
		Get
			Return Me.GetTable(Of MAS_LAB_ITEMMETHOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_LEVELUSE_BACTERIAs() As System.Data.Linq.Table(Of MAS_LAB_LEVELUSE_BACTERIA)
		Get
			Return Me.GetTable(Of MAS_LAB_LEVELUSE_BACTERIA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_LIs() As System.Data.Linq.Table(Of MAS_LAB_LI)
		Get
			Return Me.GetTable(Of MAS_LAB_LI)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_LIS_COMMENTs() As System.Data.Linq.Table(Of MAS_LAB_LIS_COMMENT)
		Get
			Return Me.GetTable(Of MAS_LAB_LIS_COMMENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_LIS_TESTCODEs() As System.Data.Linq.Table(Of MAS_LAB_LIS_TESTCODE)
		Get
			Return Me.GetTable(Of MAS_LAB_LIS_TESTCODE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_PHYSIOLOGies() As System.Data.Linq.Table(Of MAS_LAB_PHYSIOLOGY)
		Get
			Return Me.GetTable(Of MAS_LAB_PHYSIOLOGY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_SENSITIVE_BACTERIAs() As System.Data.Linq.Table(Of MAS_LAB_SENSITIVE_BACTERIA)
		Get
			Return Me.GetTable(Of MAS_LAB_SENSITIVE_BACTERIA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_SETDETAILs() As System.Data.Linq.Table(Of MAS_LAB_SETDETAIL)
		Get
			Return Me.GetTable(Of MAS_LAB_SETDETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_SETMAINs() As System.Data.Linq.Table(Of MAS_LAB_SETMAIN)
		Get
			Return Me.GetTable(Of MAS_LAB_SETMAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_SETTRANSMISSIONs() As System.Data.Linq.Table(Of MAS_LAB_SETTRANSMISSION)
		Get
			Return Me.GetTable(Of MAS_LAB_SETTRANSMISSION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LAB_TYPE_Pathologies() As System.Data.Linq.Table(Of MAS_LAB_TYPE_Pathology)
		Get
			Return Me.GetTable(Of MAS_LAB_TYPE_Pathology)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABITEMs() As System.Data.Linq.Table(Of MAS_LABITEM)
		Get
			Return Me.GetTable(Of MAS_LABITEM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABMETHODs() As System.Data.Linq.Table(Of MAS_LABMETHOD)
		Get
			Return Me.GetTable(Of MAS_LABMETHOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABORs() As System.Data.Linq.Table(Of MAS_LABOR)
		Get
			Return Me.GetTable(Of MAS_LABOR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABOUTPUTs() As System.Data.Linq.Table(Of MAS_LABOUTPUT)
		Get
			Return Me.GetTable(Of MAS_LABOUTPUT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABOUTPUTREFs() As System.Data.Linq.Table(Of MAS_LABOUTPUTREF)
		Get
			Return Me.GetTable(Of MAS_LABOUTPUTREF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LABPHYSIOLOGICs() As System.Data.Linq.Table(Of MAS_LABPHYSIOLOGIC)
		Get
			Return Me.GetTable(Of MAS_LABPHYSIOLOGIC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LabSenseDiscs() As System.Data.Linq.Table(Of MAS_LabSenseDisc)
		Get
			Return Me.GetTable(Of MAS_LabSenseDisc)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LEVELSEVERITies() As System.Data.Linq.Table(Of MAS_LEVELSEVERITY)
		Get
			Return Me.GetTable(Of MAS_LEVELSEVERITY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LIGHTs() As System.Data.Linq.Table(Of MAS_LIGHT)
		Get
			Return Me.GetTable(Of MAS_LIGHT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LOCATIONs() As System.Data.Linq.Table(Of MAS_LOCATION)
		Get
			Return Me.GetTable(Of MAS_LOCATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LOCATYPEs() As System.Data.Linq.Table(Of MAS_LOCATYPE)
		Get
			Return Me.GetTable(Of MAS_LOCATYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Majors() As System.Data.Linq.Table(Of MAS_Major)
		Get
			Return Me.GetTable(Of MAS_Major)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Major_Checks() As System.Data.Linq.Table(Of MAS_Major_Check)
		Get
			Return Me.GetTable(Of MAS_Major_Check)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MANUFACTRER_DRUGs() As System.Data.Linq.Table(Of MAS_MANUFACTRER_DRUG)
		Get
			Return Me.GetTable(Of MAS_MANUFACTRER_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MASSAGEPOSITIONs() As System.Data.Linq.Table(Of MAS_MASSAGEPOSITION)
		Get
			Return Me.GetTable(Of MAS_MASSAGEPOSITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MCs() As System.Data.Linq.Table(Of MAS_MC)
		Get
			Return Me.GetTable(Of MAS_MC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MC_MCPAYERNAMEs() As System.Data.Linq.Table(Of MAS_MC_MCPAYERNAME)
		Get
			Return Me.GetTable(Of MAS_MC_MCPAYERNAME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MCPatientGroups() As System.Data.Linq.Table(Of MAS_MCPatientGroup)
		Get
			Return Me.GetTable(Of MAS_MCPatientGroup)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MCPAYERs() As System.Data.Linq.Table(Of MAS_MCPAYER)
		Get
			Return Me.GetTable(Of MAS_MCPAYER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MCPAYERNAMEs() As System.Data.Linq.Table(Of MAS_MCPAYERNAME)
		Get
			Return Me.GetTable(Of MAS_MCPAYERNAME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MED_MAINs() As System.Data.Linq.Table(Of MAS_MED_MAIN)
		Get
			Return Me.GetTable(Of MAS_MED_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MED_PRICESELLs() As System.Data.Linq.Table(Of MAS_MED_PRICESELL)
		Get
			Return Me.GetTable(Of MAS_MED_PRICESELL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MEDICAL_SUPPLies() As System.Data.Linq.Table(Of MAS_MEDICAL_SUPPLy)
		Get
			Return Me.GetTable(Of MAS_MEDICAL_SUPPLy)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MEDICINE_COSTs() As System.Data.Linq.Table(Of MAS_MEDICINE_COST)
		Get
			Return Me.GetTable(Of MAS_MEDICINE_COST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MEDICINE_DUEs() As System.Data.Linq.Table(Of MAS_MEDICINE_DUE)
		Get
			Return Me.GetTable(Of MAS_MEDICINE_DUE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MEDICINE_INGREDENTs() As System.Data.Linq.Table(Of MAS_MEDICINE_INGREDENT)
		Get
			Return Me.GetTable(Of MAS_MEDICINE_INGREDENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MEDICINE_MAINs() As System.Data.Linq.Table(Of MAS_MEDICINE_MAIN)
		Get
			Return Me.GetTable(Of MAS_MEDICINE_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENUSies() As System.Data.Linq.Table(Of MAS_MENUSY)
		Get
			Return Me.GetTable(Of MAS_MENUSY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_METHOD_CLAIMs() As System.Data.Linq.Table(Of MAS_METHOD_CLAIM)
		Get
			Return Me.GetTable(Of MAS_METHOD_CLAIM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MFOODs() As System.Data.Linq.Table(Of MAS_MFOOD)
		Get
			Return Me.GetTable(Of MAS_MFOOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MILITARies() As System.Data.Linq.Table(Of MAS_MILITARY)
		Get
			Return Me.GetTable(Of MAS_MILITARY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MINUTEs() As System.Data.Linq.Table(Of MAS_MINUTE)
		Get
			Return Me.GetTable(Of MAS_MINUTE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MRLIFETOMEGROUPs() As System.Data.Linq.Table(Of MAS_MRLIFETOMEGROUP)
		Get
			Return Me.GetTable(Of MAS_MRLIFETOMEGROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MSTATUS() As System.Data.Linq.Table(Of MAS_MSTATUS)
		Get
			Return Me.GetTable(Of MAS_MSTATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NAMECHANGEs() As System.Data.Linq.Table(Of MAS_NAMECHANGE)
		Get
			Return Me.GetTable(Of MAS_NAMECHANGE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NAMECHANGEDOCs() As System.Data.Linq.Table(Of MAS_NAMECHANGEDOC)
		Get
			Return Me.GetTable(Of MAS_NAMECHANGEDOC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NARCOTICTYPEs() As System.Data.Linq.Table(Of MAS_NARCOTICTYPE)
		Get
			Return Me.GetTable(Of MAS_NARCOTICTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NATIONs() As System.Data.Linq.Table(Of MAS_NATION)
		Get
			Return Me.GetTable(Of MAS_NATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NOFPCAUSEs() As System.Data.Linq.Table(Of MAS_NOFPCAUSE)
		Get
			Return Me.GetTable(Of MAS_NOFPCAUSE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NONEDREASONs() As System.Data.Linq.Table(Of MAS_NONEDREASON)
		Get
			Return Me.GetTable(Of MAS_NONEDREASON)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NORMALAPPs() As System.Data.Linq.Table(Of MAS_NORMALAPP)
		Get
			Return Me.GetTable(Of MAS_NORMALAPP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NURSECAREs() As System.Data.Linq.Table(Of MAS_NURSECARE)
		Get
			Return Me.GetTable(Of MAS_NURSECARE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Nursing_services() As System.Data.Linq.Table(Of MAS_Nursing_service)
		Get
			Return Me.GetTable(Of MAS_Nursing_service)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OBJECTIVE_DRUGs() As System.Data.Linq.Table(Of MAS_OBJECTIVE_DRUG)
		Get
			Return Me.GetTable(Of MAS_OBJECTIVE_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OBJECTIVECHECKs() As System.Data.Linq.Table(Of MAS_OBJECTIVECHECK)
		Get
			Return Me.GetTable(Of MAS_OBJECTIVECHECK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OCCUPATION_DRUGs() As System.Data.Linq.Table(Of MAS_OCCUPATION_DRUG)
		Get
			Return Me.GetTable(Of MAS_OCCUPATION_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OCCUPATION_NEWs() As System.Data.Linq.Table(Of MAS_OCCUPATION_NEW)
		Get
			Return Me.GetTable(Of MAS_OCCUPATION_NEW)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OCCUPATION_OLDs() As System.Data.Linq.Table(Of MAS_OCCUPATION_OLD)
		Get
			Return Me.GetTable(Of MAS_OCCUPATION_OLD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_OCCUPATIONs() As System.Data.Linq.Table(Of MAS_OCCUPATION)
		Get
			Return Me.GetTable(Of MAS_OCCUPATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ORGANIZATIONs() As System.Data.Linq.Table(Of MAS_ORGANIZATION)
		Get
			Return Me.GetTable(Of MAS_ORGANIZATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PATIENT_TYPEs() As System.Data.Linq.Table(Of MAS_PATIENT_TYPE)
		Get
			Return Me.GetTable(Of MAS_PATIENT_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PATIENTGROUPs() As System.Data.Linq.Table(Of MAS_PATIENTGROUP)
		Get
			Return Me.GetTable(Of MAS_PATIENTGROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PATIENTGROUPMINISTRies() As System.Data.Linq.Table(Of MAS_PATIENTGROUPMINISTRY)
		Get
			Return Me.GetTable(Of MAS_PATIENTGROUPMINISTRY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PATIENTGROUPRANKs() As System.Data.Linq.Table(Of MAS_PATIENTGROUPRANK)
		Get
			Return Me.GetTable(Of MAS_PATIENTGROUPRANK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PAYMENTs() As System.Data.Linq.Table(Of MAS_PAYMENT)
		Get
			Return Me.GetTable(Of MAS_PAYMENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PAYOVERRIDEs() As System.Data.Linq.Table(Of MAS_PAYOVERRIDE)
		Get
			Return Me.GetTable(Of MAS_PAYOVERRIDE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PAYTYPEs() As System.Data.Linq.Table(Of MAS_PAYTYPE)
		Get
			Return Me.GetTable(Of MAS_PAYTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PDEATHs() As System.Data.Linq.Table(Of MAS_PDEATH)
		Get
			Return Me.GetTable(Of MAS_PDEATH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_POSITIONs() As System.Data.Linq.Table(Of MAS_POSITION)
		Get
			Return Me.GetTable(Of MAS_POSITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_POSTPONE_APPOINTMENTs() As System.Data.Linq.Table(Of MAS_POSTPONE_APPOINTMENT)
		Get
			Return Me.GetTable(Of MAS_POSTPONE_APPOINTMENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PREGDEATHs() As System.Data.Linq.Table(Of MAS_PREGDEATH)
		Get
			Return Me.GetTable(Of MAS_PREGDEATH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PRENAMEs() As System.Data.Linq.Table(Of MAS_PRENAME)
		Get
			Return Me.GetTable(Of MAS_PRENAME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCEDURE_MAINs() As System.Data.Linq.Table(Of MAS_PROCEDURE_MAIN)
		Get
			Return Me.GetTable(Of MAS_PROCEDURE_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCEDURE_SETDETAILs() As System.Data.Linq.Table(Of MAS_PROCEDURE_SETDETAIL)
		Get
			Return Me.GetTable(Of MAS_PROCEDURE_SETDETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROCEDURE_SETMAINs() As System.Data.Linq.Table(Of MAS_PROCEDURE_SETMAIN)
		Get
			Return Me.GetTable(Of MAS_PROCEDURE_SETMAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROFESSIONALs() As System.Data.Linq.Table(Of MAS_PROFESSIONAL)
		Get
			Return Me.GetTable(Of MAS_PROFESSIONAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROFESSIONLEVELs() As System.Data.Linq.Table(Of MAS_PROFESSIONLEVEL)
		Get
			Return Me.GetTable(Of MAS_PROFESSIONLEVEL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROVIDER_HISTORies() As System.Data.Linq.Table(Of MAS_PROVIDER_HISTORY)
		Get
			Return Me.GetTable(Of MAS_PROVIDER_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROVIDERTYPEs() As System.Data.Linq.Table(Of MAS_PROVIDERTYPE)
		Get
			Return Me.GetTable(Of MAS_PROVIDERTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROVINCEs() As System.Data.Linq.Table(Of MAS_PROVINCE)
		Get
			Return Me.GetTable(Of MAS_PROVINCE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTIONs() As System.Data.Linq.Table(Of MAS_QUESTION)
		Get
			Return Me.GetTable(Of MAS_QUESTION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTION_DRUGs() As System.Data.Linq.Table(Of MAS_QUESTION_DRUG)
		Get
			Return Me.GetTable(Of MAS_QUESTION_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTION_SETs() As System.Data.Linq.Table(Of MAS_QUESTION_SET)
		Get
			Return Me.GetTable(Of MAS_QUESTION_SET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTION_TYPEs() As System.Data.Linq.Table(Of MAS_QUESTION_TYPE)
		Get
			Return Me.GetTable(Of MAS_QUESTION_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTIONALLERGICs() As System.Data.Linq.Table(Of MAS_QUESTIONALLERGIC)
		Get
			Return Me.GetTable(Of MAS_QUESTIONALLERGIC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_QUESTIONTEMPLATEs() As System.Data.Linq.Table(Of MAS_QUESTIONTEMPLATE)
		Get
			Return Me.GetTable(Of MAS_QUESTIONTEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RACEs() As System.Data.Linq.Table(Of MAS_RACE)
		Get
			Return Me.GetTable(Of MAS_RACE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RANKs() As System.Data.Linq.Table(Of MAS_RANK)
		Get
			Return Me.GetTable(Of MAS_RANK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_REASON_NOTUSEs() As System.Data.Linq.Table(Of MAS_REASON_NOTUSE)
		Get
			Return Me.GetTable(Of MAS_REASON_NOTUSE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RECEIVETYPEs() As System.Data.Linq.Table(Of MAS_RECEIVETYPE)
		Get
			Return Me.GetTable(Of MAS_RECEIVETYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RECOMMENDs() As System.Data.Linq.Table(Of MAS_RECOMMEND)
		Get
			Return Me.GetTable(Of MAS_RECOMMEND)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Recorders() As System.Data.Linq.Table(Of MAS_Recorder)
		Get
			Return Me.GetTable(Of MAS_Recorder)
		End Get
	End Property
	
	Public ReadOnly Property MAS_REFEROBJECTs() As System.Data.Linq.Table(Of MAS_REFEROBJECT)
		Get
			Return Me.GetTable(Of MAS_REFEROBJECT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_REGION_MAINs() As System.Data.Linq.Table(Of MAS_REGION_MAIN)
		Get
			Return Me.GetTable(Of MAS_REGION_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RELATIONSHIPs() As System.Data.Linq.Table(Of MAS_RELATIONSHIP)
		Get
			Return Me.GetTable(Of MAS_RELATIONSHIP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RELIGIONs() As System.Data.Linq.Table(Of MAS_RELIGION)
		Get
			Return Me.GetTable(Of MAS_RELIGION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RELIGION_DETAILs() As System.Data.Linq.Table(Of MAS_RELIGION_DETAIL)
		Get
			Return Me.GetTable(Of MAS_RELIGION_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RESIDENTROLEs() As System.Data.Linq.Table(Of MAS_RESIDENTROLE)
		Get
			Return Me.GetTable(Of MAS_RESIDENTROLE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RESULTPATIENTs() As System.Data.Linq.Table(Of MAS_RESULTPATIENT)
		Get
			Return Me.GetTable(Of MAS_RESULTPATIENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RHGROUPs() As System.Data.Linq.Table(Of MAS_RHGROUP)
		Get
			Return Me.GetTable(Of MAS_RHGROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Rooms() As System.Data.Linq.Table(Of MAS_Room)
		Get
			Return Me.GetTable(Of MAS_Room)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ROOMPATIENTs() As System.Data.Linq.Table(Of MAS_ROOMPATIENT)
		Get
			Return Me.GetTable(Of MAS_ROOMPATIENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SEARCH_DRUGs() As System.Data.Linq.Table(Of MAS_SEARCH_DRUG)
		Get
			Return Me.GetTable(Of MAS_SEARCH_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SENSITIVECULTUREs() As System.Data.Linq.Table(Of MAS_SENSITIVECULTURE)
		Get
			Return Me.GetTable(Of MAS_SENSITIVECULTURE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SERVICE_HS_MAINs() As System.Data.Linq.Table(Of MAS_SERVICE_HS_MAIN)
		Get
			Return Me.GetTable(Of MAS_SERVICE_HS_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SERVICE_UNITs() As System.Data.Linq.Table(Of MAS_SERVICE_UNIT)
		Get
			Return Me.GetTable(Of MAS_SERVICE_UNIT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SERVICEHEALs() As System.Data.Linq.Table(Of MAS_SERVICEHEAL)
		Get
			Return Me.GetTable(Of MAS_SERVICEHEAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SERVICEs() As System.Data.Linq.Table(Of MAS_SERVICE)
		Get
			Return Me.GetTable(Of MAS_SERVICE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SERVPLACEs() As System.Data.Linq.Table(Of MAS_SERVPLACE)
		Get
			Return Me.GetTable(Of MAS_SERVPLACE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SEVERITies() As System.Data.Linq.Table(Of MAS_SEVERITY)
		Get
			Return Me.GetTable(Of MAS_SEVERITY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SEXes() As System.Data.Linq.Table(Of MAS_SEX)
		Get
			Return Me.GetTable(Of MAS_SEX)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SPECIALIZATIONs() As System.Data.Linq.Table(Of MAS_SPECIALIZATION)
		Get
			Return Me.GetTable(Of MAS_SPECIALIZATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SPECIALIZATION_EXTRAs() As System.Data.Linq.Table(Of MAS_SPECIALIZATION_EXTRA)
		Get
			Return Me.GetTable(Of MAS_SPECIALIZATION_EXTRA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SPECIFIC_FOODs() As System.Data.Linq.Table(Of MAS_SPECIFIC_FOOD)
		Get
			Return Me.GetTable(Of MAS_SPECIFIC_FOOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SPECIMENs() As System.Data.Linq.Table(Of MAS_SPECIMEN)
		Get
			Return Me.GetTable(Of MAS_SPECIMEN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS() As System.Data.Linq.Table(Of MAS_STATUS)
		Get
			Return Me.GetTable(Of MAS_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS_RECEIPTs() As System.Data.Linq.Table(Of MAS_STATUS_RECEIPT)
		Get
			Return Me.GetTable(Of MAS_STATUS_RECEIPT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUSPATIENTs() As System.Data.Linq.Table(Of MAS_STATUSPATIENT)
		Get
			Return Me.GetTable(Of MAS_STATUSPATIENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STYLEDRUGs() As System.Data.Linq.Table(Of MAS_STYLEDRUG)
		Get
			Return Me.GetTable(Of MAS_STYLEDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STYLEHOSPITALs() As System.Data.Linq.Table(Of MAS_STYLEHOSPITAL)
		Get
			Return Me.GetTable(Of MAS_STYLEHOSPITAL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_Suggestions() As System.Data.Linq.Table(Of MAS_Suggestion)
		Get
			Return Me.GetTable(Of MAS_Suggestion)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SYMPTOPs() As System.Data.Linq.Table(Of MAS_SYMPTOP)
		Get
			Return Me.GetTable(Of MAS_SYMPTOP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TAKEDRUGs() As System.Data.Linq.Table(Of MAS_TAKEDRUG)
		Get
			Return Me.GetTable(Of MAS_TAKEDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TEMPALTEQUESTIONs() As System.Data.Linq.Table(Of MAS_TEMPALTEQUESTION)
		Get
			Return Me.GetTable(Of MAS_TEMPALTEQUESTION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TIMEs() As System.Data.Linq.Table(Of MAS_TIME)
		Get
			Return Me.GetTable(Of MAS_TIME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TOILETs() As System.Data.Linq.Table(Of MAS_TOILET)
		Get
			Return Me.GetTable(Of MAS_TOILET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TRANSMISSIONs() As System.Data.Linq.Table(Of MAS_TRANSMISSION)
		Get
			Return Me.GetTable(Of MAS_TRANSMISSION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TRIGGERs() As System.Data.Linq.Table(Of MAS_TRIGGER)
		Get
			Return Me.GetTable(Of MAS_TRIGGER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPE_INs() As System.Data.Linq.Table(Of MAS_TYPE_IN)
		Get
			Return Me.GetTable(Of MAS_TYPE_IN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPE_OUTs() As System.Data.Linq.Table(Of MAS_TYPE_OUT)
		Get
			Return Me.GetTable(Of MAS_TYPE_OUT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPE_SERVs() As System.Data.Linq.Table(Of MAS_TYPE_SERV)
		Get
			Return Me.GetTable(Of MAS_TYPE_SERV)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEADDRESSes() As System.Data.Linq.Table(Of MAS_TYPEADDRESS)
		Get
			Return Me.GetTable(Of MAS_TYPEADDRESS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEAREAs() As System.Data.Linq.Table(Of MAS_TYPEAREA)
		Get
			Return Me.GetTable(Of MAS_TYPEAREA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEBORROWs() As System.Data.Linq.Table(Of MAS_TYPEBORROW)
		Get
			Return Me.GetTable(Of MAS_TYPEBORROW)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPECLINICs() As System.Data.Linq.Table(Of MAS_TYPECLINIC)
		Get
			Return Me.GetTable(Of MAS_TYPECLINIC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPECOSTs() As System.Data.Linq.Table(Of MAS_TYPECOST)
		Get
			Return Me.GetTable(Of MAS_TYPECOST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEDISCHes() As System.Data.Linq.Table(Of MAS_TYPEDISCH)
		Get
			Return Me.GetTable(Of MAS_TYPEDISCH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEDXes() As System.Data.Linq.Table(Of MAS_TYPEDX)
		Get
			Return Me.GetTable(Of MAS_TYPEDX)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPELABs() As System.Data.Linq.Table(Of MAS_TYPELAB)
		Get
			Return Me.GetTable(Of MAS_TYPELAB)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPEOUTs() As System.Data.Linq.Table(Of MAS_TYPEOUT)
		Get
			Return Me.GetTable(Of MAS_TYPEOUT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPESTAFFs() As System.Data.Linq.Table(Of MAS_TYPESTAFF)
		Get
			Return Me.GetTable(Of MAS_TYPESTAFF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_UNIT_MAINs() As System.Data.Linq.Table(Of MAS_UNIT_MAIN)
		Get
			Return Me.GetTable(Of MAS_UNIT_MAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_UNITDRUGs() As System.Data.Linq.Table(Of MAS_UNITDRUG)
		Get
			Return Me.GetTable(Of MAS_UNITDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_USAGEDRUGs() As System.Data.Linq.Table(Of MAS_USAGEDRUG)
		Get
			Return Me.GetTable(Of MAS_USAGEDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_USEDRUGs() As System.Data.Linq.Table(Of MAS_USEDRUG)
		Get
			Return Me.GetTable(Of MAS_USEDRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_VENTILATIONs() As System.Data.Linq.Table(Of MAS_VENTILATION)
		Get
			Return Me.GetTable(Of MAS_VENTILATION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_VSTATUS() As System.Data.Linq.Table(Of MAS_VSTATUS)
		Get
			Return Me.GetTable(Of MAS_VSTATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_VUCCINEs() As System.Data.Linq.Table(Of MAS_VUCCINE)
		Get
			Return Me.GetTable(Of MAS_VUCCINE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WAREHOUSE_DRUGs() As System.Data.Linq.Table(Of MAS_WAREHOUSE_DRUG)
		Get
			Return Me.GetTable(Of MAS_WAREHOUSE_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WAREHOUSE_SUBCENTERs() As System.Data.Linq.Table(Of MAS_WAREHOUSE_SUBCENTER)
		Get
			Return Me.GetTable(Of MAS_WAREHOUSE_SUBCENTER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WAREHOUSE_SUBMAINs() As System.Data.Linq.Table(Of MAS_WAREHOUSE_SUBMAIN)
		Get
			Return Me.GetTable(Of MAS_WAREHOUSE_SUBMAIN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WASTERWATERs() As System.Data.Linq.Table(Of MAS_WASTERWATER)
		Get
			Return Me.GetTable(Of MAS_WASTERWATER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WATERs() As System.Data.Linq.Table(Of MAS_WATER)
		Get
			Return Me.GetTable(Of MAS_WATER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WATERTMs() As System.Data.Linq.Table(Of MAS_WATERTM)
		Get
			Return Me.GetTable(Of MAS_WATERTM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WATERTYPEs() As System.Data.Linq.Table(Of MAS_WATERTYPE)
		Get
			Return Me.GetTable(Of MAS_WATERTYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WIDDEN_METHODs() As System.Data.Linq.Table(Of MAS_WIDDEN_METHOD)
		Get
			Return Me.GetTable(Of MAS_WIDDEN_METHOD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HELPDOCWORDs() As System.Data.Linq.Table(Of MAS_HELPDOCWORD)
		Get
			Return Me.GetTable(Of MAS_HELPDOCWORD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HELPDOCs() As System.Data.Linq.Table(Of MAS_HELPDOC)
		Get
			Return Me.GetTable(Of MAS_HELPDOC)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ABOGROUP")>  _
Partial Public Class MAS_ABOGROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ABOGROUP_ID As Integer
	
	Private _ABOGROUP_CODE As System.Nullable(Of Integer)
	
	Private _ABOGROUP_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnABOGROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnABOGROUP_IDChanged()
    End Sub
    Partial Private Sub OnABOGROUP_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnABOGROUP_CODEChanged()
    End Sub
    Partial Private Sub OnABOGROUP_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnABOGROUP_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOGROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ABOGROUP_ID() As Integer
		Get
			Return Me._ABOGROUP_ID
		End Get
		Set
			If ((Me._ABOGROUP_ID = value)  _
						= false) Then
				Me.OnABOGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._ABOGROUP_ID = value
				Me.SendPropertyChanged("ABOGROUP_ID")
				Me.OnABOGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOGROUP_CODE", DbType:="Int")>  _
	Public Property ABOGROUP_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ABOGROUP_CODE
		End Get
		Set
			If (Me._ABOGROUP_CODE.Equals(value) = false) Then
				Me.OnABOGROUP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ABOGROUP_CODE = value
				Me.SendPropertyChanged("ABOGROUP_CODE")
				Me.OnABOGROUP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOGROUP_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property ABOGROUP_DESCRIPTION() As String
		Get
			Return Me._ABOGROUP_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ABOGROUP_DESCRIPTION, value) = false) Then
				Me.OnABOGROUP_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ABOGROUP_DESCRIPTION = value
				Me.SendPropertyChanged("ABOGROUP_DESCRIPTION")
				Me.OnABOGROUP_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ZODIAC")>  _
Partial Public Class MAS_ZODIAC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ZODIAC_ID As Integer
	
	Private _ZODIAC_CODE As String
	
	Private _ZODIAC_NAME As String
	
	Private _ZODIAC_ENNAME As String
	
	Private _ZODIAC_NOTE As String
	
	Private _ZODIAC_DETAIL As String
	
	Private _ZODIAC_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnZODIAC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnZODIAC_IDChanged()
    End Sub
    Partial Private Sub OnZODIAC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnZODIAC_CODEChanged()
    End Sub
    Partial Private Sub OnZODIAC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnZODIAC_NAMEChanged()
    End Sub
    Partial Private Sub OnZODIAC_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnZODIAC_ENNAMEChanged()
    End Sub
    Partial Private Sub OnZODIAC_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnZODIAC_NOTEChanged()
    End Sub
    Partial Private Sub OnZODIAC_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnZODIAC_DETAILChanged()
    End Sub
    Partial Private Sub OnZODIAC_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZODIAC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ZODIAC_ID() As Integer
		Get
			Return Me._ZODIAC_ID
		End Get
		Set
			If ((Me._ZODIAC_ID = value)  _
						= false) Then
				Me.OnZODIAC_IDChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_ID = value
				Me.SendPropertyChanged("ZODIAC_ID")
				Me.OnZODIAC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ZODIAC_CODE() As String
		Get
			Return Me._ZODIAC_CODE
		End Get
		Set
			If (String.Equals(Me._ZODIAC_CODE, value) = false) Then
				Me.OnZODIAC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_CODE = value
				Me.SendPropertyChanged("ZODIAC_CODE")
				Me.OnZODIAC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ZODIAC_NAME() As String
		Get
			Return Me._ZODIAC_NAME
		End Get
		Set
			If (String.Equals(Me._ZODIAC_NAME, value) = false) Then
				Me.OnZODIAC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_NAME = value
				Me.SendPropertyChanged("ZODIAC_NAME")
				Me.OnZODIAC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ZODIAC_ENNAME() As String
		Get
			Return Me._ZODIAC_ENNAME
		End Get
		Set
			If (String.Equals(Me._ZODIAC_ENNAME, value) = false) Then
				Me.OnZODIAC_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_ENNAME = value
				Me.SendPropertyChanged("ZODIAC_ENNAME")
				Me.OnZODIAC_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ZODIAC_NOTE() As String
		Get
			Return Me._ZODIAC_NOTE
		End Get
		Set
			If (String.Equals(Me._ZODIAC_NOTE, value) = false) Then
				Me.OnZODIAC_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_NOTE = value
				Me.SendPropertyChanged("ZODIAC_NOTE")
				Me.OnZODIAC_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ZODIAC_DETAIL() As String
		Get
			Return Me._ZODIAC_DETAIL
		End Get
		Set
			If (String.Equals(Me._ZODIAC_DETAIL, value) = false) Then
				Me.OnZODIAC_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_DETAIL = value
				Me.SendPropertyChanged("ZODIAC_DETAIL")
				Me.OnZODIAC_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZODIAC_ISDISABLED", DbType:="Int")>  _
	Public Property ZODIAC_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ZODIAC_ISDISABLED
		End Get
		Set
			If (Me._ZODIAC_ISDISABLED.Equals(value) = false) Then
				Me.OnZODIAC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ZODIAC_ISDISABLED = value
				Me.SendPropertyChanged("ZODIAC_ISDISABLED")
				Me.OnZODIAC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ACONTROL")>  _
Partial Public Class MAS_ACONTROL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ACONTROL_ID As Integer
	
	Private _ACONTROL_CODE As System.Nullable(Of Integer)
	
	Private _ACONTROL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnACONTROL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnACONTROL_IDChanged()
    End Sub
    Partial Private Sub OnACONTROL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACONTROL_CODEChanged()
    End Sub
    Partial Private Sub OnACONTROL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnACONTROL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACONTROL_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ACONTROL_ID() As Integer
		Get
			Return Me._ACONTROL_ID
		End Get
		Set
			If ((Me._ACONTROL_ID = value)  _
						= false) Then
				Me.OnACONTROL_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACONTROL_ID = value
				Me.SendPropertyChanged("ACONTROL_ID")
				Me.OnACONTROL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACONTROL_CODE", DbType:="Int")>  _
	Public Property ACONTROL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ACONTROL_CODE
		End Get
		Set
			If (Me._ACONTROL_CODE.Equals(value) = false) Then
				Me.OnACONTROL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ACONTROL_CODE = value
				Me.SendPropertyChanged("ACONTROL_CODE")
				Me.OnACONTROL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACONTROL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property ACONTROL_DESCRIPTION() As String
		Get
			Return Me._ACONTROL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ACONTROL_DESCRIPTION, value) = false) Then
				Me.OnACONTROL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ACONTROL_DESCRIPTION = value
				Me.SendPropertyChanged("ACONTROL_DESCRIPTION")
				Me.OnACONTROL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ACUPUNCTURE")>  _
Partial Public Class MAS_ACUPUNCTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ACUPUNCTURE_ID As Integer
	
	Private _ACUPUNCTURE_CODE As String
	
	Private _ACUPUNCTURE_TOPIC As String
	
	Private _ACUPUNCTURE_NAME As String
	
	Private _ACUPUNCTURE_ENNAME As String
	
	Private _ACUPUNCTURE_NOTE As String
	
	Private _ACUPUNCTURE_KEY As String
	
	Private _ACUPUNCTURE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ACUPUNCTURE_CDGITEMTOPIC As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnACUPUNCTURE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnACUPUNCTURE_IDChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_CODEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_TOPICChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_TOPICChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_NAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_NOTEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_KEYChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_KEYChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACUPUNCTURE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_CDGITEMTOPICChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACUPUNCTURE_CDGITEMTOPICChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ACUPUNCTURE_ID() As Integer
		Get
			Return Me._ACUPUNCTURE_ID
		End Get
		Set
			If ((Me._ACUPUNCTURE_ID = value)  _
						= false) Then
				Me.OnACUPUNCTURE_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_ID = value
				Me.SendPropertyChanged("ACUPUNCTURE_ID")
				Me.OnACUPUNCTURE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_CODE() As String
		Get
			Return Me._ACUPUNCTURE_CODE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_CODE, value) = false) Then
				Me.OnACUPUNCTURE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_CODE = value
				Me.SendPropertyChanged("ACUPUNCTURE_CODE")
				Me.OnACUPUNCTURE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_TOPIC", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_TOPIC() As String
		Get
			Return Me._ACUPUNCTURE_TOPIC
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_TOPIC, value) = false) Then
				Me.OnACUPUNCTURE_TOPICChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_TOPIC = value
				Me.SendPropertyChanged("ACUPUNCTURE_TOPIC")
				Me.OnACUPUNCTURE_TOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_NAME() As String
		Get
			Return Me._ACUPUNCTURE_NAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_NAME, value) = false) Then
				Me.OnACUPUNCTURE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_NAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_NAME")
				Me.OnACUPUNCTURE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_ENNAME() As String
		Get
			Return Me._ACUPUNCTURE_ENNAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_ENNAME, value) = false) Then
				Me.OnACUPUNCTURE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_ENNAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_ENNAME")
				Me.OnACUPUNCTURE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_NOTE() As String
		Get
			Return Me._ACUPUNCTURE_NOTE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_NOTE, value) = false) Then
				Me.OnACUPUNCTURE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_NOTE = value
				Me.SendPropertyChanged("ACUPUNCTURE_NOTE")
				Me.OnACUPUNCTURE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_KEY", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_KEY() As String
		Get
			Return Me._ACUPUNCTURE_KEY
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_KEY, value) = false) Then
				Me.OnACUPUNCTURE_KEYChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_KEY = value
				Me.SendPropertyChanged("ACUPUNCTURE_KEY")
				Me.OnACUPUNCTURE_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_ISDISABLED", DbType:="Int")>  _
	Public Property ACUPUNCTURE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ACUPUNCTURE_ISDISABLED
		End Get
		Set
			If (Me._ACUPUNCTURE_ISDISABLED.Equals(value) = false) Then
				Me.OnACUPUNCTURE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_ISDISABLED = value
				Me.SendPropertyChanged("ACUPUNCTURE_ISDISABLED")
				Me.OnACUPUNCTURE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_CDGITEMTOPIC", DbType:="Int")>  _
	Public Property ACUPUNCTURE_CDGITEMTOPIC() As System.Nullable(Of Integer)
		Get
			Return Me._ACUPUNCTURE_CDGITEMTOPIC
		End Get
		Set
			If (Me._ACUPUNCTURE_CDGITEMTOPIC.Equals(value) = false) Then
				Me.OnACUPUNCTURE_CDGITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_CDGITEMTOPIC = value
				Me.SendPropertyChanged("ACUPUNCTURE_CDGITEMTOPIC")
				Me.OnACUPUNCTURE_CDGITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ACUPUNCTURE_MAIN")>  _
Partial Public Class MAS_ACUPUNCTURE_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ACUPUNCTURE_MAIN_ID As Integer
	
	Private _ACUPUNCTURE_MAIN_CODE As String
	
	Private _ACUPUNCTURE_MAIN_TOPIC As String
	
	Private _ACUPUNCTURE_MAIN_NAME As String
	
	Private _ACUPUNCTURE_MAIN_ENNAME As String
	
	Private _ACUPUNCTURE_MAIN_NOTE As String
	
	Private _ACUPUNCTURE_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ACUPUNCTURE_MAIN_KEY As String
	
	Private _ACUPUNCTURE_MAIN_CDGITEMTOPIC As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_TOPICChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_TOPICChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_NAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_KEYChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_KEYChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_CDGITEMTOPICChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACUPUNCTURE_MAIN_CDGITEMTOPICChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ACUPUNCTURE_MAIN_ID() As Integer
		Get
			Return Me._ACUPUNCTURE_MAIN_ID
		End Get
		Set
			If ((Me._ACUPUNCTURE_MAIN_ID = value)  _
						= false) Then
				Me.OnACUPUNCTURE_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_ID = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_ID")
				Me.OnACUPUNCTURE_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_CODE() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_CODE, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_CODE = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_CODE")
				Me.OnACUPUNCTURE_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_TOPIC", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_TOPIC() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_TOPIC
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_TOPIC, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_TOPICChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_TOPIC = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_TOPIC")
				Me.OnACUPUNCTURE_MAIN_TOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_NAME() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_NAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_NAME, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_NAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_NAME")
				Me.OnACUPUNCTURE_MAIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_ENNAME() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_ENNAME, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_ENNAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_ENNAME")
				Me.OnACUPUNCTURE_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_NOTE() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_NOTE, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_NOTE = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_NOTE")
				Me.OnACUPUNCTURE_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property ACUPUNCTURE_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ACUPUNCTURE_MAIN_ISDISABLED
		End Get
		Set
			If (Me._ACUPUNCTURE_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnACUPUNCTURE_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_ISDISABLED")
				Me.OnACUPUNCTURE_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_KEY", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_MAIN_KEY() As String
		Get
			Return Me._ACUPUNCTURE_MAIN_KEY
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_MAIN_KEY, value) = false) Then
				Me.OnACUPUNCTURE_MAIN_KEYChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_KEY = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_KEY")
				Me.OnACUPUNCTURE_MAIN_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_MAIN_CDGITEMTOPIC", DbType:="Int")>  _
	Public Property ACUPUNCTURE_MAIN_CDGITEMTOPIC() As System.Nullable(Of Integer)
		Get
			Return Me._ACUPUNCTURE_MAIN_CDGITEMTOPIC
		End Get
		Set
			If (Me._ACUPUNCTURE_MAIN_CDGITEMTOPIC.Equals(value) = false) Then
				Me.OnACUPUNCTURE_MAIN_CDGITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_MAIN_CDGITEMTOPIC = value
				Me.SendPropertyChanged("ACUPUNCTURE_MAIN_CDGITEMTOPIC")
				Me.OnACUPUNCTURE_MAIN_CDGITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ACUPUNCTURE_POINTS")>  _
Partial Public Class MAS_ACUPUNCTURE_POINT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ACUPUNCTURE_POINTS_ID As Integer
	
	Private _ACUPUNCTURE_POINTS_CODE As String
	
	Private _ACUPUNCTURE_POINTS_NAME As String
	
	Private _ACUPUNCTURE_POINTS_ENNAME As String
	
	Private _ACUPUNCTURE_POINTS_NOTE As String
	
	Private _ACUPUNCTURE_POINTS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_IDChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_CODEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_NAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_NOTEChanged()
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACUPUNCTURE_POINTS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ACUPUNCTURE_POINTS_ID() As Integer
		Get
			Return Me._ACUPUNCTURE_POINTS_ID
		End Get
		Set
			If ((Me._ACUPUNCTURE_POINTS_ID = value)  _
						= false) Then
				Me.OnACUPUNCTURE_POINTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_ID = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_ID")
				Me.OnACUPUNCTURE_POINTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_POINTS_CODE() As String
		Get
			Return Me._ACUPUNCTURE_POINTS_CODE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_POINTS_CODE, value) = false) Then
				Me.OnACUPUNCTURE_POINTS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_CODE = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_CODE")
				Me.OnACUPUNCTURE_POINTS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_POINTS_NAME() As String
		Get
			Return Me._ACUPUNCTURE_POINTS_NAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_POINTS_NAME, value) = false) Then
				Me.OnACUPUNCTURE_POINTS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_NAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_NAME")
				Me.OnACUPUNCTURE_POINTS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_POINTS_ENNAME() As String
		Get
			Return Me._ACUPUNCTURE_POINTS_ENNAME
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_POINTS_ENNAME, value) = false) Then
				Me.OnACUPUNCTURE_POINTS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_ENNAME = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_ENNAME")
				Me.OnACUPUNCTURE_POINTS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ACUPUNCTURE_POINTS_NOTE() As String
		Get
			Return Me._ACUPUNCTURE_POINTS_NOTE
		End Get
		Set
			If (String.Equals(Me._ACUPUNCTURE_POINTS_NOTE, value) = false) Then
				Me.OnACUPUNCTURE_POINTS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_NOTE = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_NOTE")
				Me.OnACUPUNCTURE_POINTS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACUPUNCTURE_POINTS_ISDISABLED", DbType:="Int")>  _
	Public Property ACUPUNCTURE_POINTS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ACUPUNCTURE_POINTS_ISDISABLED
		End Get
		Set
			If (Me._ACUPUNCTURE_POINTS_ISDISABLED.Equals(value) = false) Then
				Me.OnACUPUNCTURE_POINTS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ACUPUNCTURE_POINTS_ISDISABLED = value
				Me.SendPropertyChanged("ACUPUNCTURE_POINTS_ISDISABLED")
				Me.OnACUPUNCTURE_POINTS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ADDRESSTYPE")>  _
Partial Public Class MAS_ADDRESSTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ADDRESSTYPE_ID As Integer
	
	Private _ADDRESSTYPE_CODE As System.Nullable(Of Integer)
	
	Private _ADDRESSTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnADDRESSTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnADDRESSTYPE_IDChanged()
    End Sub
    Partial Private Sub OnADDRESSTYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADDRESSTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnADDRESSTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESSTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ADDRESSTYPE_ID() As Integer
		Get
			Return Me._ADDRESSTYPE_ID
		End Get
		Set
			If ((Me._ADDRESSTYPE_ID = value)  _
						= false) Then
				Me.OnADDRESSTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESSTYPE_ID = value
				Me.SendPropertyChanged("ADDRESSTYPE_ID")
				Me.OnADDRESSTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESSTYPE_CODE", DbType:="Int")>  _
	Public Property ADDRESSTYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ADDRESSTYPE_CODE
		End Get
		Set
			If (Me._ADDRESSTYPE_CODE.Equals(value) = false) Then
				Me.OnADDRESSTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESSTYPE_CODE = value
				Me.SendPropertyChanged("ADDRESSTYPE_CODE")
				Me.OnADDRESSTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESSTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property ADDRESSTYPE_DESCRIPTION() As String
		Get
			Return Me._ADDRESSTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ADDRESSTYPE_DESCRIPTION, value) = false) Then
				Me.OnADDRESSTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESSTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("ADDRESSTYPE_DESCRIPTION")
				Me.OnADDRESSTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ALEVEL")>  _
Partial Public Class MAS_ALEVEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ALEVEL_ID As Integer
	
	Private _ALEVEL_CODE As System.Nullable(Of Integer)
	
	Private _ALEVEL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnALEVEL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnALEVEL_IDChanged()
    End Sub
    Partial Private Sub OnALEVEL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnALEVEL_CODEChanged()
    End Sub
    Partial Private Sub OnALEVEL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnALEVEL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALEVEL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ALEVEL_ID() As Integer
		Get
			Return Me._ALEVEL_ID
		End Get
		Set
			If ((Me._ALEVEL_ID = value)  _
						= false) Then
				Me.OnALEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._ALEVEL_ID = value
				Me.SendPropertyChanged("ALEVEL_ID")
				Me.OnALEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALEVEL_CODE", DbType:="Int")>  _
	Public Property ALEVEL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ALEVEL_CODE
		End Get
		Set
			If (Me._ALEVEL_CODE.Equals(value) = false) Then
				Me.OnALEVEL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ALEVEL_CODE = value
				Me.SendPropertyChanged("ALEVEL_CODE")
				Me.OnALEVEL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALEVEL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property ALEVEL_DESCRIPTION() As String
		Get
			Return Me._ALEVEL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ALEVEL_DESCRIPTION, value) = false) Then
				Me.OnALEVEL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ALEVEL_DESCRIPTION = value
				Me.SendPropertyChanged("ALEVEL_DESCRIPTION")
				Me.OnALEVEL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ALLERGIC_TYPE")>  _
Partial Public Class MAS_ALLERGIC_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ALLERGIC_TYPE_ID As Integer
	
	Private _ALLERGIC_TYPE_CODE As String
	
	Private _ALLERGIC_TYPE_NAME As String
	
	Private _ALLERGIC_TYPE_ENNAME As String
	
	Private _ALLERGIC_TYPE_NOTE As String
	
	Private _ALLERGIC_TYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnALLERGIC_TYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ALLERGIC_TYPE_ID() As Integer
		Get
			Return Me._ALLERGIC_TYPE_ID
		End Get
		Set
			If ((Me._ALLERGIC_TYPE_ID = value)  _
						= false) Then
				Me.OnALLERGIC_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_ID = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_ID")
				Me.OnALLERGIC_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGIC_TYPE_CODE() As String
		Get
			Return Me._ALLERGIC_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._ALLERGIC_TYPE_CODE, value) = false) Then
				Me.OnALLERGIC_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_CODE = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_CODE")
				Me.OnALLERGIC_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGIC_TYPE_NAME() As String
		Get
			Return Me._ALLERGIC_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._ALLERGIC_TYPE_NAME, value) = false) Then
				Me.OnALLERGIC_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_NAME = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_NAME")
				Me.OnALLERGIC_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGIC_TYPE_ENNAME() As String
		Get
			Return Me._ALLERGIC_TYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._ALLERGIC_TYPE_ENNAME, value) = false) Then
				Me.OnALLERGIC_TYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_ENNAME = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_ENNAME")
				Me.OnALLERGIC_TYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGIC_TYPE_NOTE() As String
		Get
			Return Me._ALLERGIC_TYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._ALLERGIC_TYPE_NOTE, value) = false) Then
				Me.OnALLERGIC_TYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_NOTE = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_NOTE")
				Me.OnALLERGIC_TYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGIC_TYPE_ISDISABLED", DbType:="Int")>  _
	Public Property ALLERGIC_TYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ALLERGIC_TYPE_ISDISABLED
		End Get
		Set
			If (Me._ALLERGIC_TYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnALLERGIC_TYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGIC_TYPE_ISDISABLED = value
				Me.SendPropertyChanged("ALLERGIC_TYPE_ISDISABLED")
				Me.OnALLERGIC_TYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ALLERGICGRUG")>  _
Partial Public Class MAS_ALLERGICGRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ALLERGICGRUG_ID As Integer
	
	Private _ALLERGICGRUG_ALLERGICCQUESTION As String
	
	Private _ALLERGICGRUG_ALLERGICDRUGNAME As String
	
	Private _ALLERGICGRUG_ISDEFAULT As System.Nullable(Of Integer)
	
	Private _ALLERGICGRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ALLERGICGRUG_CODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnALLERGICGRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnALLERGICGRUG_IDChanged()
    End Sub
    Partial Private Sub OnALLERGICGRUG_ALLERGICCQUESTIONChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICGRUG_ALLERGICCQUESTIONChanged()
    End Sub
    Partial Private Sub OnALLERGICGRUG_ALLERGICDRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICGRUG_ALLERGICDRUGNAMEChanged()
    End Sub
    Partial Private Sub OnALLERGICGRUG_ISDEFAULTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnALLERGICGRUG_ISDEFAULTChanged()
    End Sub
    Partial Private Sub OnALLERGICGRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnALLERGICGRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnALLERGICGRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICGRUG_CODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ALLERGICGRUG_ID() As Integer
		Get
			Return Me._ALLERGICGRUG_ID
		End Get
		Set
			If ((Me._ALLERGICGRUG_ID = value)  _
						= false) Then
				Me.OnALLERGICGRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_ID = value
				Me.SendPropertyChanged("ALLERGICGRUG_ID")
				Me.OnALLERGICGRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_ALLERGICCQUESTION", DbType:="NVarChar(50)")>  _
	Public Property ALLERGICGRUG_ALLERGICCQUESTION() As String
		Get
			Return Me._ALLERGICGRUG_ALLERGICCQUESTION
		End Get
		Set
			If (String.Equals(Me._ALLERGICGRUG_ALLERGICCQUESTION, value) = false) Then
				Me.OnALLERGICGRUG_ALLERGICCQUESTIONChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_ALLERGICCQUESTION = value
				Me.SendPropertyChanged("ALLERGICGRUG_ALLERGICCQUESTION")
				Me.OnALLERGICGRUG_ALLERGICCQUESTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_ALLERGICDRUGNAME", DbType:="NVarChar(200)")>  _
	Public Property ALLERGICGRUG_ALLERGICDRUGNAME() As String
		Get
			Return Me._ALLERGICGRUG_ALLERGICDRUGNAME
		End Get
		Set
			If (String.Equals(Me._ALLERGICGRUG_ALLERGICDRUGNAME, value) = false) Then
				Me.OnALLERGICGRUG_ALLERGICDRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_ALLERGICDRUGNAME = value
				Me.SendPropertyChanged("ALLERGICGRUG_ALLERGICDRUGNAME")
				Me.OnALLERGICGRUG_ALLERGICDRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_ISDEFAULT", DbType:="Int")>  _
	Public Property ALLERGICGRUG_ISDEFAULT() As System.Nullable(Of Integer)
		Get
			Return Me._ALLERGICGRUG_ISDEFAULT
		End Get
		Set
			If (Me._ALLERGICGRUG_ISDEFAULT.Equals(value) = false) Then
				Me.OnALLERGICGRUG_ISDEFAULTChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_ISDEFAULT = value
				Me.SendPropertyChanged("ALLERGICGRUG_ISDEFAULT")
				Me.OnALLERGICGRUG_ISDEFAULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_ISDISABLED", DbType:="Int")>  _
	Public Property ALLERGICGRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ALLERGICGRUG_ISDISABLED
		End Get
		Set
			If (Me._ALLERGICGRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnALLERGICGRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_ISDISABLED = value
				Me.SendPropertyChanged("ALLERGICGRUG_ISDISABLED")
				Me.OnALLERGICGRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICGRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property ALLERGICGRUG_CODE() As String
		Get
			Return Me._ALLERGICGRUG_CODE
		End Get
		Set
			If (String.Equals(Me._ALLERGICGRUG_CODE, value) = false) Then
				Me.OnALLERGICGRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICGRUG_CODE = value
				Me.SendPropertyChanged("ALLERGICGRUG_CODE")
				Me.OnALLERGICGRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ALLERGICSENSITIVE")>  _
Partial Public Class MAS_ALLERGICSENSITIVE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ALLERGICSENSITIVE_ID As Integer
	
	Private _ALLERGICSENSITIVE_CODE As String
	
	Private _ALLERGICSENSITIVE_ALLERGICBACTERIA As String
	
	Private _ALLERGICSENSITIVE_ENNAME As String
	
	Private _ALLERGICSENSITIVE_NOTE As String
	
	Private _ALLERGICSENSITIVE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_IDChanged()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_CODEChanged()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ALLERGICBACTERIAChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ALLERGICBACTERIAChanged()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_NOTEChanged()
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnALLERGICSENSITIVE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ALLERGICSENSITIVE_ID() As Integer
		Get
			Return Me._ALLERGICSENSITIVE_ID
		End Get
		Set
			If ((Me._ALLERGICSENSITIVE_ID = value)  _
						= false) Then
				Me.OnALLERGICSENSITIVE_IDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_ID = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_ID")
				Me.OnALLERGICSENSITIVE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_CODE", DbType:="NVarChar(50)")>  _
	Public Property ALLERGICSENSITIVE_CODE() As String
		Get
			Return Me._ALLERGICSENSITIVE_CODE
		End Get
		Set
			If (String.Equals(Me._ALLERGICSENSITIVE_CODE, value) = false) Then
				Me.OnALLERGICSENSITIVE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_CODE = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_CODE")
				Me.OnALLERGICSENSITIVE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_ALLERGICBACTERIA", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGICSENSITIVE_ALLERGICBACTERIA() As String
		Get
			Return Me._ALLERGICSENSITIVE_ALLERGICBACTERIA
		End Get
		Set
			If (String.Equals(Me._ALLERGICSENSITIVE_ALLERGICBACTERIA, value) = false) Then
				Me.OnALLERGICSENSITIVE_ALLERGICBACTERIAChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_ALLERGICBACTERIA = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_ALLERGICBACTERIA")
				Me.OnALLERGICSENSITIVE_ALLERGICBACTERIAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGICSENSITIVE_ENNAME() As String
		Get
			Return Me._ALLERGICSENSITIVE_ENNAME
		End Get
		Set
			If (String.Equals(Me._ALLERGICSENSITIVE_ENNAME, value) = false) Then
				Me.OnALLERGICSENSITIVE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_ENNAME = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_ENNAME")
				Me.OnALLERGICSENSITIVE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ALLERGICSENSITIVE_NOTE() As String
		Get
			Return Me._ALLERGICSENSITIVE_NOTE
		End Get
		Set
			If (String.Equals(Me._ALLERGICSENSITIVE_NOTE, value) = false) Then
				Me.OnALLERGICSENSITIVE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_NOTE = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_NOTE")
				Me.OnALLERGICSENSITIVE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLERGICSENSITIVE_ISDISABLED", DbType:="Int")>  _
	Public Property ALLERGICSENSITIVE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ALLERGICSENSITIVE_ISDISABLED
		End Get
		Set
			If (Me._ALLERGICSENSITIVE_ISDISABLED.Equals(value) = false) Then
				Me.OnALLERGICSENSITIVE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ALLERGICSENSITIVE_ISDISABLED = value
				Me.SendPropertyChanged("ALLERGICSENSITIVE_ISDISABLED")
				Me.OnALLERGICSENSITIVE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_AMPHUR")>  _
Partial Public Class MAS_AMPHUR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _AMPHUR_CODE As String
	
	Private _AMPHUR_NAME As String
	
	Private _ZIPCODE As String
	
	Private _PROVINCE_ID As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAMPHUR_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_CODEChanged()
    End Sub
    Partial Private Sub OnAMPHUR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHUR_NAMEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnPROVINCE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROVINCE_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_CODE", DbType:="VarChar(MAX)")>  _
	Public Property AMPHUR_CODE() As String
		Get
			Return Me._AMPHUR_CODE
		End Get
		Set
			If (String.Equals(Me._AMPHUR_CODE, value) = false) Then
				Me.OnAMPHUR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_CODE = value
				Me.SendPropertyChanged("AMPHUR_CODE")
				Me.OnAMPHUR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_NAME", DbType:="VarChar(MAX)")>  _
	Public Property AMPHUR_NAME() As String
		Get
			Return Me._AMPHUR_NAME
		End Get
		Set
			If (String.Equals(Me._AMPHUR_NAME, value) = false) Then
				Me.OnAMPHUR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_NAME = value
				Me.SendPropertyChanged("AMPHUR_NAME")
				Me.OnAMPHUR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="VarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_ID", DbType:="Int")>  _
	Public Property PROVINCE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROVINCE_ID
		End Get
		Set
			If (Me._PROVINCE_ID.Equals(value) = false) Then
				Me.OnPROVINCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_ID = value
				Me.SendPropertyChanged("PROVINCE_ID")
				Me.OnPROVINCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ANSWER_SET")>  _
Partial Public Class MAS_ANSWER_SET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ANSWER_ID As Integer
	
	Private _ANSWER_NAME As String
	
	Private _ANSWER_QUESTIONID As System.Nullable(Of Integer)
	
	Private _FK_QUESTIONTEMPLATE As Integer
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnANSWER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnANSWER_IDChanged()
    End Sub
    Partial Private Sub OnANSWER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnANSWER_NAMEChanged()
    End Sub
    Partial Private Sub OnANSWER_QUESTIONIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANSWER_QUESTIONIDChanged()
    End Sub
    Partial Private Sub OnFK_QUESTIONTEMPLATEChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_QUESTIONTEMPLATEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ANSWER_ID() As Integer
		Get
			Return Me._ANSWER_ID
		End Get
		Set
			If ((Me._ANSWER_ID = value)  _
						= false) Then
				Me.OnANSWER_IDChanging(value)
				Me.SendPropertyChanging
				Me._ANSWER_ID = value
				Me.SendPropertyChanged("ANSWER_ID")
				Me.OnANSWER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ANSWER_NAME() As String
		Get
			Return Me._ANSWER_NAME
		End Get
		Set
			If (String.Equals(Me._ANSWER_NAME, value) = false) Then
				Me.OnANSWER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ANSWER_NAME = value
				Me.SendPropertyChanged("ANSWER_NAME")
				Me.OnANSWER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWER_QUESTIONID", DbType:="Int")>  _
	Public Property ANSWER_QUESTIONID() As System.Nullable(Of Integer)
		Get
			Return Me._ANSWER_QUESTIONID
		End Get
		Set
			If (Me._ANSWER_QUESTIONID.Equals(value) = false) Then
				Me.OnANSWER_QUESTIONIDChanging(value)
				Me.SendPropertyChanging
				Me._ANSWER_QUESTIONID = value
				Me.SendPropertyChanged("ANSWER_QUESTIONID")
				Me.OnANSWER_QUESTIONIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_QUESTIONTEMPLATE", DbType:="Int NOT NULL")>  _
	Public Property FK_QUESTIONTEMPLATE() As Integer
		Get
			Return Me._FK_QUESTIONTEMPLATE
		End Get
		Set
			If ((Me._FK_QUESTIONTEMPLATE = value)  _
						= false) Then
				Me.OnFK_QUESTIONTEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._FK_QUESTIONTEMPLATE = value
				Me.SendPropertyChanged("FK_QUESTIONTEMPLATE")
				Me.OnFK_QUESTIONTEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ANSWERS")>  _
Partial Public Class MAS_ANSWER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ANSWERS_ID As Integer
	
	Private _ANSWERS_CODE As String
	
	Private _ANSWERS_ANSWER As String
	
	Private _ANSWERS_ENNAME As String
	
	Private _ANSWERS_NOTE As String
	
	Private _ANSWERS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnANSWERS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnANSWERS_IDChanged()
    End Sub
    Partial Private Sub OnANSWERS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnANSWERS_CODEChanged()
    End Sub
    Partial Private Sub OnANSWERS_ANSWERChanging(value As String)
    End Sub
    Partial Private Sub OnANSWERS_ANSWERChanged()
    End Sub
    Partial Private Sub OnANSWERS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnANSWERS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnANSWERS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnANSWERS_NOTEChanged()
    End Sub
    Partial Private Sub OnANSWERS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANSWERS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ANSWERS_ID() As Integer
		Get
			Return Me._ANSWERS_ID
		End Get
		Set
			If ((Me._ANSWERS_ID = value)  _
						= false) Then
				Me.OnANSWERS_IDChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_ID = value
				Me.SendPropertyChanged("ANSWERS_ID")
				Me.OnANSWERS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_CODE", DbType:="NVarChar(50)")>  _
	Public Property ANSWERS_CODE() As String
		Get
			Return Me._ANSWERS_CODE
		End Get
		Set
			If (String.Equals(Me._ANSWERS_CODE, value) = false) Then
				Me.OnANSWERS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_CODE = value
				Me.SendPropertyChanged("ANSWERS_CODE")
				Me.OnANSWERS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_ANSWER", DbType:="NVarChar(MAX)")>  _
	Public Property ANSWERS_ANSWER() As String
		Get
			Return Me._ANSWERS_ANSWER
		End Get
		Set
			If (String.Equals(Me._ANSWERS_ANSWER, value) = false) Then
				Me.OnANSWERS_ANSWERChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_ANSWER = value
				Me.SendPropertyChanged("ANSWERS_ANSWER")
				Me.OnANSWERS_ANSWERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ANSWERS_ENNAME() As String
		Get
			Return Me._ANSWERS_ENNAME
		End Get
		Set
			If (String.Equals(Me._ANSWERS_ENNAME, value) = false) Then
				Me.OnANSWERS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_ENNAME = value
				Me.SendPropertyChanged("ANSWERS_ENNAME")
				Me.OnANSWERS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ANSWERS_NOTE() As String
		Get
			Return Me._ANSWERS_NOTE
		End Get
		Set
			If (String.Equals(Me._ANSWERS_NOTE, value) = false) Then
				Me.OnANSWERS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_NOTE = value
				Me.SendPropertyChanged("ANSWERS_NOTE")
				Me.OnANSWERS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANSWERS_ISDISABLED", DbType:="Int")>  _
	Public Property ANSWERS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ANSWERS_ISDISABLED
		End Get
		Set
			If (Me._ANSWERS_ISDISABLED.Equals(value) = false) Then
				Me.OnANSWERS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ANSWERS_ISDISABLED = value
				Me.SendPropertyChanged("ANSWERS_ISDISABLED")
				Me.OnANSWERS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BACTERIALEVEL")>  _
Partial Public Class MAS_BACTERIALEVEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BACTERIALEVEL_ID As Integer
	
	Private _BACTERIALEVEL_CODE As String
	
	Private _BACTERIALEVEL_BACTERIALEVELNAME As String
	
	Private _BACTERIALEVEL_ENNAME As String
	
	Private _BACTERIALEVEL_NOTE As String
	
	Private _BACTERIALEVEL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBACTERIALEVEL_IDChanged()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBACTERIALEVEL_CODEChanged()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_BACTERIALEVELNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBACTERIALEVEL_BACTERIALEVELNAMEChanged()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBACTERIALEVEL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBACTERIALEVEL_NOTEChanged()
    End Sub
    Partial Private Sub OnBACTERIALEVEL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBACTERIALEVEL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BACTERIALEVEL_ID() As Integer
		Get
			Return Me._BACTERIALEVEL_ID
		End Get
		Set
			If ((Me._BACTERIALEVEL_ID = value)  _
						= false) Then
				Me.OnBACTERIALEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_ID = value
				Me.SendPropertyChanged("BACTERIALEVEL_ID")
				Me.OnBACTERIALEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_CODE", DbType:="NVarChar(50)")>  _
	Public Property BACTERIALEVEL_CODE() As String
		Get
			Return Me._BACTERIALEVEL_CODE
		End Get
		Set
			If (String.Equals(Me._BACTERIALEVEL_CODE, value) = false) Then
				Me.OnBACTERIALEVEL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_CODE = value
				Me.SendPropertyChanged("BACTERIALEVEL_CODE")
				Me.OnBACTERIALEVEL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_BACTERIALEVELNAME", DbType:="NVarChar(200)")>  _
	Public Property BACTERIALEVEL_BACTERIALEVELNAME() As String
		Get
			Return Me._BACTERIALEVEL_BACTERIALEVELNAME
		End Get
		Set
			If (String.Equals(Me._BACTERIALEVEL_BACTERIALEVELNAME, value) = false) Then
				Me.OnBACTERIALEVEL_BACTERIALEVELNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_BACTERIALEVELNAME = value
				Me.SendPropertyChanged("BACTERIALEVEL_BACTERIALEVELNAME")
				Me.OnBACTERIALEVEL_BACTERIALEVELNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BACTERIALEVEL_ENNAME() As String
		Get
			Return Me._BACTERIALEVEL_ENNAME
		End Get
		Set
			If (String.Equals(Me._BACTERIALEVEL_ENNAME, value) = false) Then
				Me.OnBACTERIALEVEL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_ENNAME = value
				Me.SendPropertyChanged("BACTERIALEVEL_ENNAME")
				Me.OnBACTERIALEVEL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BACTERIALEVEL_NOTE() As String
		Get
			Return Me._BACTERIALEVEL_NOTE
		End Get
		Set
			If (String.Equals(Me._BACTERIALEVEL_NOTE, value) = false) Then
				Me.OnBACTERIALEVEL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_NOTE = value
				Me.SendPropertyChanged("BACTERIALEVEL_NOTE")
				Me.OnBACTERIALEVEL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BACTERIALEVEL_ISDISABLED", DbType:="Int")>  _
	Public Property BACTERIALEVEL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BACTERIALEVEL_ISDISABLED
		End Get
		Set
			If (Me._BACTERIALEVEL_ISDISABLED.Equals(value) = false) Then
				Me.OnBACTERIALEVEL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BACTERIALEVEL_ISDISABLED = value
				Me.SendPropertyChanged("BACTERIALEVEL_ISDISABLED")
				Me.OnBACTERIALEVEL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BANK")>  _
Partial Public Class MAS_BANK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BANK_ID As Integer
	
	Private _BANK_CODE As String
	
	Private _BANK_BANKNAME As String
	
	Private _BANK_ENNAME As String
	
	Private _BANK_NOTE As String
	
	Private _BANK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBANK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBANK_IDChanged()
    End Sub
    Partial Private Sub OnBANK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_CODEChanged()
    End Sub
    Partial Private Sub OnBANK_BANKNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_BANKNAMEChanged()
    End Sub
    Partial Private Sub OnBANK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnBANK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_NOTEChanged()
    End Sub
    Partial Private Sub OnBANK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BANK_ID() As Integer
		Get
			Return Me._BANK_ID
		End Get
		Set
			If ((Me._BANK_ID = value)  _
						= false) Then
				Me.OnBANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ID = value
				Me.SendPropertyChanged("BANK_ID")
				Me.OnBANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_CODE", DbType:="NVarChar(50)")>  _
	Public Property BANK_CODE() As String
		Get
			Return Me._BANK_CODE
		End Get
		Set
			If (String.Equals(Me._BANK_CODE, value) = false) Then
				Me.OnBANK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_CODE = value
				Me.SendPropertyChanged("BANK_CODE")
				Me.OnBANK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_BANKNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_BANKNAME() As String
		Get
			Return Me._BANK_BANKNAME
		End Get
		Set
			If (String.Equals(Me._BANK_BANKNAME, value) = false) Then
				Me.OnBANK_BANKNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_BANKNAME = value
				Me.SendPropertyChanged("BANK_BANKNAME")
				Me.OnBANK_BANKNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_ENNAME() As String
		Get
			Return Me._BANK_ENNAME
		End Get
		Set
			If (String.Equals(Me._BANK_ENNAME, value) = false) Then
				Me.OnBANK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ENNAME = value
				Me.SendPropertyChanged("BANK_ENNAME")
				Me.OnBANK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_NOTE() As String
		Get
			Return Me._BANK_NOTE
		End Get
		Set
			If (String.Equals(Me._BANK_NOTE, value) = false) Then
				Me.OnBANK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_NOTE = value
				Me.SendPropertyChanged("BANK_NOTE")
				Me.OnBANK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ISDISABLED", DbType:="Int")>  _
	Public Property BANK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BANK_ISDISABLED
		End Get
		Set
			If (Me._BANK_ISDISABLED.Equals(value) = false) Then
				Me.OnBANK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ISDISABLED = value
				Me.SendPropertyChanged("BANK_ISDISABLED")
				Me.OnBANK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BASE")>  _
Partial Public Class MAS_BASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BASE_ID As Integer
	
	Private _BASE_CODE As String
	
	Private _BASE_NAME As String
	
	Private _BASE_ENNAME As String
	
	Private _BASE_NOTE As String
	
	Private _BASE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBASE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBASE_IDChanged()
    End Sub
    Partial Private Sub OnBASE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_CODEChanged()
    End Sub
    Partial Private Sub OnBASE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_NAMEChanged()
    End Sub
    Partial Private Sub OnBASE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnBASE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_NOTEChanged()
    End Sub
    Partial Private Sub OnBASE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBASE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BASE_ID() As Integer
		Get
			Return Me._BASE_ID
		End Get
		Set
			If ((Me._BASE_ID = value)  _
						= false) Then
				Me.OnBASE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BASE_ID = value
				Me.SendPropertyChanged("BASE_ID")
				Me.OnBASE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_CODE() As String
		Get
			Return Me._BASE_CODE
		End Get
		Set
			If (String.Equals(Me._BASE_CODE, value) = false) Then
				Me.OnBASE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BASE_CODE = value
				Me.SendPropertyChanged("BASE_CODE")
				Me.OnBASE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_NAME() As String
		Get
			Return Me._BASE_NAME
		End Get
		Set
			If (String.Equals(Me._BASE_NAME, value) = false) Then
				Me.OnBASE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BASE_NAME = value
				Me.SendPropertyChanged("BASE_NAME")
				Me.OnBASE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_ENNAME() As String
		Get
			Return Me._BASE_ENNAME
		End Get
		Set
			If (String.Equals(Me._BASE_ENNAME, value) = false) Then
				Me.OnBASE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BASE_ENNAME = value
				Me.SendPropertyChanged("BASE_ENNAME")
				Me.OnBASE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_NOTE() As String
		Get
			Return Me._BASE_NOTE
		End Get
		Set
			If (String.Equals(Me._BASE_NOTE, value) = false) Then
				Me.OnBASE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BASE_NOTE = value
				Me.SendPropertyChanged("BASE_NOTE")
				Me.OnBASE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_ISDISABLED", DbType:="Int")>  _
	Public Property BASE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BASE_ISDISABLED
		End Get
		Set
			If (Me._BASE_ISDISABLED.Equals(value) = false) Then
				Me.OnBASE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BASE_ISDISABLED = value
				Me.SendPropertyChanged("BASE_ISDISABLED")
				Me.OnBASE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BCONTROL")>  _
Partial Public Class MAS_BCONTROL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BCONTROL_ID As Integer
	
	Private _BCONTROL_CODE As System.Nullable(Of Integer)
	
	Private _BCONTROL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBCONTROL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBCONTROL_IDChanged()
    End Sub
    Partial Private Sub OnBCONTROL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBCONTROL_CODEChanged()
    End Sub
    Partial Private Sub OnBCONTROL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnBCONTROL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BCONTROL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BCONTROL_ID() As Integer
		Get
			Return Me._BCONTROL_ID
		End Get
		Set
			If ((Me._BCONTROL_ID = value)  _
						= false) Then
				Me.OnBCONTROL_IDChanging(value)
				Me.SendPropertyChanging
				Me._BCONTROL_ID = value
				Me.SendPropertyChanged("BCONTROL_ID")
				Me.OnBCONTROL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BCONTROL_CODE", DbType:="Int")>  _
	Public Property BCONTROL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._BCONTROL_CODE
		End Get
		Set
			If (Me._BCONTROL_CODE.Equals(value) = false) Then
				Me.OnBCONTROL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BCONTROL_CODE = value
				Me.SendPropertyChanged("BCONTROL_CODE")
				Me.OnBCONTROL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BCONTROL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property BCONTROL_DESCRIPTION() As String
		Get
			Return Me._BCONTROL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._BCONTROL_DESCRIPTION, value) = false) Then
				Me.OnBCONTROL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._BCONTROL_DESCRIPTION = value
				Me.SendPropertyChanged("BCONTROL_DESCRIPTION")
				Me.OnBCONTROL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BED")>  _
Partial Public Class MAS_BED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BED_ID As Integer
	
	Private _BED_BEDKEY As System.Nullable(Of Integer)
	
	Private _BED_CODE As String
	
	Private _BED_BEDNAME As String
	
	Private _BED_ENNANE As String
	
	Private _BED_NOTE As String
	
	Private _BED_ISDISABLED As System.Nullable(Of Integer)
	
	Private _BED_ROOMKEY As System.Nullable(Of Integer)
	
	Private _BED_ITEMKEY As System.Nullable(Of Integer)
	
	Private _BED_ISUNREG As System.Nullable(Of Integer)
	
	Private _BED_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _BED_ORDERNUM As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBED_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBED_IDChanged()
    End Sub
    Partial Private Sub OnBED_BEDKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_BEDKEYChanged()
    End Sub
    Partial Private Sub OnBED_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBED_CODEChanged()
    End Sub
    Partial Private Sub OnBED_BEDNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBED_BEDNAMEChanged()
    End Sub
    Partial Private Sub OnBED_ENNANEChanging(value As String)
    End Sub
    Partial Private Sub OnBED_ENNANEChanged()
    End Sub
    Partial Private Sub OnBED_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBED_NOTEChanged()
    End Sub
    Partial Private Sub OnBED_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnBED_ROOMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_ROOMKEYChanged()
    End Sub
    Partial Private Sub OnBED_ITEMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_ITEMKEYChanged()
    End Sub
    Partial Private Sub OnBED_ISUNREGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_ISUNREGChanged()
    End Sub
    Partial Private Sub OnBED_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnBED_ORDERNUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBED_ORDERNUMChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BED_ID() As Integer
		Get
			Return Me._BED_ID
		End Get
		Set
			If ((Me._BED_ID = value)  _
						= false) Then
				Me.OnBED_IDChanging(value)
				Me.SendPropertyChanging
				Me._BED_ID = value
				Me.SendPropertyChanged("BED_ID")
				Me.OnBED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_BEDKEY", DbType:="Int")>  _
	Public Property BED_BEDKEY() As System.Nullable(Of Integer)
		Get
			Return Me._BED_BEDKEY
		End Get
		Set
			If (Me._BED_BEDKEY.Equals(value) = false) Then
				Me.OnBED_BEDKEYChanging(value)
				Me.SendPropertyChanging
				Me._BED_BEDKEY = value
				Me.SendPropertyChanged("BED_BEDKEY")
				Me.OnBED_BEDKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_CODE", DbType:="NVarChar(50)")>  _
	Public Property BED_CODE() As String
		Get
			Return Me._BED_CODE
		End Get
		Set
			If (String.Equals(Me._BED_CODE, value) = false) Then
				Me.OnBED_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BED_CODE = value
				Me.SendPropertyChanged("BED_CODE")
				Me.OnBED_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_BEDNAME", DbType:="NVarChar(200)")>  _
	Public Property BED_BEDNAME() As String
		Get
			Return Me._BED_BEDNAME
		End Get
		Set
			If (String.Equals(Me._BED_BEDNAME, value) = false) Then
				Me.OnBED_BEDNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BED_BEDNAME = value
				Me.SendPropertyChanged("BED_BEDNAME")
				Me.OnBED_BEDNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ENNANE", DbType:="NVarChar(200)")>  _
	Public Property BED_ENNANE() As String
		Get
			Return Me._BED_ENNANE
		End Get
		Set
			If (String.Equals(Me._BED_ENNANE, value) = false) Then
				Me.OnBED_ENNANEChanging(value)
				Me.SendPropertyChanging
				Me._BED_ENNANE = value
				Me.SendPropertyChanged("BED_ENNANE")
				Me.OnBED_ENNANEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BED_NOTE() As String
		Get
			Return Me._BED_NOTE
		End Get
		Set
			If (String.Equals(Me._BED_NOTE, value) = false) Then
				Me.OnBED_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BED_NOTE = value
				Me.SendPropertyChanged("BED_NOTE")
				Me.OnBED_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ISDISABLED", DbType:="Int")>  _
	Public Property BED_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BED_ISDISABLED
		End Get
		Set
			If (Me._BED_ISDISABLED.Equals(value) = false) Then
				Me.OnBED_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BED_ISDISABLED = value
				Me.SendPropertyChanged("BED_ISDISABLED")
				Me.OnBED_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ROOMKEY", DbType:="Int")>  _
	Public Property BED_ROOMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._BED_ROOMKEY
		End Get
		Set
			If (Me._BED_ROOMKEY.Equals(value) = false) Then
				Me.OnBED_ROOMKEYChanging(value)
				Me.SendPropertyChanging
				Me._BED_ROOMKEY = value
				Me.SendPropertyChanged("BED_ROOMKEY")
				Me.OnBED_ROOMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ITEMKEY", DbType:="Int")>  _
	Public Property BED_ITEMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._BED_ITEMKEY
		End Get
		Set
			If (Me._BED_ITEMKEY.Equals(value) = false) Then
				Me.OnBED_ITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._BED_ITEMKEY = value
				Me.SendPropertyChanged("BED_ITEMKEY")
				Me.OnBED_ITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ISUNREG", DbType:="Int")>  _
	Public Property BED_ISUNREG() As System.Nullable(Of Integer)
		Get
			Return Me._BED_ISUNREG
		End Get
		Set
			If (Me._BED_ISUNREG.Equals(value) = false) Then
				Me.OnBED_ISUNREGChanging(value)
				Me.SendPropertyChanging
				Me._BED_ISUNREG = value
				Me.SendPropertyChanged("BED_ISUNREG")
				Me.OnBED_ISUNREGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property BED_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._BED_SERVICEUNITKEY
		End Get
		Set
			If (Me._BED_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnBED_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._BED_SERVICEUNITKEY = value
				Me.SendPropertyChanged("BED_SERVICEUNITKEY")
				Me.OnBED_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BED_ORDERNUM", DbType:="Int")>  _
	Public Property BED_ORDERNUM() As System.Nullable(Of Integer)
		Get
			Return Me._BED_ORDERNUM
		End Get
		Set
			If (Me._BED_ORDERNUM.Equals(value) = false) Then
				Me.OnBED_ORDERNUMChanging(value)
				Me.SendPropertyChanging
				Me._BED_ORDERNUM = value
				Me.SendPropertyChanged("BED_ORDERNUM")
				Me.OnBED_ORDERNUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BUDGET")>  _
Partial Public Class MAS_BUDGET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_ID As Integer
	
	Private _BUDGET_CODE As String
	
	Private _BUDGET_NAME As String
	
	Private _BUDGET_ENNAME As String
	
	Private _BUDGET_NOTE As String
	
	Private _BUDGET_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_CODEChanged()
    End Sub
    Partial Private Sub OnBUDGET_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_NAMEChanged()
    End Sub
    Partial Private Sub OnBUDGET_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_ENNAMEChanged()
    End Sub
    Partial Private Sub OnBUDGET_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_NOTEChanged()
    End Sub
    Partial Private Sub OnBUDGET_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_ID() As Integer
		Get
			Return Me._BUDGET_ID
		End Get
		Set
			If ((Me._BUDGET_ID = value)  _
						= false) Then
				Me.OnBUDGET_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ID = value
				Me.SendPropertyChanged("BUDGET_ID")
				Me.OnBUDGET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_CODE() As String
		Get
			Return Me._BUDGET_CODE
		End Get
		Set
			If (String.Equals(Me._BUDGET_CODE, value) = false) Then
				Me.OnBUDGET_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_CODE = value
				Me.SendPropertyChanged("BUDGET_CODE")
				Me.OnBUDGET_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_NAME() As String
		Get
			Return Me._BUDGET_NAME
		End Get
		Set
			If (String.Equals(Me._BUDGET_NAME, value) = false) Then
				Me.OnBUDGET_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_NAME = value
				Me.SendPropertyChanged("BUDGET_NAME")
				Me.OnBUDGET_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_ENNAME() As String
		Get
			Return Me._BUDGET_ENNAME
		End Get
		Set
			If (String.Equals(Me._BUDGET_ENNAME, value) = false) Then
				Me.OnBUDGET_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ENNAME = value
				Me.SendPropertyChanged("BUDGET_ENNAME")
				Me.OnBUDGET_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_NOTE() As String
		Get
			Return Me._BUDGET_NOTE
		End Get
		Set
			If (String.Equals(Me._BUDGET_NOTE, value) = false) Then
				Me.OnBUDGET_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_NOTE = value
				Me.SendPropertyChanged("BUDGET_NOTE")
				Me.OnBUDGET_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ISDISABLED", DbType:="Int")>  _
	Public Property BUDGET_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_ISDISABLED
		End Get
		Set
			If (Me._BUDGET_ISDISABLED.Equals(value) = false) Then
				Me.OnBUDGET_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ISDISABLED = value
				Me.SendPropertyChanged("BUDGET_ISDISABLED")
				Me.OnBUDGET_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BUILDINGHOSPITAL")>  _
Partial Public Class MAS_BUILDINGHOSPITAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUILDINGHOSPITAL_ID As Integer
	
	Private _BUILDINGHOSPITAL_BUILDINGHOSPITAL As String
	
	Private _BUILDINGHOSPITAL_CODE As String
	
	Private _BUILDINGHOSPITAL_ENNAME As String
	
	Private _BUILDINGHOSPITAL_NOTE As String
	
	Private _BUILDINGHOSPITAL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_IDChanged()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_BUILDINGHOSPITALChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_BUILDINGHOSPITALChanged()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_CODEChanged()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_NOTEChanged()
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUILDINGHOSPITAL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUILDINGHOSPITAL_ID() As Integer
		Get
			Return Me._BUILDINGHOSPITAL_ID
		End Get
		Set
			If ((Me._BUILDINGHOSPITAL_ID = value)  _
						= false) Then
				Me.OnBUILDINGHOSPITAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_ID = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_ID")
				Me.OnBUILDINGHOSPITAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_BUILDINGHOSPITAL", DbType:="NVarChar(MAX)")>  _
	Public Property BUILDINGHOSPITAL_BUILDINGHOSPITAL() As String
		Get
			Return Me._BUILDINGHOSPITAL_BUILDINGHOSPITAL
		End Get
		Set
			If (String.Equals(Me._BUILDINGHOSPITAL_BUILDINGHOSPITAL, value) = false) Then
				Me.OnBUILDINGHOSPITAL_BUILDINGHOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_BUILDINGHOSPITAL = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_BUILDINGHOSPITAL")
				Me.OnBUILDINGHOSPITAL_BUILDINGHOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_CODE", DbType:="NVarChar(50)")>  _
	Public Property BUILDINGHOSPITAL_CODE() As String
		Get
			Return Me._BUILDINGHOSPITAL_CODE
		End Get
		Set
			If (String.Equals(Me._BUILDINGHOSPITAL_CODE, value) = false) Then
				Me.OnBUILDINGHOSPITAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_CODE = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_CODE")
				Me.OnBUILDINGHOSPITAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property BUILDINGHOSPITAL_ENNAME() As String
		Get
			Return Me._BUILDINGHOSPITAL_ENNAME
		End Get
		Set
			If (String.Equals(Me._BUILDINGHOSPITAL_ENNAME, value) = false) Then
				Me.OnBUILDINGHOSPITAL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_ENNAME = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_ENNAME")
				Me.OnBUILDINGHOSPITAL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property BUILDINGHOSPITAL_NOTE() As String
		Get
			Return Me._BUILDINGHOSPITAL_NOTE
		End Get
		Set
			If (String.Equals(Me._BUILDINGHOSPITAL_NOTE, value) = false) Then
				Me.OnBUILDINGHOSPITAL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_NOTE = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_NOTE")
				Me.OnBUILDINGHOSPITAL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDINGHOSPITAL_ISDISABLED", DbType:="Int")>  _
	Public Property BUILDINGHOSPITAL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._BUILDINGHOSPITAL_ISDISABLED
		End Get
		Set
			If (Me._BUILDINGHOSPITAL_ISDISABLED.Equals(value) = false) Then
				Me.OnBUILDINGHOSPITAL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._BUILDINGHOSPITAL_ISDISABLED = value
				Me.SendPropertyChanged("BUILDINGHOSPITAL_ISDISABLED")
				Me.OnBUILDINGHOSPITAL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CATEGORY_DRUG")>  _
Partial Public Class MAS_CATEGORY_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CATEGORY_DRUG_ID As Integer
	
	Private _CATEGORY_DRUG_CATEGORYKEY As System.Nullable(Of Integer)
	
	Private _CATEGORY_DRUG_CODE As String
	
	Private _CATEGORY_DRUG_CATEGORYNAME As String
	
	Private _CATEGORY_DRUG_ENNAME As String
	
	Private _CATEGORY_DRUG_NOTE As String
	
	Private _CATEGORY_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CATEGORY_DRUG_DISPLAYCOLOR As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CATEGORYKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CATEGORYKEYChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CATEGORYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_CATEGORYNAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_DISPLAYCOLORChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUG_DISPLAYCOLORChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CATEGORY_DRUG_ID() As Integer
		Get
			Return Me._CATEGORY_DRUG_ID
		End Get
		Set
			If ((Me._CATEGORY_DRUG_ID = value)  _
						= false) Then
				Me.OnCATEGORY_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_ID = value
				Me.SendPropertyChanged("CATEGORY_DRUG_ID")
				Me.OnCATEGORY_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_CATEGORYKEY", DbType:="Int")>  _
	Public Property CATEGORY_DRUG_CATEGORYKEY() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORY_DRUG_CATEGORYKEY
		End Get
		Set
			If (Me._CATEGORY_DRUG_CATEGORYKEY.Equals(value) = false) Then
				Me.OnCATEGORY_DRUG_CATEGORYKEYChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_CATEGORYKEY = value
				Me.SendPropertyChanged("CATEGORY_DRUG_CATEGORYKEY")
				Me.OnCATEGORY_DRUG_CATEGORYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property CATEGORY_DRUG_CODE() As String
		Get
			Return Me._CATEGORY_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG_CODE, value) = false) Then
				Me.OnCATEGORY_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_CODE = value
				Me.SendPropertyChanged("CATEGORY_DRUG_CODE")
				Me.OnCATEGORY_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_CATEGORYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_DRUG_CATEGORYNAME() As String
		Get
			Return Me._CATEGORY_DRUG_CATEGORYNAME
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG_CATEGORYNAME, value) = false) Then
				Me.OnCATEGORY_DRUG_CATEGORYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_CATEGORYNAME = value
				Me.SendPropertyChanged("CATEGORY_DRUG_CATEGORYNAME")
				Me.OnCATEGORY_DRUG_CATEGORYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_DRUG_ENNAME() As String
		Get
			Return Me._CATEGORY_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG_ENNAME, value) = false) Then
				Me.OnCATEGORY_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_ENNAME = value
				Me.SendPropertyChanged("CATEGORY_DRUG_ENNAME")
				Me.OnCATEGORY_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_DRUG_NOTE() As String
		Get
			Return Me._CATEGORY_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG_NOTE, value) = false) Then
				Me.OnCATEGORY_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_NOTE = value
				Me.SendPropertyChanged("CATEGORY_DRUG_NOTE")
				Me.OnCATEGORY_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property CATEGORY_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORY_DRUG_ISDISABLED
		End Get
		Set
			If (Me._CATEGORY_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnCATEGORY_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("CATEGORY_DRUG_ISDISABLED")
				Me.OnCATEGORY_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG_DISPLAYCOLOR", DbType:="NVarChar(50)")>  _
	Public Property CATEGORY_DRUG_DISPLAYCOLOR() As String
		Get
			Return Me._CATEGORY_DRUG_DISPLAYCOLOR
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG_DISPLAYCOLOR, value) = false) Then
				Me.OnCATEGORY_DRUG_DISPLAYCOLORChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG_DISPLAYCOLOR = value
				Me.SendPropertyChanged("CATEGORY_DRUG_DISPLAYCOLOR")
				Me.OnCATEGORY_DRUG_DISPLAYCOLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CATEGORYDRUG_MAIN")>  _
Partial Public Class MAS_CATEGORYDRUG_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CATEGORYDRUG_MAIN_ID As Integer
	
	Private _CATEGORYDRUG_MAIN_CETEGORYDRUGKEY As System.Nullable(Of Integer)
	
	Private _CATEGORYDRUG_MAIN_CODE As String
	
	Private _CATEGORYDRUG_MAIN_CETEGORYDRUGNAME As String
	
	Private _CATEGORYDRUG_MAIN_ENNAME As String
	
	Private _CATEGORYDRUG_MAIN_NOTE As String
	
	Private _CATEGORYDRUG_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CETEGORYDRUGKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CETEGORYDRUGKEYChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CETEGORYDRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_CETEGORYDRUGNAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORYDRUG_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CATEGORYDRUG_MAIN_ID() As Integer
		Get
			Return Me._CATEGORYDRUG_MAIN_ID
		End Get
		Set
			If ((Me._CATEGORYDRUG_MAIN_ID = value)  _
						= false) Then
				Me.OnCATEGORYDRUG_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_ID = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_ID")
				Me.OnCATEGORYDRUG_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_CETEGORYDRUGKEY", DbType:="Int")>  _
	Public Property CATEGORYDRUG_MAIN_CETEGORYDRUGKEY() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORYDRUG_MAIN_CETEGORYDRUGKEY
		End Get
		Set
			If (Me._CATEGORYDRUG_MAIN_CETEGORYDRUGKEY.Equals(value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_CETEGORYDRUGKEYChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_CETEGORYDRUGKEY = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_CETEGORYDRUGKEY")
				Me.OnCATEGORYDRUG_MAIN_CETEGORYDRUGKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property CATEGORYDRUG_MAIN_CODE() As String
		Get
			Return Me._CATEGORYDRUG_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._CATEGORYDRUG_MAIN_CODE, value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_CODE = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_CODE")
				Me.OnCATEGORYDRUG_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_CETEGORYDRUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORYDRUG_MAIN_CETEGORYDRUGNAME() As String
		Get
			Return Me._CATEGORYDRUG_MAIN_CETEGORYDRUGNAME
		End Get
		Set
			If (String.Equals(Me._CATEGORYDRUG_MAIN_CETEGORYDRUGNAME, value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_CETEGORYDRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_CETEGORYDRUGNAME = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_CETEGORYDRUGNAME")
				Me.OnCATEGORYDRUG_MAIN_CETEGORYDRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORYDRUG_MAIN_ENNAME() As String
		Get
			Return Me._CATEGORYDRUG_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._CATEGORYDRUG_MAIN_ENNAME, value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_ENNAME = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_ENNAME")
				Me.OnCATEGORYDRUG_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORYDRUG_MAIN_NOTE() As String
		Get
			Return Me._CATEGORYDRUG_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._CATEGORYDRUG_MAIN_NOTE, value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_NOTE = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_NOTE")
				Me.OnCATEGORYDRUG_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORYDRUG_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property CATEGORYDRUG_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORYDRUG_MAIN_ISDISABLED
		End Get
		Set
			If (Me._CATEGORYDRUG_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnCATEGORYDRUG_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORYDRUG_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("CATEGORYDRUG_MAIN_ISDISABLED")
				Me.OnCATEGORYDRUG_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CAUSEDISEASE")>  _
Partial Public Class MAS_CAUSEDISEASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CAUSEDISEASE_ID As Integer
	
	Private _CAUSEDISEASE_CODE As String
	
	Private _CAUSEDISEASE_NAME As String
	
	Private _CAUSEDISEASE_ENNAME As String
	
	Private _CAUSEDISEASE_NOTE As String
	
	Private _CAUSEDISEASE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCAUSEDISEASE_IDChanged()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSEDISEASE_CODEChanged()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSEDISEASE_NAMEChanged()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSEDISEASE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSEDISEASE_NOTEChanged()
    End Sub
    Partial Private Sub OnCAUSEDISEASE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAUSEDISEASE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CAUSEDISEASE_ID() As Integer
		Get
			Return Me._CAUSEDISEASE_ID
		End Get
		Set
			If ((Me._CAUSEDISEASE_ID = value)  _
						= false) Then
				Me.OnCAUSEDISEASE_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_ID = value
				Me.SendPropertyChanged("CAUSEDISEASE_ID")
				Me.OnCAUSEDISEASE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CAUSEDISEASE_CODE() As String
		Get
			Return Me._CAUSEDISEASE_CODE
		End Get
		Set
			If (String.Equals(Me._CAUSEDISEASE_CODE, value) = false) Then
				Me.OnCAUSEDISEASE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_CODE = value
				Me.SendPropertyChanged("CAUSEDISEASE_CODE")
				Me.OnCAUSEDISEASE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAUSEDISEASE_NAME() As String
		Get
			Return Me._CAUSEDISEASE_NAME
		End Get
		Set
			If (String.Equals(Me._CAUSEDISEASE_NAME, value) = false) Then
				Me.OnCAUSEDISEASE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_NAME = value
				Me.SendPropertyChanged("CAUSEDISEASE_NAME")
				Me.OnCAUSEDISEASE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAUSEDISEASE_ENNAME() As String
		Get
			Return Me._CAUSEDISEASE_ENNAME
		End Get
		Set
			If (String.Equals(Me._CAUSEDISEASE_ENNAME, value) = false) Then
				Me.OnCAUSEDISEASE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_ENNAME = value
				Me.SendPropertyChanged("CAUSEDISEASE_ENNAME")
				Me.OnCAUSEDISEASE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CAUSEDISEASE_NOTE() As String
		Get
			Return Me._CAUSEDISEASE_NOTE
		End Get
		Set
			If (String.Equals(Me._CAUSEDISEASE_NOTE, value) = false) Then
				Me.OnCAUSEDISEASE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_NOTE = value
				Me.SendPropertyChanged("CAUSEDISEASE_NOTE")
				Me.OnCAUSEDISEASE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEDISEASE_ISDISABLED", DbType:="Int")>  _
	Public Property CAUSEDISEASE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CAUSEDISEASE_ISDISABLED
		End Get
		Set
			If (Me._CAUSEDISEASE_ISDISABLED.Equals(value) = false) Then
				Me.OnCAUSEDISEASE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEDISEASE_ISDISABLED = value
				Me.SendPropertyChanged("CAUSEDISEASE_ISDISABLED")
				Me.OnCAUSEDISEASE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CAUSEIN")>  _
Partial Public Class MAS_CAUSEIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CAUSEIN_ID As Integer
	
	Private _CAUSEIN_CODE As System.Nullable(Of Integer)
	
	Private _CAUSEIN_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCAUSEIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCAUSEIN_IDChanged()
    End Sub
    Partial Private Sub OnCAUSEIN_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAUSEIN_CODEChanged()
    End Sub
    Partial Private Sub OnCAUSEIN_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCAUSEIN_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CAUSEIN_ID() As Integer
		Get
			Return Me._CAUSEIN_ID
		End Get
		Set
			If ((Me._CAUSEIN_ID = value)  _
						= false) Then
				Me.OnCAUSEIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEIN_ID = value
				Me.SendPropertyChanged("CAUSEIN_ID")
				Me.OnCAUSEIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEIN_CODE", DbType:="Int")>  _
	Public Property CAUSEIN_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._CAUSEIN_CODE
		End Get
		Set
			If (Me._CAUSEIN_CODE.Equals(value) = false) Then
				Me.OnCAUSEIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEIN_CODE = value
				Me.SendPropertyChanged("CAUSEIN_CODE")
				Me.OnCAUSEIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUSEIN_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CAUSEIN_DESCRIPTION() As String
		Get
			Return Me._CAUSEIN_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CAUSEIN_DESCRIPTION, value) = false) Then
				Me.OnCAUSEIN_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CAUSEIN_DESCRIPTION = value
				Me.SendPropertyChanged("CAUSEIN_DESCRIPTION")
				Me.OnCAUSEIN_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CC")>  _
Partial Public Class MAS_CC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CC_ID As Integer
	
	Private _CC_CODE As System.Nullable(Of Integer)
	
	Private _CC_CCNAME As String
	
	Private _CC_ENNAME As String
	
	Private _CC_NOTE As String
	
	Private _CC_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCC_IDChanged()
    End Sub
    Partial Private Sub OnCC_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCC_CODEChanged()
    End Sub
    Partial Private Sub OnCC_CCNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCC_CCNAMEChanged()
    End Sub
    Partial Private Sub OnCC_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCC_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCC_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCC_NOTEChanged()
    End Sub
    Partial Private Sub OnCC_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CC_ID() As Integer
		Get
			Return Me._CC_ID
		End Get
		Set
			If ((Me._CC_ID = value)  _
						= false) Then
				Me.OnCC_IDChanging(value)
				Me.SendPropertyChanging
				Me._CC_ID = value
				Me.SendPropertyChanged("CC_ID")
				Me.OnCC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_CODE", DbType:="Int")>  _
	Public Property CC_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._CC_CODE
		End Get
		Set
			If (Me._CC_CODE.Equals(value) = false) Then
				Me.OnCC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CC_CODE = value
				Me.SendPropertyChanged("CC_CODE")
				Me.OnCC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_CCNAME", DbType:="NVarChar(200)")>  _
	Public Property CC_CCNAME() As String
		Get
			Return Me._CC_CCNAME
		End Get
		Set
			If (String.Equals(Me._CC_CCNAME, value) = false) Then
				Me.OnCC_CCNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CC_CCNAME = value
				Me.SendPropertyChanged("CC_CCNAME")
				Me.OnCC_CCNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property CC_ENNAME() As String
		Get
			Return Me._CC_ENNAME
		End Get
		Set
			If (String.Equals(Me._CC_ENNAME, value) = false) Then
				Me.OnCC_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CC_ENNAME = value
				Me.SendPropertyChanged("CC_ENNAME")
				Me.OnCC_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CC_NOTE() As String
		Get
			Return Me._CC_NOTE
		End Get
		Set
			If (String.Equals(Me._CC_NOTE, value) = false) Then
				Me.OnCC_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CC_NOTE = value
				Me.SendPropertyChanged("CC_NOTE")
				Me.OnCC_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC_ISDISABLED", DbType:="Int")>  _
	Public Property CC_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CC_ISDISABLED
		End Get
		Set
			If (Me._CC_ISDISABLED.Equals(value) = false) Then
				Me.OnCC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CC_ISDISABLED = value
				Me.SendPropertyChanged("CC_ISDISABLED")
				Me.OnCC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CDGITEM")>  _
Partial Public Class MAS_CDGITEM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CDGITEM_IDMAIN As Integer
	
	Private _CDGITEM_ID As Integer
	
	Private _CDGITEM_TOPICKEY As System.Nullable(Of Integer)
	
	Private _CDGITEM_SEQ As String
	
	Private _CDGITEM_CODE As String
	
	Private _CDGITEM_NAME As String
	
	Private _CDGITEM_ENNAME As String
	
	Private _CDGITEM_UNITNAME As String
	
	Private _CDGITEM_NOTE As String
	
	Private _CDGITEM_ISDISABLED As System.Nullable(Of Boolean)
	
	Private _CDGITEM_CURRENTPRICE As System.Nullable(Of Decimal)
	
	Private _CDGITEM_LASTPRICEUPDATED As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCDGITEM_IDMAINChanging(value As Integer)
    End Sub
    Partial Private Sub OnCDGITEM_IDMAINChanged()
    End Sub
    Partial Private Sub OnCDGITEM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCDGITEM_IDChanged()
    End Sub
    Partial Private Sub OnCDGITEM_TOPICKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCDGITEM_TOPICKEYChanged()
    End Sub
    Partial Private Sub OnCDGITEM_SEQChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_SEQChanged()
    End Sub
    Partial Private Sub OnCDGITEM_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_CODEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_NAMEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_UNITNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_UNITNAMEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCDGITEM_NOTEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_ISDISABLEDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCDGITEM_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCDGITEM_CURRENTPRICEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCDGITEM_CURRENTPRICEChanged()
    End Sub
    Partial Private Sub OnCDGITEM_LASTPRICEUPDATEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCDGITEM_LASTPRICEUPDATEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_IDMAIN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CDGITEM_IDMAIN() As Integer
		Get
			Return Me._CDGITEM_IDMAIN
		End Get
		Set
			If ((Me._CDGITEM_IDMAIN = value)  _
						= false) Then
				Me.OnCDGITEM_IDMAINChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_IDMAIN = value
				Me.SendPropertyChanged("CDGITEM_IDMAIN")
				Me.OnCDGITEM_IDMAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_ID", DbType:="Int NOT NULL")>  _
	Public Property CDGITEM_ID() As Integer
		Get
			Return Me._CDGITEM_ID
		End Get
		Set
			If ((Me._CDGITEM_ID = value)  _
						= false) Then
				Me.OnCDGITEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_ID = value
				Me.SendPropertyChanged("CDGITEM_ID")
				Me.OnCDGITEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_TOPICKEY", DbType:="Int")>  _
	Public Property CDGITEM_TOPICKEY() As System.Nullable(Of Integer)
		Get
			Return Me._CDGITEM_TOPICKEY
		End Get
		Set
			If (Me._CDGITEM_TOPICKEY.Equals(value) = false) Then
				Me.OnCDGITEM_TOPICKEYChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_TOPICKEY = value
				Me.SendPropertyChanged("CDGITEM_TOPICKEY")
				Me.OnCDGITEM_TOPICKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_SEQ", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property CDGITEM_SEQ() As String
		Get
			Return Me._CDGITEM_SEQ
		End Get
		Set
			If (String.Equals(Me._CDGITEM_SEQ, value) = false) Then
				Me.OnCDGITEM_SEQChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_SEQ = value
				Me.SendPropertyChanged("CDGITEM_SEQ")
				Me.OnCDGITEM_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CDGITEM_CODE() As String
		Get
			Return Me._CDGITEM_CODE
		End Get
		Set
			If (String.Equals(Me._CDGITEM_CODE, value) = false) Then
				Me.OnCDGITEM_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_CODE = value
				Me.SendPropertyChanged("CDGITEM_CODE")
				Me.OnCDGITEM_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CDGITEM_NAME() As String
		Get
			Return Me._CDGITEM_NAME
		End Get
		Set
			If (String.Equals(Me._CDGITEM_NAME, value) = false) Then
				Me.OnCDGITEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_NAME = value
				Me.SendPropertyChanged("CDGITEM_NAME")
				Me.OnCDGITEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CDGITEM_ENNAME() As String
		Get
			Return Me._CDGITEM_ENNAME
		End Get
		Set
			If (String.Equals(Me._CDGITEM_ENNAME, value) = false) Then
				Me.OnCDGITEM_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_ENNAME = value
				Me.SendPropertyChanged("CDGITEM_ENNAME")
				Me.OnCDGITEM_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_UNITNAME", DbType:="NVarChar(50)")>  _
	Public Property CDGITEM_UNITNAME() As String
		Get
			Return Me._CDGITEM_UNITNAME
		End Get
		Set
			If (String.Equals(Me._CDGITEM_UNITNAME, value) = false) Then
				Me.OnCDGITEM_UNITNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_UNITNAME = value
				Me.SendPropertyChanged("CDGITEM_UNITNAME")
				Me.OnCDGITEM_UNITNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CDGITEM_NOTE() As String
		Get
			Return Me._CDGITEM_NOTE
		End Get
		Set
			If (String.Equals(Me._CDGITEM_NOTE, value) = false) Then
				Me.OnCDGITEM_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_NOTE = value
				Me.SendPropertyChanged("CDGITEM_NOTE")
				Me.OnCDGITEM_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_ISDISABLED", DbType:="Bit")>  _
	Public Property CDGITEM_ISDISABLED() As System.Nullable(Of Boolean)
		Get
			Return Me._CDGITEM_ISDISABLED
		End Get
		Set
			If (Me._CDGITEM_ISDISABLED.Equals(value) = false) Then
				Me.OnCDGITEM_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_ISDISABLED = value
				Me.SendPropertyChanged("CDGITEM_ISDISABLED")
				Me.OnCDGITEM_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_CURRENTPRICE", DbType:="Decimal(19,2)")>  _
	Public Property CDGITEM_CURRENTPRICE() As System.Nullable(Of Decimal)
		Get
			Return Me._CDGITEM_CURRENTPRICE
		End Get
		Set
			If (Me._CDGITEM_CURRENTPRICE.Equals(value) = false) Then
				Me.OnCDGITEM_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_CURRENTPRICE = value
				Me.SendPropertyChanged("CDGITEM_CURRENTPRICE")
				Me.OnCDGITEM_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDGITEM_LASTPRICEUPDATED", DbType:="DateTime")>  _
	Public Property CDGITEM_LASTPRICEUPDATED() As System.Nullable(Of Date)
		Get
			Return Me._CDGITEM_LASTPRICEUPDATED
		End Get
		Set
			If (Me._CDGITEM_LASTPRICEUPDATED.Equals(value) = false) Then
				Me.OnCDGITEM_LASTPRICEUPDATEDChanging(value)
				Me.SendPropertyChanging
				Me._CDGITEM_LASTPRICEUPDATED = value
				Me.SendPropertyChanged("CDGITEM_LASTPRICEUPDATED")
				Me.OnCDGITEM_LASTPRICEUPDATEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CENTER")>  _
Partial Public Class MAS_CENTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CENTER_ID As Integer
	
	Private _CENTER_CODE As System.Nullable(Of Integer)
	
	Private _CENTER_CENTER As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCENTER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCENTER_IDChanged()
    End Sub
    Partial Private Sub OnCENTER_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCENTER_CODEChanged()
    End Sub
    Partial Private Sub OnCENTER_CENTERChanging(value As String)
    End Sub
    Partial Private Sub OnCENTER_CENTERChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CENTER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CENTER_ID() As Integer
		Get
			Return Me._CENTER_ID
		End Get
		Set
			If ((Me._CENTER_ID = value)  _
						= false) Then
				Me.OnCENTER_IDChanging(value)
				Me.SendPropertyChanging
				Me._CENTER_ID = value
				Me.SendPropertyChanged("CENTER_ID")
				Me.OnCENTER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CENTER_CODE", DbType:="Int")>  _
	Public Property CENTER_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._CENTER_CODE
		End Get
		Set
			If (Me._CENTER_CODE.Equals(value) = false) Then
				Me.OnCENTER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CENTER_CODE = value
				Me.SendPropertyChanged("CENTER_CODE")
				Me.OnCENTER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CENTER_CENTER", DbType:="NVarChar(50)")>  _
	Public Property CENTER_CENTER() As String
		Get
			Return Me._CENTER_CENTER
		End Get
		Set
			If (String.Equals(Me._CENTER_CENTER, value) = false) Then
				Me.OnCENTER_CENTERChanging(value)
				Me.SendPropertyChanging
				Me._CENTER_CENTER = value
				Me.SendPropertyChanged("CENTER_CENTER")
				Me.OnCENTER_CENTERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHARGEITEM")>  _
Partial Public Class MAS_CHARGEITEM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CHARGEITEM_ID As Integer
	
	Private _CHARGEITEM_CODE As String
	
	Private _CHARGEITEM_CODE_DIRECTLY As String
	
	Private _CHARGEITEM_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _CHARGEITEM_ENNAME As String
	
	Private _FK_EXPENSES As System.Nullable(Of Integer)
	
	Private _FK_EXPENSESNAME As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
	Private _CHARGEITEM_NOTE As String
	
	Private _CHARGEITEM_ISDISABLE As System.Nullable(Of Boolean)
	
	Private _CHARGEITEM_SEQ As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCHARGEITEM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCHARGEITEM_IDChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_CODEChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_CODE_DIRECTLYChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_CODE_DIRECTLYChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_ENNAMEChanged()
    End Sub
    Partial Private Sub OnFK_EXPENSESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EXPENSESChanged()
    End Sub
    Partial Private Sub OnFK_EXPENSESNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFK_EXPENSESNAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_NOTEChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_ISDISABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHARGEITEM_ISDISABLEChanged()
    End Sub
    Partial Private Sub OnCHARGEITEM_SEQChanging(value As String)
    End Sub
    Partial Private Sub OnCHARGEITEM_SEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CHARGEITEM_ID() As Integer
		Get
			Return Me._CHARGEITEM_ID
		End Get
		Set
			If ((Me._CHARGEITEM_ID = value)  _
						= false) Then
				Me.OnCHARGEITEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_ID = value
				Me.SendPropertyChanged("CHARGEITEM_ID")
				Me.OnCHARGEITEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_CODE", DbType:="VarChar(50)")>  _
	Public Property CHARGEITEM_CODE() As String
		Get
			Return Me._CHARGEITEM_CODE
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_CODE, value) = false) Then
				Me.OnCHARGEITEM_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_CODE = value
				Me.SendPropertyChanged("CHARGEITEM_CODE")
				Me.OnCHARGEITEM_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_CODE_DIRECTLY", DbType:="NVarChar(MAX)")>  _
	Public Property CHARGEITEM_CODE_DIRECTLY() As String
		Get
			Return Me._CHARGEITEM_CODE_DIRECTLY
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_CODE_DIRECTLY, value) = false) Then
				Me.OnCHARGEITEM_CODE_DIRECTLYChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_CODE_DIRECTLY = value
				Me.SendPropertyChanged("CHARGEITEM_CODE_DIRECTLY")
				Me.OnCHARGEITEM_CODE_DIRECTLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CHARGEITEM_DESCRIPTION() As String
		Get
			Return Me._CHARGEITEM_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_DESCRIPTION, value) = false) Then
				Me.OnCHARGEITEM_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_DESCRIPTION = value
				Me.SendPropertyChanged("CHARGEITEM_DESCRIPTION")
				Me.OnCHARGEITEM_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CHARGEITEM_ENNAME() As String
		Get
			Return Me._CHARGEITEM_ENNAME
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_ENNAME, value) = false) Then
				Me.OnCHARGEITEM_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_ENNAME = value
				Me.SendPropertyChanged("CHARGEITEM_ENNAME")
				Me.OnCHARGEITEM_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EXPENSES", DbType:="Int")>  _
	Public Property FK_EXPENSES() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EXPENSES
		End Get
		Set
			If (Me._FK_EXPENSES.Equals(value) = false) Then
				Me.OnFK_EXPENSESChanging(value)
				Me.SendPropertyChanging
				Me._FK_EXPENSES = value
				Me.SendPropertyChanged("FK_EXPENSES")
				Me.OnFK_EXPENSESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EXPENSESNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FK_EXPENSESNAME() As String
		Get
			Return Me._FK_EXPENSESNAME
		End Get
		Set
			If (String.Equals(Me._FK_EXPENSESNAME, value) = false) Then
				Me.OnFK_EXPENSESNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FK_EXPENSESNAME = value
				Me.SendPropertyChanged("FK_EXPENSESNAME")
				Me.OnFK_EXPENSESNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CHARGEITEM_NOTE() As String
		Get
			Return Me._CHARGEITEM_NOTE
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_NOTE, value) = false) Then
				Me.OnCHARGEITEM_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_NOTE = value
				Me.SendPropertyChanged("CHARGEITEM_NOTE")
				Me.OnCHARGEITEM_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_ISDISABLE", DbType:="Bit")>  _
	Public Property CHARGEITEM_ISDISABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._CHARGEITEM_ISDISABLE
		End Get
		Set
			If (Me._CHARGEITEM_ISDISABLE.Equals(value) = false) Then
				Me.OnCHARGEITEM_ISDISABLEChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_ISDISABLE = value
				Me.SendPropertyChanged("CHARGEITEM_ISDISABLE")
				Me.OnCHARGEITEM_ISDISABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHARGEITEM_SEQ", DbType:="NVarChar(50)")>  _
	Public Property CHARGEITEM_SEQ() As String
		Get
			Return Me._CHARGEITEM_SEQ
		End Get
		Set
			If (String.Equals(Me._CHARGEITEM_SEQ, value) = false) Then
				Me.OnCHARGEITEM_SEQChanging(value)
				Me.SendPropertyChanging
				Me._CHARGEITEM_SEQ = value
				Me.SendPropertyChanged("CHARGEITEM_SEQ")
				Me.OnCHARGEITEM_SEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHEMICAL")>  _
Partial Public Class MAS_CHEMICAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CHEMICAL_ID As Integer
	
	Private _CHEMICAL_CODE As System.Nullable(Of Integer)
	
	Private _CHEMICAL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCHEMICAL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCHEMICAL_IDChanged()
    End Sub
    Partial Private Sub OnCHEMICAL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHEMICAL_CODEChanged()
    End Sub
    Partial Private Sub OnCHEMICAL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCHEMICAL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEMICAL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CHEMICAL_ID() As Integer
		Get
			Return Me._CHEMICAL_ID
		End Get
		Set
			If ((Me._CHEMICAL_ID = value)  _
						= false) Then
				Me.OnCHEMICAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHEMICAL_ID = value
				Me.SendPropertyChanged("CHEMICAL_ID")
				Me.OnCHEMICAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEMICAL_CODE", DbType:="Int")>  _
	Public Property CHEMICAL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._CHEMICAL_CODE
		End Get
		Set
			If (Me._CHEMICAL_CODE.Equals(value) = false) Then
				Me.OnCHEMICAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CHEMICAL_CODE = value
				Me.SendPropertyChanged("CHEMICAL_CODE")
				Me.OnCHEMICAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEMICAL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CHEMICAL_DESCRIPTION() As String
		Get
			Return Me._CHEMICAL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CHEMICAL_DESCRIPTION, value) = false) Then
				Me.OnCHEMICAL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CHEMICAL_DESCRIPTION = value
				Me.SendPropertyChanged("CHEMICAL_DESCRIPTION")
				Me.OnCHEMICAL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHINESEYEAR")>  _
Partial Public Class MAS_CHINESEYEAR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CHINESEYEAR_ID As Integer
	
	Private _CHINESEYEAR_CODE As String
	
	Private _CHINESEYEAR_CHINESENAME As String
	
	Private _CHINESEYEAR_ENNAME As String
	
	Private _CHINESEYEAR_NOTE As String
	
	Private _CHINESEYEAR_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCHINESEYEAR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCHINESEYEAR_IDChanged()
    End Sub
    Partial Private Sub OnCHINESEYEAR_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCHINESEYEAR_CODEChanged()
    End Sub
    Partial Private Sub OnCHINESEYEAR_CHINESENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCHINESEYEAR_CHINESENAMEChanged()
    End Sub
    Partial Private Sub OnCHINESEYEAR_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCHINESEYEAR_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCHINESEYEAR_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCHINESEYEAR_NOTEChanged()
    End Sub
    Partial Private Sub OnCHINESEYEAR_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHINESEYEAR_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CHINESEYEAR_ID() As Integer
		Get
			Return Me._CHINESEYEAR_ID
		End Get
		Set
			If ((Me._CHINESEYEAR_ID = value)  _
						= false) Then
				Me.OnCHINESEYEAR_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_ID = value
				Me.SendPropertyChanged("CHINESEYEAR_ID")
				Me.OnCHINESEYEAR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_CODE", DbType:="NVarChar(50)")>  _
	Public Property CHINESEYEAR_CODE() As String
		Get
			Return Me._CHINESEYEAR_CODE
		End Get
		Set
			If (String.Equals(Me._CHINESEYEAR_CODE, value) = false) Then
				Me.OnCHINESEYEAR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_CODE = value
				Me.SendPropertyChanged("CHINESEYEAR_CODE")
				Me.OnCHINESEYEAR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_CHINESENAME", DbType:="NVarChar(200)")>  _
	Public Property CHINESEYEAR_CHINESENAME() As String
		Get
			Return Me._CHINESEYEAR_CHINESENAME
		End Get
		Set
			If (String.Equals(Me._CHINESEYEAR_CHINESENAME, value) = false) Then
				Me.OnCHINESEYEAR_CHINESENAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_CHINESENAME = value
				Me.SendPropertyChanged("CHINESEYEAR_CHINESENAME")
				Me.OnCHINESEYEAR_CHINESENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property CHINESEYEAR_ENNAME() As String
		Get
			Return Me._CHINESEYEAR_ENNAME
		End Get
		Set
			If (String.Equals(Me._CHINESEYEAR_ENNAME, value) = false) Then
				Me.OnCHINESEYEAR_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_ENNAME = value
				Me.SendPropertyChanged("CHINESEYEAR_ENNAME")
				Me.OnCHINESEYEAR_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CHINESEYEAR_NOTE() As String
		Get
			Return Me._CHINESEYEAR_NOTE
		End Get
		Set
			If (String.Equals(Me._CHINESEYEAR_NOTE, value) = false) Then
				Me.OnCHINESEYEAR_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_NOTE = value
				Me.SendPropertyChanged("CHINESEYEAR_NOTE")
				Me.OnCHINESEYEAR_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHINESEYEAR_ISDISABLED", DbType:="Int")>  _
	Public Property CHINESEYEAR_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CHINESEYEAR_ISDISABLED
		End Get
		Set
			If (Me._CHINESEYEAR_ISDISABLED.Equals(value) = false) Then
				Me.OnCHINESEYEAR_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CHINESEYEAR_ISDISABLED = value
				Me.SendPropertyChanged("CHINESEYEAR_ISDISABLED")
				Me.OnCHINESEYEAR_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CLAIM_MAIN")>  _
Partial Public Class MAS_CLAIM_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FK_PROCEDURE As System.Nullable(Of Integer)
	
	Private _CLAIM_ID As System.Nullable(Of Integer)
	
	Private _CLAIM_NAME As String
	
	Private _PRICE As System.Nullable(Of Decimal)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanged()
    End Sub
    Partial Private Sub OnCLAIM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLAIM_IDChanged()
    End Sub
    Partial Private Sub OnCLAIM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCLAIM_NAMEChanged()
    End Sub
    Partial Private Sub OnPRICEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPRICEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PROCEDURE", DbType:="Int")>  _
	Public Property FK_PROCEDURE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PROCEDURE
		End Get
		Set
			If (Me._FK_PROCEDURE.Equals(value) = false) Then
				Me.OnFK_PROCEDUREChanging(value)
				Me.SendPropertyChanging
				Me._FK_PROCEDURE = value
				Me.SendPropertyChanged("FK_PROCEDURE")
				Me.OnFK_PROCEDUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLAIM_ID", DbType:="Int")>  _
	Public Property CLAIM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CLAIM_ID
		End Get
		Set
			If (Me._CLAIM_ID.Equals(value) = false) Then
				Me.OnCLAIM_IDChanging(value)
				Me.SendPropertyChanging
				Me._CLAIM_ID = value
				Me.SendPropertyChanged("CLAIM_ID")
				Me.OnCLAIM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLAIM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CLAIM_NAME() As String
		Get
			Return Me._CLAIM_NAME
		End Get
		Set
			If (String.Equals(Me._CLAIM_NAME, value) = false) Then
				Me.OnCLAIM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CLAIM_NAME = value
				Me.SendPropertyChanged("CLAIM_NAME")
				Me.OnCLAIM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE", DbType:="Decimal(18,0)")>  _
	Public Property PRICE() As System.Nullable(Of Decimal)
		Get
			Return Me._PRICE
		End Get
		Set
			If (Me._PRICE.Equals(value) = false) Then
				Me.OnPRICEChanging(value)
				Me.SendPropertyChanging
				Me._PRICE = value
				Me.SendPropertyChanged("PRICE")
				Me.OnPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CLEANLINESS")>  _
Partial Public Class MAS_CLEANLINESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLEANLINESS_ID As Integer
	
	Private _CLEANLINESS_CODE As System.Nullable(Of Integer)
	
	Private _CLEANLINESS_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLEANLINESS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLEANLINESS_IDChanged()
    End Sub
    Partial Private Sub OnCLEANLINESS_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLEANLINESS_CODEChanged()
    End Sub
    Partial Private Sub OnCLEANLINESS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCLEANLINESS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLEANLINESS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLEANLINESS_ID() As Integer
		Get
			Return Me._CLEANLINESS_ID
		End Get
		Set
			If ((Me._CLEANLINESS_ID = value)  _
						= false) Then
				Me.OnCLEANLINESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CLEANLINESS_ID = value
				Me.SendPropertyChanged("CLEANLINESS_ID")
				Me.OnCLEANLINESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLEANLINESS_CODE", DbType:="Int")>  _
	Public Property CLEANLINESS_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._CLEANLINESS_CODE
		End Get
		Set
			If (Me._CLEANLINESS_CODE.Equals(value) = false) Then
				Me.OnCLEANLINESS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CLEANLINESS_CODE = value
				Me.SendPropertyChanged("CLEANLINESS_CODE")
				Me.OnCLEANLINESS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLEANLINESS_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CLEANLINESS_DESCRIPTION() As String
		Get
			Return Me._CLEANLINESS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CLEANLINESS_DESCRIPTION, value) = false) Then
				Me.OnCLEANLINESS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CLEANLINESS_DESCRIPTION = value
				Me.SendPropertyChanged("CLEANLINESS_DESCRIPTION")
				Me.OnCLEANLINESS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CLINIC")>  _
Partial Public Class MAS_CLINIC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLINIC_ID As Integer
	
	Private _CLINIC_CODE As String
	
	Private _CLINIC_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLINIC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLINIC_IDChanged()
    End Sub
    Partial Private Sub OnCLINIC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_CODEChanged()
    End Sub
    Partial Private Sub OnCLINIC_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLINIC_ID() As Integer
		Get
			Return Me._CLINIC_ID
		End Get
		Set
			If ((Me._CLINIC_ID = value)  _
						= false) Then
				Me.OnCLINIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_ID = value
				Me.SendPropertyChanged("CLINIC_ID")
				Me.OnCLINIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_CODE", DbType:="VarChar(50)")>  _
	Public Property CLINIC_CODE() As String
		Get
			Return Me._CLINIC_CODE
		End Get
		Set
			If (String.Equals(Me._CLINIC_CODE, value) = false) Then
				Me.OnCLINIC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_CODE = value
				Me.SendPropertyChanged("CLINIC_CODE")
				Me.OnCLINIC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CLINIC_DESCRIPTION() As String
		Get
			Return Me._CLINIC_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CLINIC_DESCRIPTION, value) = false) Then
				Me.OnCLINIC_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DESCRIPTION = value
				Me.SendPropertyChanged("CLINIC_DESCRIPTION")
				Me.OnCLINIC_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CLINIC_DETAIL")>  _
Partial Public Class MAS_CLINIC_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLINIC_DETAIL_ID As Integer
	
	Private _CLINIC_DETAIL_CODE_OUT As String
	
	Private _CLINIC_DETAIL_CODE_IN As String
	
	Private _CLINIC_DETAIL_DESCRIPTION As String
	
	Private _CLINIC_DETAIL_BIT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_CODE_OUTChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_CODE_OUTChanged()
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_CODE_INChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_CODE_INChanged()
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_BITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLINIC_DETAIL_BITChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLINIC_DETAIL_ID() As Integer
		Get
			Return Me._CLINIC_DETAIL_ID
		End Get
		Set
			If ((Me._CLINIC_DETAIL_ID = value)  _
						= false) Then
				Me.OnCLINIC_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DETAIL_ID = value
				Me.SendPropertyChanged("CLINIC_DETAIL_ID")
				Me.OnCLINIC_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DETAIL_CODE_OUT", DbType:="VarChar(50)")>  _
	Public Property CLINIC_DETAIL_CODE_OUT() As String
		Get
			Return Me._CLINIC_DETAIL_CODE_OUT
		End Get
		Set
			If (String.Equals(Me._CLINIC_DETAIL_CODE_OUT, value) = false) Then
				Me.OnCLINIC_DETAIL_CODE_OUTChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DETAIL_CODE_OUT = value
				Me.SendPropertyChanged("CLINIC_DETAIL_CODE_OUT")
				Me.OnCLINIC_DETAIL_CODE_OUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DETAIL_CODE_IN", DbType:="VarChar(50)")>  _
	Public Property CLINIC_DETAIL_CODE_IN() As String
		Get
			Return Me._CLINIC_DETAIL_CODE_IN
		End Get
		Set
			If (String.Equals(Me._CLINIC_DETAIL_CODE_IN, value) = false) Then
				Me.OnCLINIC_DETAIL_CODE_INChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DETAIL_CODE_IN = value
				Me.SendPropertyChanged("CLINIC_DETAIL_CODE_IN")
				Me.OnCLINIC_DETAIL_CODE_INChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DETAIL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CLINIC_DETAIL_DESCRIPTION() As String
		Get
			Return Me._CLINIC_DETAIL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CLINIC_DETAIL_DESCRIPTION, value) = false) Then
				Me.OnCLINIC_DETAIL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DETAIL_DESCRIPTION = value
				Me.SendPropertyChanged("CLINIC_DETAIL_DESCRIPTION")
				Me.OnCLINIC_DETAIL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DETAIL_BIT", DbType:="Int")>  _
	Public Property CLINIC_DETAIL_BIT() As System.Nullable(Of Integer)
		Get
			Return Me._CLINIC_DETAIL_BIT
		End Get
		Set
			If (Me._CLINIC_DETAIL_BIT.Equals(value) = false) Then
				Me.OnCLINIC_DETAIL_BITChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DETAIL_BIT = value
				Me.SendPropertyChanged("CLINIC_DETAIL_BIT")
				Me.OnCLINIC_DETAIL_BITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CLINIC_MAIN")>  _
Partial Public Class MAS_CLINIC_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLINIC_MAIN_ID As Integer
	
	Private _CLINIC_MAIN_CODE As String
	
	Private _CLINIC_MAIN_CLINICNAME As String
	
	Private _CLINIC_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLINIC_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLINIC_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnCLINIC_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnCLINIC_MAIN_CLINICNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_MAIN_CLINICNAMEChanged()
    End Sub
    Partial Private Sub OnCLINIC_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLINIC_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLINIC_MAIN_ID() As Integer
		Get
			Return Me._CLINIC_MAIN_ID
		End Get
		Set
			If ((Me._CLINIC_MAIN_ID = value)  _
						= false) Then
				Me.OnCLINIC_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_MAIN_ID = value
				Me.SendPropertyChanged("CLINIC_MAIN_ID")
				Me.OnCLINIC_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property CLINIC_MAIN_CODE() As String
		Get
			Return Me._CLINIC_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._CLINIC_MAIN_CODE, value) = false) Then
				Me.OnCLINIC_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_MAIN_CODE = value
				Me.SendPropertyChanged("CLINIC_MAIN_CODE")
				Me.OnCLINIC_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_MAIN_CLINICNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CLINIC_MAIN_CLINICNAME() As String
		Get
			Return Me._CLINIC_MAIN_CLINICNAME
		End Get
		Set
			If (String.Equals(Me._CLINIC_MAIN_CLINICNAME, value) = false) Then
				Me.OnCLINIC_MAIN_CLINICNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_MAIN_CLINICNAME = value
				Me.SendPropertyChanged("CLINIC_MAIN_CLINICNAME")
				Me.OnCLINIC_MAIN_CLINICNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property CLINIC_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CLINIC_MAIN_ISDISABLED
		End Get
		Set
			If (Me._CLINIC_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnCLINIC_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("CLINIC_MAIN_ISDISABLED")
				Me.OnCLINIC_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_DAS")>  _
Partial Public Class MAS_CODE_DA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CODE_DAS_ID As Integer
	
	Private _CODE_DAS_CODE As String
	
	Private _CODE_DAS_DESCRIPTION As String
	
	Private _CODE_DAS_DESCRIPTION_CODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
	Private _CODE_DAS_DESCRIPTION_TH As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCODE_DAS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCODE_DAS_IDChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CODEChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTION_CODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTION_THChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_DESCRIPTION_THChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CODE_DAS_ID() As Integer
		Get
			Return Me._CODE_DAS_ID
		End Get
		Set
			If ((Me._CODE_DAS_ID = value)  _
						= false) Then
				Me.OnCODE_DAS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_ID = value
				Me.SendPropertyChanged("CODE_DAS_ID")
				Me.OnCODE_DAS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CODE", DbType:="VarChar(50)")>  _
	Public Property CODE_DAS_CODE() As String
		Get
			Return Me._CODE_DAS_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CODE, value) = false) Then
				Me.OnCODE_DAS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CODE = value
				Me.SendPropertyChanged("CODE_DAS_CODE")
				Me.OnCODE_DAS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CODE_DAS_DESCRIPTION() As String
		Get
			Return Me._CODE_DAS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_DESCRIPTION, value) = false) Then
				Me.OnCODE_DAS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_DESCRIPTION = value
				Me.SendPropertyChanged("CODE_DAS_DESCRIPTION")
				Me.OnCODE_DAS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_DESCRIPTION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DAS_DESCRIPTION_CODE() As String
		Get
			Return Me._CODE_DAS_DESCRIPTION_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_DESCRIPTION_CODE, value) = false) Then
				Me.OnCODE_DAS_DESCRIPTION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_DESCRIPTION_CODE = value
				Me.SendPropertyChanged("CODE_DAS_DESCRIPTION_CODE")
				Me.OnCODE_DAS_DESCRIPTION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_DESCRIPTION_TH", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DAS_DESCRIPTION_TH() As String
		Get
			Return Me._CODE_DAS_DESCRIPTION_TH
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_DESCRIPTION_TH, value) = false) Then
				Me.OnCODE_DAS_DESCRIPTION_THChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_DESCRIPTION_TH = value
				Me.SendPropertyChanged("CODE_DAS_DESCRIPTION_TH")
				Me.OnCODE_DAS_DESCRIPTION_THChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_DAS_CHAINA")>  _
Partial Public Class MAS_CODE_DAS_CHAINA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CODE_DAS_CHAINA_ID As Integer
	
	Private _CODE_DAS_CHAINA_CODE As String
	
	Private _CODE_DAS_CHAINA_CODE_WHO As String
	
	Private _CODE_DAS_CHAINA_NAME_ENG As String
	
	Private _CODE_DAS_CHAINA_NAME_THAI As String
	
	Private _CODE_DAS_CHAINA_NAME_CHAI As String
	
	Private _CODE_DAS_CHAINA_DESCRIPTION As String
	
	Private _CODE_DAS_CHAINA_BIT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_IDChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_CODEChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_CODE_WHOChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_CODE_WHOChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_THAIChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_CHAIChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_NAME_CHAIChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_BITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCODE_DAS_CHAINA_BITChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CODE_DAS_CHAINA_ID() As Integer
		Get
			Return Me._CODE_DAS_CHAINA_ID
		End Get
		Set
			If ((Me._CODE_DAS_CHAINA_ID = value)  _
						= false) Then
				Me.OnCODE_DAS_CHAINA_IDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_ID = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_ID")
				Me.OnCODE_DAS_CHAINA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_CODE", DbType:="VarChar(50)")>  _
	Public Property CODE_DAS_CHAINA_CODE() As String
		Get
			Return Me._CODE_DAS_CHAINA_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_CODE, value) = false) Then
				Me.OnCODE_DAS_CHAINA_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_CODE = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_CODE")
				Me.OnCODE_DAS_CHAINA_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_CODE_WHO", DbType:="VarChar(MAX)")>  _
	Public Property CODE_DAS_CHAINA_CODE_WHO() As String
		Get
			Return Me._CODE_DAS_CHAINA_CODE_WHO
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_CODE_WHO, value) = false) Then
				Me.OnCODE_DAS_CHAINA_CODE_WHOChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_CODE_WHO = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_CODE_WHO")
				Me.OnCODE_DAS_CHAINA_CODE_WHOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_NAME_ENG", DbType:="VarChar(MAX)")>  _
	Public Property CODE_DAS_CHAINA_NAME_ENG() As String
		Get
			Return Me._CODE_DAS_CHAINA_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_NAME_ENG, value) = false) Then
				Me.OnCODE_DAS_CHAINA_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_NAME_ENG = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_NAME_ENG")
				Me.OnCODE_DAS_CHAINA_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_NAME_THAI", DbType:="VarChar(MAX)")>  _
	Public Property CODE_DAS_CHAINA_NAME_THAI() As String
		Get
			Return Me._CODE_DAS_CHAINA_NAME_THAI
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_NAME_THAI, value) = false) Then
				Me.OnCODE_DAS_CHAINA_NAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_NAME_THAI = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_NAME_THAI")
				Me.OnCODE_DAS_CHAINA_NAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_NAME_CHAI", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DAS_CHAINA_NAME_CHAI() As String
		Get
			Return Me._CODE_DAS_CHAINA_NAME_CHAI
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_NAME_CHAI, value) = false) Then
				Me.OnCODE_DAS_CHAINA_NAME_CHAIChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_NAME_CHAI = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_NAME_CHAI")
				Me.OnCODE_DAS_CHAINA_NAME_CHAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CODE_DAS_CHAINA_DESCRIPTION() As String
		Get
			Return Me._CODE_DAS_CHAINA_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CODE_DAS_CHAINA_DESCRIPTION, value) = false) Then
				Me.OnCODE_DAS_CHAINA_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_DESCRIPTION = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_DESCRIPTION")
				Me.OnCODE_DAS_CHAINA_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DAS_CHAINA_BIT", DbType:="Int")>  _
	Public Property CODE_DAS_CHAINA_BIT() As System.Nullable(Of Integer)
		Get
			Return Me._CODE_DAS_CHAINA_BIT
		End Get
		Set
			If (Me._CODE_DAS_CHAINA_BIT.Equals(value) = false) Then
				Me.OnCODE_DAS_CHAINA_BITChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DAS_CHAINA_BIT = value
				Me.SendPropertyChanged("CODE_DAS_CHAINA_BIT")
				Me.OnCODE_DAS_CHAINA_BITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_DEATH")>  _
Partial Public Class MAS_CODE_DEATH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CODE_DEATH_ID As Integer
	
	Private _CODE_DEATE_CODE As String
	
	Private _CODE_DEATE_NAME As String
	
	Private _CODE_DEATE_NOTE As String
	
	Private _CODE_DEATE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCODE_DEATH_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCODE_DEATH_IDChanged()
    End Sub
    Partial Private Sub OnCODE_DEATE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DEATE_CODEChanged()
    End Sub
    Partial Private Sub OnCODE_DEATE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DEATE_NAMEChanged()
    End Sub
    Partial Private Sub OnCODE_DEATE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DEATE_NOTEChanged()
    End Sub
    Partial Private Sub OnCODE_DEATE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCODE_DEATE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEATH_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CODE_DEATH_ID() As Integer
		Get
			Return Me._CODE_DEATH_ID
		End Get
		Set
			If ((Me._CODE_DEATH_ID = value)  _
						= false) Then
				Me.OnCODE_DEATH_IDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEATH_ID = value
				Me.SendPropertyChanged("CODE_DEATH_ID")
				Me.OnCODE_DEATH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEATE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DEATE_CODE() As String
		Get
			Return Me._CODE_DEATE_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_DEATE_CODE, value) = false) Then
				Me.OnCODE_DEATE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEATE_CODE = value
				Me.SendPropertyChanged("CODE_DEATE_CODE")
				Me.OnCODE_DEATE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEATE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DEATE_NAME() As String
		Get
			Return Me._CODE_DEATE_NAME
		End Get
		Set
			If (String.Equals(Me._CODE_DEATE_NAME, value) = false) Then
				Me.OnCODE_DEATE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEATE_NAME = value
				Me.SendPropertyChanged("CODE_DEATE_NAME")
				Me.OnCODE_DEATE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEATE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DEATE_NOTE() As String
		Get
			Return Me._CODE_DEATE_NOTE
		End Get
		Set
			If (String.Equals(Me._CODE_DEATE_NOTE, value) = false) Then
				Me.OnCODE_DEATE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEATE_NOTE = value
				Me.SendPropertyChanged("CODE_DEATE_NOTE")
				Me.OnCODE_DEATE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEATE_ISDISABLED", DbType:="Int")>  _
	Public Property CODE_DEATE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CODE_DEATE_ISDISABLED
		End Get
		Set
			If (Me._CODE_DEATE_ISDISABLED.Equals(value) = false) Then
				Me.OnCODE_DEATE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEATE_ISDISABLED = value
				Me.SendPropertyChanged("CODE_DEATE_ISDISABLED")
				Me.OnCODE_DEATE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICD10")>  _
Partial Public Class MAS_CODE_ICD10
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CODE_ICD10_ID As Integer
	
	Private _CODE_ICD10_CODE As String
	
	Private _CODE_ICD10_DESCRIPTION As String
	
	Private _CODE_ICD10_STOP As System.Nullable(Of Date)
	
	Private _CODE_ICD10_START As System.Nullable(Of Date)
	
	Private _CODE_PRIMARY_DIAGNOSIS As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCODE_ICD10_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCODE_ICD10_IDChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_CODEChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_STOPChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCODE_ICD10_STOPChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCODE_ICD10_STARTChanged()
    End Sub
    Partial Private Sub OnCODE_PRIMARY_DIAGNOSISChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCODE_PRIMARY_DIAGNOSISChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CODE_ICD10_ID() As Integer
		Get
			Return Me._CODE_ICD10_ID
		End Get
		Set
			If ((Me._CODE_ICD10_ID = value)  _
						= false) Then
				Me.OnCODE_ICD10_IDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_ID = value
				Me.SendPropertyChanged("CODE_ICD10_ID")
				Me.OnCODE_ICD10_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_CODE", DbType:="VarChar(50)")>  _
	Public Property CODE_ICD10_CODE() As String
		Get
			Return Me._CODE_ICD10_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_CODE, value) = false) Then
				Me.OnCODE_ICD10_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_CODE = value
				Me.SendPropertyChanged("CODE_ICD10_CODE")
				Me.OnCODE_ICD10_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CODE_ICD10_DESCRIPTION() As String
		Get
			Return Me._CODE_ICD10_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_DESCRIPTION, value) = false) Then
				Me.OnCODE_ICD10_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_DESCRIPTION = value
				Me.SendPropertyChanged("CODE_ICD10_DESCRIPTION")
				Me.OnCODE_ICD10_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_STOP", DbType:="DateTime")>  _
	Public Property CODE_ICD10_STOP() As System.Nullable(Of Date)
		Get
			Return Me._CODE_ICD10_STOP
		End Get
		Set
			If (Me._CODE_ICD10_STOP.Equals(value) = false) Then
				Me.OnCODE_ICD10_STOPChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_STOP = value
				Me.SendPropertyChanged("CODE_ICD10_STOP")
				Me.OnCODE_ICD10_STOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_START", DbType:="DateTime")>  _
	Public Property CODE_ICD10_START() As System.Nullable(Of Date)
		Get
			Return Me._CODE_ICD10_START
		End Get
		Set
			If (Me._CODE_ICD10_START.Equals(value) = false) Then
				Me.OnCODE_ICD10_STARTChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_START = value
				Me.SendPropertyChanged("CODE_ICD10_START")
				Me.OnCODE_ICD10_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_PRIMARY_DIAGNOSIS", DbType:="Int")>  _
	Public Property CODE_PRIMARY_DIAGNOSIS() As System.Nullable(Of Integer)
		Get
			Return Me._CODE_PRIMARY_DIAGNOSIS
		End Get
		Set
			If (Me._CODE_PRIMARY_DIAGNOSIS.Equals(value) = false) Then
				Me.OnCODE_PRIMARY_DIAGNOSISChanging(value)
				Me.SendPropertyChanging
				Me._CODE_PRIMARY_DIAGNOSIS = value
				Me.SendPropertyChanged("CODE_PRIMARY_DIAGNOSIS")
				Me.OnCODE_PRIMARY_DIAGNOSISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICD10_EMPLOYEE")>  _
Partial Public Class MAS_CODE_ICD10_EMPLOYEE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CODE_ICD10_EMPLOYEE_ID As Integer
	
	Private _CODE_ICD10_CODE As String
	
	Private _CODE_ICD10_DESCRIPTION As String
	
	Private _CODE_ICD10_KEY As String
	
	Private _CODE_ICD10_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCODE_ICD10_EMPLOYEE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCODE_ICD10_EMPLOYEE_IDChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_CODEChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_KEYChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_KEYChanged()
    End Sub
    Partial Private Sub OnCODE_ICD10_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ICD10_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_EMPLOYEE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CODE_ICD10_EMPLOYEE_ID() As Integer
		Get
			Return Me._CODE_ICD10_EMPLOYEE_ID
		End Get
		Set
			If ((Me._CODE_ICD10_EMPLOYEE_ID = value)  _
						= false) Then
				Me.OnCODE_ICD10_EMPLOYEE_IDChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_EMPLOYEE_ID = value
				Me.SendPropertyChanged("CODE_ICD10_EMPLOYEE_ID")
				Me.OnCODE_ICD10_EMPLOYEE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_CODE", DbType:="VarChar(50)")>  _
	Public Property CODE_ICD10_CODE() As String
		Get
			Return Me._CODE_ICD10_CODE
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_CODE, value) = false) Then
				Me.OnCODE_ICD10_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_CODE = value
				Me.SendPropertyChanged("CODE_ICD10_CODE")
				Me.OnCODE_ICD10_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CODE_ICD10_DESCRIPTION() As String
		Get
			Return Me._CODE_ICD10_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_DESCRIPTION, value) = false) Then
				Me.OnCODE_ICD10_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_DESCRIPTION = value
				Me.SendPropertyChanged("CODE_ICD10_DESCRIPTION")
				Me.OnCODE_ICD10_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_KEY", DbType:="VarChar(50)")>  _
	Public Property CODE_ICD10_KEY() As String
		Get
			Return Me._CODE_ICD10_KEY
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_KEY, value) = false) Then
				Me.OnCODE_ICD10_KEYChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_KEY = value
				Me.SendPropertyChanged("CODE_ICD10_KEY")
				Me.OnCODE_ICD10_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ICD10_NAME", DbType:="VarChar(MAX)")>  _
	Public Property CODE_ICD10_NAME() As String
		Get
			Return Me._CODE_ICD10_NAME
		End Get
		Set
			If (String.Equals(Me._CODE_ICD10_NAME, value) = false) Then
				Me.OnCODE_ICD10_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ICD10_NAME = value
				Me.SendPropertyChanged("CODE_ICD10_NAME")
				Me.OnCODE_ICD10_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICD10_SERVICEUNIT")>  _
Partial Public Class MAS_CODE_ICD10_SERVICEUNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICD10SERVICEUNIT_ID As Integer
	
	Private _ICD10SERVICEUNIT_CODE As System.Nullable(Of Integer)
	
	Private _ICD10_CODE As String
	
	Private _ICD10_DISCRIPTION As String
	
	Private _CLINIC_CODE As String
	
	Private _CLINIC_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICD10SERVICEUNIT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnICD10SERVICEUNIT_IDChanged()
    End Sub
    Partial Private Sub OnICD10SERVICEUNIT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICD10SERVICEUNIT_CODEChanged()
    End Sub
    Partial Private Sub OnICD10_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnICD10_CODEChanged()
    End Sub
    Partial Private Sub OnICD10_DISCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnICD10_DISCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCLINIC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_CODEChanged()
    End Sub
    Partial Private Sub OnCLINIC_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCLINIC_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD10SERVICEUNIT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICD10SERVICEUNIT_ID() As Integer
		Get
			Return Me._ICD10SERVICEUNIT_ID
		End Get
		Set
			If ((Me._ICD10SERVICEUNIT_ID = value)  _
						= false) Then
				Me.OnICD10SERVICEUNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICD10SERVICEUNIT_ID = value
				Me.SendPropertyChanged("ICD10SERVICEUNIT_ID")
				Me.OnICD10SERVICEUNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD10SERVICEUNIT_CODE", DbType:="Int")>  _
	Public Property ICD10SERVICEUNIT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ICD10SERVICEUNIT_CODE
		End Get
		Set
			If (Me._ICD10SERVICEUNIT_CODE.Equals(value) = false) Then
				Me.OnICD10SERVICEUNIT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ICD10SERVICEUNIT_CODE = value
				Me.SendPropertyChanged("ICD10SERVICEUNIT_CODE")
				Me.OnICD10SERVICEUNIT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD10_CODE", DbType:="VarChar(50)")>  _
	Public Property ICD10_CODE() As String
		Get
			Return Me._ICD10_CODE
		End Get
		Set
			If (String.Equals(Me._ICD10_CODE, value) = false) Then
				Me.OnICD10_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ICD10_CODE = value
				Me.SendPropertyChanged("ICD10_CODE")
				Me.OnICD10_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD10_DISCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property ICD10_DISCRIPTION() As String
		Get
			Return Me._ICD10_DISCRIPTION
		End Get
		Set
			If (String.Equals(Me._ICD10_DISCRIPTION, value) = false) Then
				Me.OnICD10_DISCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ICD10_DISCRIPTION = value
				Me.SendPropertyChanged("ICD10_DISCRIPTION")
				Me.OnICD10_DISCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_CODE", DbType:="VarChar(50)")>  _
	Public Property CLINIC_CODE() As String
		Get
			Return Me._CLINIC_CODE
		End Get
		Set
			If (String.Equals(Me._CLINIC_CODE, value) = false) Then
				Me.OnCLINIC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_CODE = value
				Me.SendPropertyChanged("CLINIC_CODE")
				Me.OnCLINIC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLINIC_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property CLINIC_DESCRIPTION() As String
		Get
			Return Me._CLINIC_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CLINIC_DESCRIPTION, value) = false) Then
				Me.OnCLINIC_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CLINIC_DESCRIPTION = value
				Me.SendPropertyChanged("CLINIC_DESCRIPTION")
				Me.OnCLINIC_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICD9")>  _
Partial Public Class MAS_CODE_ICD9
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICD9_ID As Integer
	
	Private _ICD9_CODE As String
	
	Private _ICD9_ENNAME As String
	
	Private _ICD9_NAME As String
	
	Private _ICD9_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ICD9_ISIMPORTANT As System.Nullable(Of Integer)
	
	Private _ICD9_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICD9_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnICD9_IDChanged()
    End Sub
    Partial Private Sub OnICD9_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_CODEChanged()
    End Sub
    Partial Private Sub OnICD9_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_ENNAMEChanged()
    End Sub
    Partial Private Sub OnICD9_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_NAMEChanged()
    End Sub
    Partial Private Sub OnICD9_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICD9_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnICD9_ISIMPORTANTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICD9_ISIMPORTANTChanged()
    End Sub
    Partial Private Sub OnICD9_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICD9_ID() As Integer
		Get
			Return Me._ICD9_ID
		End Get
		Set
			If ((Me._ICD9_ID = value)  _
						= false) Then
				Me.OnICD9_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_ID = value
				Me.SendPropertyChanged("ICD9_ID")
				Me.OnICD9_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_CODE", DbType:="VarChar(50)")>  _
	Public Property ICD9_CODE() As String
		Get
			Return Me._ICD9_CODE
		End Get
		Set
			If (String.Equals(Me._ICD9_CODE, value) = false) Then
				Me.OnICD9_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_CODE = value
				Me.SendPropertyChanged("ICD9_CODE")
				Me.OnICD9_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_ENNAME", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_ENNAME() As String
		Get
			Return Me._ICD9_ENNAME
		End Get
		Set
			If (String.Equals(Me._ICD9_ENNAME, value) = false) Then
				Me.OnICD9_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_ENNAME = value
				Me.SendPropertyChanged("ICD9_ENNAME")
				Me.OnICD9_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_NAME", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_NAME() As String
		Get
			Return Me._ICD9_NAME
		End Get
		Set
			If (String.Equals(Me._ICD9_NAME, value) = false) Then
				Me.OnICD9_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_NAME = value
				Me.SendPropertyChanged("ICD9_NAME")
				Me.OnICD9_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_ISDISABLED", DbType:="Int")>  _
	Public Property ICD9_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ICD9_ISDISABLED
		End Get
		Set
			If (Me._ICD9_ISDISABLED.Equals(value) = false) Then
				Me.OnICD9_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_ISDISABLED = value
				Me.SendPropertyChanged("ICD9_ISDISABLED")
				Me.OnICD9_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_ISIMPORTANT", DbType:="Int")>  _
	Public Property ICD9_ISIMPORTANT() As System.Nullable(Of Integer)
		Get
			Return Me._ICD9_ISIMPORTANT
		End Get
		Set
			If (Me._ICD9_ISIMPORTANT.Equals(value) = false) Then
				Me.OnICD9_ISIMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_ISIMPORTANT = value
				Me.SendPropertyChanged("ICD9_ISIMPORTANT")
				Me.OnICD9_ISIMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_NOTE", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_NOTE() As String
		Get
			Return Me._ICD9_NOTE
		End Get
		Set
			If (String.Equals(Me._ICD9_NOTE, value) = false) Then
				Me.OnICD9_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_NOTE = value
				Me.SendPropertyChanged("ICD9_NOTE")
				Me.OnICD9_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICD9_EMPLOYEE")>  _
Partial Public Class MAS_CODE_ICD9_EMPLOYEE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICD9_EMPLOY_ID As Integer
	
	Private _ICD9_EMPLOY_KEY As System.Nullable(Of Integer)
	
	Private _ICD9_EMPLOY_NAME As String
	
	Private _ICD9_CODE As String
	
	Private _ICD9_NAME As String
	
	Private _ICD9_EMPLOY_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICD9_EMPLOY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnICD9_EMPLOY_IDChanged()
    End Sub
    Partial Private Sub OnICD9_EMPLOY_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICD9_EMPLOY_KEYChanged()
    End Sub
    Partial Private Sub OnICD9_EMPLOY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_EMPLOY_NAMEChanged()
    End Sub
    Partial Private Sub OnICD9_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_CODEChanged()
    End Sub
    Partial Private Sub OnICD9_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_NAMEChanged()
    End Sub
    Partial Private Sub OnICD9_EMPLOY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_EMPLOY_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_EMPLOY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICD9_EMPLOY_ID() As Integer
		Get
			Return Me._ICD9_EMPLOY_ID
		End Get
		Set
			If ((Me._ICD9_EMPLOY_ID = value)  _
						= false) Then
				Me.OnICD9_EMPLOY_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_EMPLOY_ID = value
				Me.SendPropertyChanged("ICD9_EMPLOY_ID")
				Me.OnICD9_EMPLOY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_EMPLOY_KEY", DbType:="Int")>  _
	Public Property ICD9_EMPLOY_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._ICD9_EMPLOY_KEY
		End Get
		Set
			If (Me._ICD9_EMPLOY_KEY.Equals(value) = false) Then
				Me.OnICD9_EMPLOY_KEYChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_EMPLOY_KEY = value
				Me.SendPropertyChanged("ICD9_EMPLOY_KEY")
				Me.OnICD9_EMPLOY_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_EMPLOY_NAME", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_EMPLOY_NAME() As String
		Get
			Return Me._ICD9_EMPLOY_NAME
		End Get
		Set
			If (String.Equals(Me._ICD9_EMPLOY_NAME, value) = false) Then
				Me.OnICD9_EMPLOY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_EMPLOY_NAME = value
				Me.SendPropertyChanged("ICD9_EMPLOY_NAME")
				Me.OnICD9_EMPLOY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_CODE", DbType:="VarChar(50)")>  _
	Public Property ICD9_CODE() As String
		Get
			Return Me._ICD9_CODE
		End Get
		Set
			If (String.Equals(Me._ICD9_CODE, value) = false) Then
				Me.OnICD9_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_CODE = value
				Me.SendPropertyChanged("ICD9_CODE")
				Me.OnICD9_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_NAME", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_NAME() As String
		Get
			Return Me._ICD9_NAME
		End Get
		Set
			If (String.Equals(Me._ICD9_NAME, value) = false) Then
				Me.OnICD9_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_NAME = value
				Me.SendPropertyChanged("ICD9_NAME")
				Me.OnICD9_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_EMPLOY_NOTE", DbType:="VarChar(MAX)")>  _
	Public Property ICD9_EMPLOY_NOTE() As String
		Get
			Return Me._ICD9_EMPLOY_NOTE
		End Get
		Set
			If (String.Equals(Me._ICD9_EMPLOY_NOTE, value) = false) Then
				Me.OnICD9_EMPLOY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_EMPLOY_NOTE = value
				Me.SendPropertyChanged("ICD9_EMPLOY_NOTE")
				Me.OnICD9_EMPLOY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CODE_ICDO")>  _
Partial Public Class MAS_CODE_ICDO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICDO_ID As Integer
	
	Private _ICDO_CODE As String
	
	Private _ICDO_ENNAME As String
	
	Private _ICDO_NAME As String
	
	Private _ICDO_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICDO_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnICDO_IDChanged()
    End Sub
    Partial Private Sub OnICDO_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnICDO_CODEChanged()
    End Sub
    Partial Private Sub OnICDO_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICDO_ENNAMEChanged()
    End Sub
    Partial Private Sub OnICDO_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICDO_NAMEChanged()
    End Sub
    Partial Private Sub OnICDO_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICDO_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICDO_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICDO_ID() As Integer
		Get
			Return Me._ICDO_ID
		End Get
		Set
			If ((Me._ICDO_ID = value)  _
						= false) Then
				Me.OnICDO_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICDO_ID = value
				Me.SendPropertyChanged("ICDO_ID")
				Me.OnICDO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICDO_CODE", DbType:="VarChar(50)")>  _
	Public Property ICDO_CODE() As String
		Get
			Return Me._ICDO_CODE
		End Get
		Set
			If (String.Equals(Me._ICDO_CODE, value) = false) Then
				Me.OnICDO_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ICDO_CODE = value
				Me.SendPropertyChanged("ICDO_CODE")
				Me.OnICDO_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICDO_ENNAME", DbType:="VarChar(MAX)")>  _
	Public Property ICDO_ENNAME() As String
		Get
			Return Me._ICDO_ENNAME
		End Get
		Set
			If (String.Equals(Me._ICDO_ENNAME, value) = false) Then
				Me.OnICDO_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICDO_ENNAME = value
				Me.SendPropertyChanged("ICDO_ENNAME")
				Me.OnICDO_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICDO_NAME", DbType:="VarChar(MAX)")>  _
	Public Property ICDO_NAME() As String
		Get
			Return Me._ICDO_NAME
		End Get
		Set
			If (String.Equals(Me._ICDO_NAME, value) = false) Then
				Me.OnICDO_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICDO_NAME = value
				Me.SendPropertyChanged("ICDO_NAME")
				Me.OnICDO_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICDO_ISDISABLED", DbType:="Int")>  _
	Public Property ICDO_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ICDO_ISDISABLED
		End Get
		Set
			If (Me._ICDO_ISDISABLED.Equals(value) = false) Then
				Me.OnICDO_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ICDO_ISDISABLED = value
				Me.SendPropertyChanged("ICDO_ISDISABLED")
				Me.OnICDO_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CONDITION")>  _
Partial Public Class MAS_CONDITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CONDITION_ID As Integer
	
	Private _CONDITION_CODE As String
	
	Private _CONDITION_NAME As String
	
	Private _CONDITION_ENNAME As String
	
	Private _CONDITION_NOTE As String
	
	Private _CONDITION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCONDITION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCONDITION_IDChanged()
    End Sub
    Partial Private Sub OnCONDITION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_CODEChanged()
    End Sub
    Partial Private Sub OnCONDITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_NAMEChanged()
    End Sub
    Partial Private Sub OnCONDITION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCONDITION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_NOTEChanged()
    End Sub
    Partial Private Sub OnCONDITION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONDITION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CONDITION_ID() As Integer
		Get
			Return Me._CONDITION_ID
		End Get
		Set
			If ((Me._CONDITION_ID = value)  _
						= false) Then
				Me.OnCONDITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_ID = value
				Me.SendPropertyChanged("CONDITION_ID")
				Me.OnCONDITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_CODE", DbType:="NVarChar(50)")>  _
	Public Property CONDITION_CODE() As String
		Get
			Return Me._CONDITION_CODE
		End Get
		Set
			If (String.Equals(Me._CONDITION_CODE, value) = false) Then
				Me.OnCONDITION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_CODE = value
				Me.SendPropertyChanged("CONDITION_CODE")
				Me.OnCONDITION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION_NAME() As String
		Get
			Return Me._CONDITION_NAME
		End Get
		Set
			If (String.Equals(Me._CONDITION_NAME, value) = false) Then
				Me.OnCONDITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_NAME = value
				Me.SendPropertyChanged("CONDITION_NAME")
				Me.OnCONDITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION_ENNAME() As String
		Get
			Return Me._CONDITION_ENNAME
		End Get
		Set
			If (String.Equals(Me._CONDITION_ENNAME, value) = false) Then
				Me.OnCONDITION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_ENNAME = value
				Me.SendPropertyChanged("CONDITION_ENNAME")
				Me.OnCONDITION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION_NOTE() As String
		Get
			Return Me._CONDITION_NOTE
		End Get
		Set
			If (String.Equals(Me._CONDITION_NOTE, value) = false) Then
				Me.OnCONDITION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_NOTE = value
				Me.SendPropertyChanged("CONDITION_NOTE")
				Me.OnCONDITION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_ISDISABLED", DbType:="Int")>  _
	Public Property CONDITION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CONDITION_ISDISABLED
		End Get
		Set
			If (Me._CONDITION_ISDISABLED.Equals(value) = false) Then
				Me.OnCONDITION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_ISDISABLED = value
				Me.SendPropertyChanged("CONDITION_ISDISABLED")
				Me.OnCONDITION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CONSULT")>  _
Partial Public Class MAS_CONSULT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CONSULT_ID As Integer
	
	Private _CONSULT_CODE As String
	
	Private _CONSULT_NAME As String
	
	Private _CONSULT_ENNAME As String
	
	Private _CONSULT_NOTE As String
	
	Private _CONSULT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCONSULT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCONSULT_IDChanged()
    End Sub
    Partial Private Sub OnCONSULT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCONSULT_CODEChanged()
    End Sub
    Partial Private Sub OnCONSULT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONSULT_NAMEChanged()
    End Sub
    Partial Private Sub OnCONSULT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONSULT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCONSULT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCONSULT_NOTEChanged()
    End Sub
    Partial Private Sub OnCONSULT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONSULT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CONSULT_ID() As Integer
		Get
			Return Me._CONSULT_ID
		End Get
		Set
			If ((Me._CONSULT_ID = value)  _
						= false) Then
				Me.OnCONSULT_IDChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_ID = value
				Me.SendPropertyChanged("CONSULT_ID")
				Me.OnCONSULT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CONSULT_CODE() As String
		Get
			Return Me._CONSULT_CODE
		End Get
		Set
			If (String.Equals(Me._CONSULT_CODE, value) = false) Then
				Me.OnCONSULT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_CODE = value
				Me.SendPropertyChanged("CONSULT_CODE")
				Me.OnCONSULT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONSULT_NAME() As String
		Get
			Return Me._CONSULT_NAME
		End Get
		Set
			If (String.Equals(Me._CONSULT_NAME, value) = false) Then
				Me.OnCONSULT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_NAME = value
				Me.SendPropertyChanged("CONSULT_NAME")
				Me.OnCONSULT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONSULT_ENNAME() As String
		Get
			Return Me._CONSULT_ENNAME
		End Get
		Set
			If (String.Equals(Me._CONSULT_ENNAME, value) = false) Then
				Me.OnCONSULT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_ENNAME = value
				Me.SendPropertyChanged("CONSULT_ENNAME")
				Me.OnCONSULT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property CONSULT_NOTE() As String
		Get
			Return Me._CONSULT_NOTE
		End Get
		Set
			If (String.Equals(Me._CONSULT_NOTE, value) = false) Then
				Me.OnCONSULT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_NOTE = value
				Me.SendPropertyChanged("CONSULT_NOTE")
				Me.OnCONSULT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSULT_ISDISABLED", DbType:="Int")>  _
	Public Property CONSULT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._CONSULT_ISDISABLED
		End Get
		Set
			If (Me._CONSULT_ISDISABLED.Equals(value) = false) Then
				Me.OnCONSULT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._CONSULT_ISDISABLED = value
				Me.SendPropertyChanged("CONSULT_ISDISABLED")
				Me.OnCONSULT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Contentmen")>  _
Partial Public Class MAS_Contentmen
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Lavel As System.Nullable(Of Integer)
	
	Private _Lavel_Mean As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_LavelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_LavelChanged()
    End Sub
    Partial Private Sub OnLavel_MeanChanging(value As String)
    End Sub
    Partial Private Sub OnLavel_MeanChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Lavel", DbType:="Int")>  _
	Public Property ID_Lavel() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Lavel
		End Get
		Set
			If (Me._ID_Lavel.Equals(value) = false) Then
				Me.OnID_LavelChanging(value)
				Me.SendPropertyChanging
				Me._ID_Lavel = value
				Me.SendPropertyChanged("ID_Lavel")
				Me.OnID_LavelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lavel_Mean", DbType:="NVarChar(MAX)")>  _
	Public Property Lavel_Mean() As String
		Get
			Return Me._Lavel_Mean
		End Get
		Set
			If (String.Equals(Me._Lavel_Mean, value) = false) Then
				Me.OnLavel_MeanChanging(value)
				Me.SendPropertyChanging
				Me._Lavel_Mean = value
				Me.SendPropertyChanged("Lavel_Mean")
				Me.OnLavel_MeanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_COUNCIL")>  _
Partial Public Class MAS_COUNCIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COUNCIL_ID As Integer
	
	Private _COUNCIL_CODE As String
	
	Private _COUNCIL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOUNCIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOUNCIL_IDChanged()
    End Sub
    Partial Private Sub OnCOUNCIL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNCIL_CODEChanged()
    End Sub
    Partial Private Sub OnCOUNCIL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNCIL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNCIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property COUNCIL_ID() As Integer
		Get
			Return Me._COUNCIL_ID
		End Get
		Set
			If ((Me._COUNCIL_ID = value)  _
						= false) Then
				Me.OnCOUNCIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNCIL_ID = value
				Me.SendPropertyChanged("COUNCIL_ID")
				Me.OnCOUNCIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNCIL_CODE", DbType:="VarChar(50)")>  _
	Public Property COUNCIL_CODE() As String
		Get
			Return Me._COUNCIL_CODE
		End Get
		Set
			If (String.Equals(Me._COUNCIL_CODE, value) = false) Then
				Me.OnCOUNCIL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._COUNCIL_CODE = value
				Me.SendPropertyChanged("COUNCIL_CODE")
				Me.OnCOUNCIL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNCIL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property COUNCIL_DESCRIPTION() As String
		Get
			Return Me._COUNCIL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._COUNCIL_DESCRIPTION, value) = false) Then
				Me.OnCOUNCIL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._COUNCIL_DESCRIPTION = value
				Me.SendPropertyChanged("COUNCIL_DESCRIPTION")
				Me.OnCOUNCIL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_COUNTRY")>  _
Partial Public Class MAS_COUNTRY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COUNTRY_ID As Integer
	
	Private _COUNTRY_CODE As String
	
	Private _COUNTRY_COUNTRYNAME As String
	
	Private _COUNTRY_ENNAME As String
	
	Private _COUNTRYOUNTRY_NOTE As String
	
	Private _COUNTRY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_CODEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_COUNTRYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_COUNTRYNAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRYOUNTRY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYOUNTRY_NOTEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property COUNTRY_ID() As Integer
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If ((Me._COUNTRY_ID = value)  _
						= false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_CODE", DbType:="NVarChar(50)")>  _
	Public Property COUNTRY_CODE() As String
		Get
			Return Me._COUNTRY_CODE
		End Get
		Set
			If (String.Equals(Me._COUNTRY_CODE, value) = false) Then
				Me.OnCOUNTRY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_CODE = value
				Me.SendPropertyChanged("COUNTRY_CODE")
				Me.OnCOUNTRY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_COUNTRYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_COUNTRYNAME() As String
		Get
			Return Me._COUNTRY_COUNTRYNAME
		End Get
		Set
			If (String.Equals(Me._COUNTRY_COUNTRYNAME, value) = false) Then
				Me.OnCOUNTRY_COUNTRYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_COUNTRYNAME = value
				Me.SendPropertyChanged("COUNTRY_COUNTRYNAME")
				Me.OnCOUNTRY_COUNTRYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_ENNAME() As String
		Get
			Return Me._COUNTRY_ENNAME
		End Get
		Set
			If (String.Equals(Me._COUNTRY_ENNAME, value) = false) Then
				Me.OnCOUNTRY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ENNAME = value
				Me.SendPropertyChanged("COUNTRY_ENNAME")
				Me.OnCOUNTRY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRYOUNTRY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRYOUNTRY_NOTE() As String
		Get
			Return Me._COUNTRYOUNTRY_NOTE
		End Get
		Set
			If (String.Equals(Me._COUNTRYOUNTRY_NOTE, value) = false) Then
				Me.OnCOUNTRYOUNTRY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRYOUNTRY_NOTE = value
				Me.SendPropertyChanged("COUNTRYOUNTRY_NOTE")
				Me.OnCOUNTRYOUNTRY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ISDISABLED", DbType:="Int")>  _
	Public Property COUNTRY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ISDISABLED
		End Get
		Set
			If (Me._COUNTRY_ISDISABLED.Equals(value) = false) Then
				Me.OnCOUNTRY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ISDISABLED = value
				Me.SendPropertyChanged("COUNTRY_ISDISABLED")
				Me.OnCOUNTRY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CutOff_TYPE")>  _
Partial Public Class MAS_CutOff_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CutOff_Type_ID As Integer
	
	Private _CutOff_Type_Name As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCutOff_Type_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCutOff_Type_IDChanged()
    End Sub
    Partial Private Sub OnCutOff_Type_NameChanging(value As String)
    End Sub
    Partial Private Sub OnCutOff_Type_NameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CutOff_Type_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CutOff_Type_ID() As Integer
		Get
			Return Me._CutOff_Type_ID
		End Get
		Set
			If ((Me._CutOff_Type_ID = value)  _
						= false) Then
				Me.OnCutOff_Type_IDChanging(value)
				Me.SendPropertyChanging
				Me._CutOff_Type_ID = value
				Me.SendPropertyChanged("CutOff_Type_ID")
				Me.OnCutOff_Type_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CutOff_Type_Name", DbType:="NVarChar(MAX)")>  _
	Public Property CutOff_Type_Name() As String
		Get
			Return Me._CutOff_Type_Name
		End Get
		Set
			If (String.Equals(Me._CutOff_Type_Name, value) = false) Then
				Me.OnCutOff_Type_NameChanging(value)
				Me.SendPropertyChanging
				Me._CutOff_Type_Name = value
				Me.SendPropertyChanged("CutOff_Type_Name")
				Me.OnCutOff_Type_NameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DATASOURCE")>  _
Partial Public Class MAS_DATASOURCE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DATASOURCE_ID As Integer
	
	Private _DATASOURCE_CODE As String
	
	Private _DATASOURCE_NAME As String
	
	Private _DATASOURCE_ENNAME As String
	
	Private _DATASOURCE_NOTE As String
	
	Private _DATASOURCE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDATASOURCE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDATASOURCE_IDChanged()
    End Sub
    Partial Private Sub OnDATASOURCE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDATASOURCE_CODEChanged()
    End Sub
    Partial Private Sub OnDATASOURCE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDATASOURCE_NAMEChanged()
    End Sub
    Partial Private Sub OnDATASOURCE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDATASOURCE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDATASOURCE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDATASOURCE_NOTEChanged()
    End Sub
    Partial Private Sub OnDATASOURCE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDATASOURCE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DATASOURCE_ID() As Integer
		Get
			Return Me._DATASOURCE_ID
		End Get
		Set
			If ((Me._DATASOURCE_ID = value)  _
						= false) Then
				Me.OnDATASOURCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_ID = value
				Me.SendPropertyChanged("DATASOURCE_ID")
				Me.OnDATASOURCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DATASOURCE_CODE() As String
		Get
			Return Me._DATASOURCE_CODE
		End Get
		Set
			If (String.Equals(Me._DATASOURCE_CODE, value) = false) Then
				Me.OnDATASOURCE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_CODE = value
				Me.SendPropertyChanged("DATASOURCE_CODE")
				Me.OnDATASOURCE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DATASOURCE_NAME() As String
		Get
			Return Me._DATASOURCE_NAME
		End Get
		Set
			If (String.Equals(Me._DATASOURCE_NAME, value) = false) Then
				Me.OnDATASOURCE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_NAME = value
				Me.SendPropertyChanged("DATASOURCE_NAME")
				Me.OnDATASOURCE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DATASOURCE_ENNAME() As String
		Get
			Return Me._DATASOURCE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DATASOURCE_ENNAME, value) = false) Then
				Me.OnDATASOURCE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_ENNAME = value
				Me.SendPropertyChanged("DATASOURCE_ENNAME")
				Me.OnDATASOURCE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DATASOURCE_NOTE() As String
		Get
			Return Me._DATASOURCE_NOTE
		End Get
		Set
			If (String.Equals(Me._DATASOURCE_NOTE, value) = false) Then
				Me.OnDATASOURCE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_NOTE = value
				Me.SendPropertyChanged("DATASOURCE_NOTE")
				Me.OnDATASOURCE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATASOURCE_ISDISABLED", DbType:="Int")>  _
	Public Property DATASOURCE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DATASOURCE_ISDISABLED
		End Get
		Set
			If (Me._DATASOURCE_ISDISABLED.Equals(value) = false) Then
				Me.OnDATASOURCE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DATASOURCE_ISDISABLED = value
				Me.SendPropertyChanged("DATASOURCE_ISDISABLED")
				Me.OnDATASOURCE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DAYS")>  _
Partial Public Class MAS_DAY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DAYS_ID As Integer
	
	Private _DAYS_CODE As String
	
	Private _DAYS_NAME As String
	
	Private _DAYS_ENNAME As String
	
	Private _DAYS_NOTE As String
	
	Private _DAYS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDAYS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDAYS_IDChanged()
    End Sub
    Partial Private Sub OnDAYS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDAYS_CODEChanged()
    End Sub
    Partial Private Sub OnDAYS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDAYS_NAMEChanged()
    End Sub
    Partial Private Sub OnDAYS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDAYS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDAYS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDAYS_NOTEChanged()
    End Sub
    Partial Private Sub OnDAYS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAYS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DAYS_ID() As Integer
		Get
			Return Me._DAYS_ID
		End Get
		Set
			If ((Me._DAYS_ID = value)  _
						= false) Then
				Me.OnDAYS_IDChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_ID = value
				Me.SendPropertyChanged("DAYS_ID")
				Me.OnDAYS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DAYS_CODE() As String
		Get
			Return Me._DAYS_CODE
		End Get
		Set
			If (String.Equals(Me._DAYS_CODE, value) = false) Then
				Me.OnDAYS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_CODE = value
				Me.SendPropertyChanged("DAYS_CODE")
				Me.OnDAYS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DAYS_NAME() As String
		Get
			Return Me._DAYS_NAME
		End Get
		Set
			If (String.Equals(Me._DAYS_NAME, value) = false) Then
				Me.OnDAYS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_NAME = value
				Me.SendPropertyChanged("DAYS_NAME")
				Me.OnDAYS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DAYS_ENNAME() As String
		Get
			Return Me._DAYS_ENNAME
		End Get
		Set
			If (String.Equals(Me._DAYS_ENNAME, value) = false) Then
				Me.OnDAYS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_ENNAME = value
				Me.SendPropertyChanged("DAYS_ENNAME")
				Me.OnDAYS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DAYS_NOTE() As String
		Get
			Return Me._DAYS_NOTE
		End Get
		Set
			If (String.Equals(Me._DAYS_NOTE, value) = false) Then
				Me.OnDAYS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_NOTE = value
				Me.SendPropertyChanged("DAYS_NOTE")
				Me.OnDAYS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAYS_ISDISABLED", DbType:="Int")>  _
	Public Property DAYS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DAYS_ISDISABLED
		End Get
		Set
			If (Me._DAYS_ISDISABLED.Equals(value) = false) Then
				Me.OnDAYS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DAYS_ISDISABLED = value
				Me.SendPropertyChanged("DAYS_ISDISABLED")
				Me.OnDAYS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEALER")>  _
Partial Public Class MAS_DEALER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEALER_ID As Integer
	
	Private _DEALER_CODE As String
	
	Private _DEALER_NAME As String
	
	Private _DEALER_ENNAME As String
	
	Private _DEALER_ADDRESS1 As String
	
	Private _DEALER_ADDRESS2 As String
	
	Private _DEALER_ADDRESS3 As String
	
	Private _DEALER_THSUBDISTRICT As String
	
	Private _DEALER_ZIPCODE As String
	
	Private _DEALER_COUNTRYKEY As String
	
	Private _DEALER_PHONE As String
	
	Private _DEALER_FAX As String
	
	Private _DEALER_WEBSITE As String
	
	Private _DEALER_CONTACTNOTE As String
	
	Private _DEALER_ISHOSPITAL As System.Nullable(Of Integer)
	
	Private _DEALER_ISOUTLABXTYPE As System.Nullable(Of Integer)
	
	Private _DEALER_ISVENDORXTYPE As System.Nullable(Of Integer)
	
	Private _DEALER_ISMANUFACTUREXTYPE As System.Nullable(Of Integer)
	
	Private _DEALER_NOTE As String
	
	Private _DEALER_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEALER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEALER_IDChanged()
    End Sub
    Partial Private Sub OnDEALER_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_CODEChanged()
    End Sub
    Partial Private Sub OnDEALER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_NAMEChanged()
    End Sub
    Partial Private Sub OnDEALER_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDEALER_ADDRESS1Changing(value As String)
    End Sub
    Partial Private Sub OnDEALER_ADDRESS1Changed()
    End Sub
    Partial Private Sub OnDEALER_ADDRESS2Changing(value As String)
    End Sub
    Partial Private Sub OnDEALER_ADDRESS2Changed()
    End Sub
    Partial Private Sub OnDEALER_ADDRESS3Changing(value As String)
    End Sub
    Partial Private Sub OnDEALER_ADDRESS3Changed()
    End Sub
    Partial Private Sub OnDEALER_THSUBDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_THSUBDISTRICTChanged()
    End Sub
    Partial Private Sub OnDEALER_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnDEALER_COUNTRYKEYChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_COUNTRYKEYChanged()
    End Sub
    Partial Private Sub OnDEALER_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_PHONEChanged()
    End Sub
    Partial Private Sub OnDEALER_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_FAXChanged()
    End Sub
    Partial Private Sub OnDEALER_WEBSITEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_WEBSITEChanged()
    End Sub
    Partial Private Sub OnDEALER_CONTACTNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_CONTACTNOTEChanged()
    End Sub
    Partial Private Sub OnDEALER_ISHOSPITALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEALER_ISHOSPITALChanged()
    End Sub
    Partial Private Sub OnDEALER_ISOUTLABXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEALER_ISOUTLABXTYPEChanged()
    End Sub
    Partial Private Sub OnDEALER_ISVENDORXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEALER_ISVENDORXTYPEChanged()
    End Sub
    Partial Private Sub OnDEALER_ISMANUFACTUREXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEALER_ISMANUFACTUREXTYPEChanged()
    End Sub
    Partial Private Sub OnDEALER_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDEALER_NOTEChanged()
    End Sub
    Partial Private Sub OnDEALER_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEALER_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEALER_ID() As Integer
		Get
			Return Me._DEALER_ID
		End Get
		Set
			If ((Me._DEALER_ID = value)  _
						= false) Then
				Me.OnDEALER_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ID = value
				Me.SendPropertyChanged("DEALER_ID")
				Me.OnDEALER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_CODE() As String
		Get
			Return Me._DEALER_CODE
		End Get
		Set
			If (String.Equals(Me._DEALER_CODE, value) = false) Then
				Me.OnDEALER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_CODE = value
				Me.SendPropertyChanged("DEALER_CODE")
				Me.OnDEALER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_NAME() As String
		Get
			Return Me._DEALER_NAME
		End Get
		Set
			If (String.Equals(Me._DEALER_NAME, value) = false) Then
				Me.OnDEALER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_NAME = value
				Me.SendPropertyChanged("DEALER_NAME")
				Me.OnDEALER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_ENNAME() As String
		Get
			Return Me._DEALER_ENNAME
		End Get
		Set
			If (String.Equals(Me._DEALER_ENNAME, value) = false) Then
				Me.OnDEALER_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ENNAME = value
				Me.SendPropertyChanged("DEALER_ENNAME")
				Me.OnDEALER_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ADDRESS1", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_ADDRESS1() As String
		Get
			Return Me._DEALER_ADDRESS1
		End Get
		Set
			If (String.Equals(Me._DEALER_ADDRESS1, value) = false) Then
				Me.OnDEALER_ADDRESS1Changing(value)
				Me.SendPropertyChanging
				Me._DEALER_ADDRESS1 = value
				Me.SendPropertyChanged("DEALER_ADDRESS1")
				Me.OnDEALER_ADDRESS1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ADDRESS2", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_ADDRESS2() As String
		Get
			Return Me._DEALER_ADDRESS2
		End Get
		Set
			If (String.Equals(Me._DEALER_ADDRESS2, value) = false) Then
				Me.OnDEALER_ADDRESS2Changing(value)
				Me.SendPropertyChanging
				Me._DEALER_ADDRESS2 = value
				Me.SendPropertyChanged("DEALER_ADDRESS2")
				Me.OnDEALER_ADDRESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ADDRESS3", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_ADDRESS3() As String
		Get
			Return Me._DEALER_ADDRESS3
		End Get
		Set
			If (String.Equals(Me._DEALER_ADDRESS3, value) = false) Then
				Me.OnDEALER_ADDRESS3Changing(value)
				Me.SendPropertyChanging
				Me._DEALER_ADDRESS3 = value
				Me.SendPropertyChanged("DEALER_ADDRESS3")
				Me.OnDEALER_ADDRESS3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_THSUBDISTRICT", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_THSUBDISTRICT() As String
		Get
			Return Me._DEALER_THSUBDISTRICT
		End Get
		Set
			If (String.Equals(Me._DEALER_THSUBDISTRICT, value) = false) Then
				Me.OnDEALER_THSUBDISTRICTChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_THSUBDISTRICT = value
				Me.SendPropertyChanged("DEALER_THSUBDISTRICT")
				Me.OnDEALER_THSUBDISTRICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property DEALER_ZIPCODE() As String
		Get
			Return Me._DEALER_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._DEALER_ZIPCODE, value) = false) Then
				Me.OnDEALER_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ZIPCODE = value
				Me.SendPropertyChanged("DEALER_ZIPCODE")
				Me.OnDEALER_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_COUNTRYKEY", DbType:="NVarChar(50)")>  _
	Public Property DEALER_COUNTRYKEY() As String
		Get
			Return Me._DEALER_COUNTRYKEY
		End Get
		Set
			If (String.Equals(Me._DEALER_COUNTRYKEY, value) = false) Then
				Me.OnDEALER_COUNTRYKEYChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_COUNTRYKEY = value
				Me.SendPropertyChanged("DEALER_COUNTRYKEY")
				Me.OnDEALER_COUNTRYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_PHONE", DbType:="NVarChar(50)")>  _
	Public Property DEALER_PHONE() As String
		Get
			Return Me._DEALER_PHONE
		End Get
		Set
			If (String.Equals(Me._DEALER_PHONE, value) = false) Then
				Me.OnDEALER_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_PHONE = value
				Me.SendPropertyChanged("DEALER_PHONE")
				Me.OnDEALER_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_FAX", DbType:="NVarChar(50)")>  _
	Public Property DEALER_FAX() As String
		Get
			Return Me._DEALER_FAX
		End Get
		Set
			If (String.Equals(Me._DEALER_FAX, value) = false) Then
				Me.OnDEALER_FAXChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_FAX = value
				Me.SendPropertyChanged("DEALER_FAX")
				Me.OnDEALER_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_WEBSITE", DbType:="NVarChar(50)")>  _
	Public Property DEALER_WEBSITE() As String
		Get
			Return Me._DEALER_WEBSITE
		End Get
		Set
			If (String.Equals(Me._DEALER_WEBSITE, value) = false) Then
				Me.OnDEALER_WEBSITEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_WEBSITE = value
				Me.SendPropertyChanged("DEALER_WEBSITE")
				Me.OnDEALER_WEBSITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_CONTACTNOTE", DbType:="NVarChar(50)")>  _
	Public Property DEALER_CONTACTNOTE() As String
		Get
			Return Me._DEALER_CONTACTNOTE
		End Get
		Set
			If (String.Equals(Me._DEALER_CONTACTNOTE, value) = false) Then
				Me.OnDEALER_CONTACTNOTEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_CONTACTNOTE = value
				Me.SendPropertyChanged("DEALER_CONTACTNOTE")
				Me.OnDEALER_CONTACTNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ISHOSPITAL", DbType:="Int")>  _
	Public Property DEALER_ISHOSPITAL() As System.Nullable(Of Integer)
		Get
			Return Me._DEALER_ISHOSPITAL
		End Get
		Set
			If (Me._DEALER_ISHOSPITAL.Equals(value) = false) Then
				Me.OnDEALER_ISHOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ISHOSPITAL = value
				Me.SendPropertyChanged("DEALER_ISHOSPITAL")
				Me.OnDEALER_ISHOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ISOUTLABXTYPE", DbType:="Int")>  _
	Public Property DEALER_ISOUTLABXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DEALER_ISOUTLABXTYPE
		End Get
		Set
			If (Me._DEALER_ISOUTLABXTYPE.Equals(value) = false) Then
				Me.OnDEALER_ISOUTLABXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ISOUTLABXTYPE = value
				Me.SendPropertyChanged("DEALER_ISOUTLABXTYPE")
				Me.OnDEALER_ISOUTLABXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ISVENDORXTYPE", DbType:="Int")>  _
	Public Property DEALER_ISVENDORXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DEALER_ISVENDORXTYPE
		End Get
		Set
			If (Me._DEALER_ISVENDORXTYPE.Equals(value) = false) Then
				Me.OnDEALER_ISVENDORXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ISVENDORXTYPE = value
				Me.SendPropertyChanged("DEALER_ISVENDORXTYPE")
				Me.OnDEALER_ISVENDORXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ISMANUFACTUREXTYPE", DbType:="Int")>  _
	Public Property DEALER_ISMANUFACTUREXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DEALER_ISMANUFACTUREXTYPE
		End Get
		Set
			If (Me._DEALER_ISMANUFACTUREXTYPE.Equals(value) = false) Then
				Me.OnDEALER_ISMANUFACTUREXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ISMANUFACTUREXTYPE = value
				Me.SendPropertyChanged("DEALER_ISMANUFACTUREXTYPE")
				Me.OnDEALER_ISMANUFACTUREXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DEALER_NOTE() As String
		Get
			Return Me._DEALER_NOTE
		End Get
		Set
			If (String.Equals(Me._DEALER_NOTE, value) = false) Then
				Me.OnDEALER_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_NOTE = value
				Me.SendPropertyChanged("DEALER_NOTE")
				Me.OnDEALER_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEALER_ISDISABLED", DbType:="Int")>  _
	Public Property DEALER_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DEALER_ISDISABLED
		End Get
		Set
			If (Me._DEALER_ISDISABLED.Equals(value) = false) Then
				Me.OnDEALER_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DEALER_ISDISABLED = value
				Me.SendPropertyChanged("DEALER_ISDISABLED")
				Me.OnDEALER_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEPARTMENT")>  _
Partial Public Class MAS_DEPARTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEPARTMENT_ID As Integer
	
	Private _DEPARTMENT_CODE As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_NAME As String
	
	Private _DEPARTMENT_ENNAME As String
	
	Private _DEPARTMENT_REPORTTODOCUMENTKEY As String
	
	Private _DEPARTMENT_DEPARTMENTLEVELKEY As String
	
	Private _DEPARTMENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_HASSERVICEUNIT As System.Nullable(Of Integer)
	
	Private _INTTELNO As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_CODEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REPORTTODOCUMENTKEYChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REPORTTODOCUMENTKEYChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_DEPARTMENTLEVELKEYChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_DEPARTMENTLEVELKEYChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_HASSERVICEUNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_HASSERVICEUNITChanged()
    End Sub
    Partial Private Sub OnINTTELNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINTTELNOChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEPARTMENT_ID() As Integer
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If ((Me._DEPARTMENT_ID = value)  _
						= false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_CODE", DbType:="Int")>  _
	Public Property DEPARTMENT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_CODE
		End Get
		Set
			If (Me._DEPARTMENT_CODE.Equals(value) = false) Then
				Me.OnDEPARTMENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_CODE = value
				Me.SendPropertyChanged("DEPARTMENT_CODE")
				Me.OnDEPARTMENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_NAME", DbType:="NVarChar(500)")>  _
	Public Property DEPARTMENT_NAME() As String
		Get
			Return Me._DEPARTMENT_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_NAME, value) = false) Then
				Me.OnDEPARTMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_NAME")
				Me.OnDEPARTMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ENNAME", DbType:="NVarChar(500)")>  _
	Public Property DEPARTMENT_ENNAME() As String
		Get
			Return Me._DEPARTMENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_ENNAME, value) = false) Then
				Me.OnDEPARTMENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ENNAME = value
				Me.SendPropertyChanged("DEPARTMENT_ENNAME")
				Me.OnDEPARTMENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REPORTTODOCUMENTKEY", DbType:="NVarChar(50)")>  _
	Public Property DEPARTMENT_REPORTTODOCUMENTKEY() As String
		Get
			Return Me._DEPARTMENT_REPORTTODOCUMENTKEY
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REPORTTODOCUMENTKEY, value) = false) Then
				Me.OnDEPARTMENT_REPORTTODOCUMENTKEYChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REPORTTODOCUMENTKEY = value
				Me.SendPropertyChanged("DEPARTMENT_REPORTTODOCUMENTKEY")
				Me.OnDEPARTMENT_REPORTTODOCUMENTKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_DEPARTMENTLEVELKEY", DbType:="NVarChar(50)")>  _
	Public Property DEPARTMENT_DEPARTMENTLEVELKEY() As String
		Get
			Return Me._DEPARTMENT_DEPARTMENTLEVELKEY
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_DEPARTMENTLEVELKEY, value) = false) Then
				Me.OnDEPARTMENT_DEPARTMENTLEVELKEYChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_DEPARTMENTLEVELKEY = value
				Me.SendPropertyChanged("DEPARTMENT_DEPARTMENTLEVELKEY")
				Me.OnDEPARTMENT_DEPARTMENTLEVELKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ISDISABLED", DbType:="Int")>  _
	Public Property DEPARTMENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ISDISABLED
		End Get
		Set
			If (Me._DEPARTMENT_ISDISABLED.Equals(value) = false) Then
				Me.OnDEPARTMENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ISDISABLED = value
				Me.SendPropertyChanged("DEPARTMENT_ISDISABLED")
				Me.OnDEPARTMENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_HASSERVICEUNIT", DbType:="Int")>  _
	Public Property DEPARTMENT_HASSERVICEUNIT() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_HASSERVICEUNIT
		End Get
		Set
			If (Me._DEPARTMENT_HASSERVICEUNIT.Equals(value) = false) Then
				Me.OnDEPARTMENT_HASSERVICEUNITChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_HASSERVICEUNIT = value
				Me.SendPropertyChanged("DEPARTMENT_HASSERVICEUNIT")
				Me.OnDEPARTMENT_HASSERVICEUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTTELNO", DbType:="Int")>  _
	Public Property INTTELNO() As System.Nullable(Of Integer)
		Get
			Return Me._INTTELNO
		End Get
		Set
			If (Me._INTTELNO.Equals(value) = false) Then
				Me.OnINTTELNOChanging(value)
				Me.SendPropertyChanging
				Me._INTTELNO = value
				Me.SendPropertyChanged("INTTELNO")
				Me.OnINTTELNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEPARTMENT_MAIN")>  _
Partial Public Class MAS_DEPARTMENT_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEPARTMENT_MAIN_ID As Integer
	
	Private _DEPARTMENT_MAIN_CODE As String
	
	Private _DEPARTMENT_MAIN_DEPARTMENTNAME As String
	
	Private _DEPARTMENT_MAIN_ENNAME As String
	
	Private _DEPARTMENT_MAIN_NOTE As String
	
	Private _DEPARTMENT_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_DEPARTMENTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_DEPARTMENTNAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEPARTMENT_MAIN_ID() As Integer
		Get
			Return Me._DEPARTMENT_MAIN_ID
		End Get
		Set
			If ((Me._DEPARTMENT_MAIN_ID = value)  _
						= false) Then
				Me.OnDEPARTMENT_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_ID = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_ID")
				Me.OnDEPARTMENT_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property DEPARTMENT_MAIN_CODE() As String
		Get
			Return Me._DEPARTMENT_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_MAIN_CODE, value) = false) Then
				Me.OnDEPARTMENT_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_CODE = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_CODE")
				Me.OnDEPARTMENT_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_DEPARTMENTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_MAIN_DEPARTMENTNAME() As String
		Get
			Return Me._DEPARTMENT_MAIN_DEPARTMENTNAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_MAIN_DEPARTMENTNAME, value) = false) Then
				Me.OnDEPARTMENT_MAIN_DEPARTMENTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_DEPARTMENTNAME = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_DEPARTMENTNAME")
				Me.OnDEPARTMENT_MAIN_DEPARTMENTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_MAIN_ENNAME() As String
		Get
			Return Me._DEPARTMENT_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_MAIN_ENNAME, value) = false) Then
				Me.OnDEPARTMENT_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_ENNAME = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_ENNAME")
				Me.OnDEPARTMENT_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_MAIN_NOTE() As String
		Get
			Return Me._DEPARTMENT_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_MAIN_NOTE, value) = false) Then
				Me.OnDEPARTMENT_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_NOTE = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_NOTE")
				Me.OnDEPARTMENT_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property DEPARTMENT_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_MAIN_ISDISABLED
		End Get
		Set
			If (Me._DEPARTMENT_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnDEPARTMENT_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("DEPARTMENT_MAIN_ISDISABLED")
				Me.OnDEPARTMENT_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEPENDENT")>  _
Partial Public Class MAS_DEPENDENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEPENDENT_ID As Integer
	
	Private _DEPENDENT_CODE As System.Nullable(Of Integer)
	
	Private _DEPENDENT_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEPENDENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEPENDENT_IDChanged()
    End Sub
    Partial Private Sub OnDEPENDENT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPENDENT_CODEChanged()
    End Sub
    Partial Private Sub OnDEPENDENT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDEPENDENT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPENDENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEPENDENT_ID() As Integer
		Get
			Return Me._DEPENDENT_ID
		End Get
		Set
			If ((Me._DEPENDENT_ID = value)  _
						= false) Then
				Me.OnDEPENDENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPENDENT_ID = value
				Me.SendPropertyChanged("DEPENDENT_ID")
				Me.OnDEPENDENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPENDENT_CODE", DbType:="Int")>  _
	Public Property DEPENDENT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DEPENDENT_CODE
		End Get
		Set
			If (Me._DEPENDENT_CODE.Equals(value) = false) Then
				Me.OnDEPENDENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEPENDENT_CODE = value
				Me.SendPropertyChanged("DEPENDENT_CODE")
				Me.OnDEPENDENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPENDENT_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DEPENDENT_DESCRIPTION() As String
		Get
			Return Me._DEPENDENT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DEPENDENT_DESCRIPTION, value) = false) Then
				Me.OnDEPENDENT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DEPENDENT_DESCRIPTION = value
				Me.SendPropertyChanged("DEPENDENT_DESCRIPTION")
				Me.OnDEPENDENT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DESCRIPTION_DISTRIBUTION")>  _
Partial Public Class MAS_DESCRIPTION_DISTRIBUTION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DESCRIPTION_DISTRIBUTION_ID As Integer
	
	Private _DESCRIPTION_DISTRIBUTION_CODE As String
	
	Private _DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME As String
	
	Private _DESCRIPTION_DISTRIBUTION_ENNAME As String
	
	Private _DESCRIPTION_DISTRIBUTION_NOTE As String
	
	Private _DESCRIPTION_DISTRIBUTION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS As System.Nullable(Of Integer)
	
	Private _DESCRIPTION_DISTRIBUTION_DISCHARGETYPE As System.Nullable(Of Integer)
	
	Private _DESCRIPTION_DISTRIBUTION_PATIENTTYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_IDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_CODEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAMEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_NOTEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISCHARGESTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISCHARGESTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISCHARGETYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_DISCHARGETYPEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_PATIENTTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDESCRIPTION_DISTRIBUTION_PATIENTTYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DESCRIPTION_DISTRIBUTION_ID() As Integer
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_ID
		End Get
		Set
			If ((Me._DESCRIPTION_DISTRIBUTION_ID = value)  _
						= false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_ID = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_ID")
				Me.OnDESCRIPTION_DISTRIBUTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_CODE", DbType:="NVarChar(50)")>  _
	Public Property DESCRIPTION_DISTRIBUTION_CODE() As String
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_CODE
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DISTRIBUTION_CODE, value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_CODE = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_CODE")
				Me.OnDESCRIPTION_DISTRIBUTION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME() As String
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME, value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAME")
				Me.OnDESCRIPTION_DISTRIBUTION_DISTRIBUTIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_DISTRIBUTION_ENNAME() As String
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_ENNAME
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DISTRIBUTION_ENNAME, value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_ENNAME = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_ENNAME")
				Me.OnDESCRIPTION_DISTRIBUTION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_DISTRIBUTION_NOTE() As String
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_NOTE
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_DISTRIBUTION_NOTE, value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_NOTE = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_NOTE")
				Me.OnDESCRIPTION_DISTRIBUTION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_ISDISABLED", DbType:="Int")>  _
	Public Property DESCRIPTION_DISTRIBUTION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_ISDISABLED
		End Get
		Set
			If (Me._DESCRIPTION_DISTRIBUTION_ISDISABLED.Equals(value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_ISDISABLED = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_ISDISABLED")
				Me.OnDESCRIPTION_DISTRIBUTION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS", DbType:="Int")>  _
	Public Property DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS() As System.Nullable(Of Integer)
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS
		End Get
		Set
			If (Me._DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS.Equals(value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_DISCHARGESTATUSChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_DISCHARGESTATUS")
				Me.OnDESCRIPTION_DISTRIBUTION_DISCHARGESTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_DISCHARGETYPE", DbType:="Int")>  _
	Public Property DESCRIPTION_DISTRIBUTION_DISCHARGETYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_DISCHARGETYPE
		End Get
		Set
			If (Me._DESCRIPTION_DISTRIBUTION_DISCHARGETYPE.Equals(value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_DISCHARGETYPEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_DISCHARGETYPE = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_DISCHARGETYPE")
				Me.OnDESCRIPTION_DISTRIBUTION_DISCHARGETYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_DISTRIBUTION_PATIENTTYPE", DbType:="Int")>  _
	Public Property DESCRIPTION_DISTRIBUTION_PATIENTTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DESCRIPTION_DISTRIBUTION_PATIENTTYPE
		End Get
		Set
			If (Me._DESCRIPTION_DISTRIBUTION_PATIENTTYPE.Equals(value) = false) Then
				Me.OnDESCRIPTION_DISTRIBUTION_PATIENTTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_DISTRIBUTION_PATIENTTYPE = value
				Me.SendPropertyChanged("DESCRIPTION_DISTRIBUTION_PATIENTTYPE")
				Me.OnDESCRIPTION_DISTRIBUTION_PATIENTTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DIAGCODE")>  _
Partial Public Class MAS_DIAGCODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DIAGCODE_ID As Integer
	
	Private _DIAGCODE_CODE As System.Nullable(Of Integer)
	
	Private _DIAGCODE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDIAGCODE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDIAGCODE_IDChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGCODE_CODEChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGCODE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DIAGCODE_ID() As Integer
		Get
			Return Me._DIAGCODE_ID
		End Get
		Set
			If ((Me._DIAGCODE_ID = value)  _
						= false) Then
				Me.OnDIAGCODE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_ID = value
				Me.SendPropertyChanged("DIAGCODE_ID")
				Me.OnDIAGCODE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_CODE", DbType:="Int")>  _
	Public Property DIAGCODE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGCODE_CODE
		End Get
		Set
			If (Me._DIAGCODE_CODE.Equals(value) = false) Then
				Me.OnDIAGCODE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_CODE = value
				Me.SendPropertyChanged("DIAGCODE_CODE")
				Me.OnDIAGCODE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DIAGCODE_DESCRIPTION() As String
		Get
			Return Me._DIAGCODE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DIAGCODE_DESCRIPTION, value) = false) Then
				Me.OnDIAGCODE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_DESCRIPTION = value
				Me.SendPropertyChanged("DIAGCODE_DESCRIPTION")
				Me.OnDIAGCODE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DIAGNOSEAGE")>  _
Partial Public Class MAS_DIAGNOSEAGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DIAGNOSEAGE_ID As Integer
	
	Private _DIAGNOSEAGE_CODE As String
	
	Private _DIAGNOSEAGE_NAME As String
	
	Private _DIAGNOSEAGE_ENNAME As String
	
	Private _DIAGNOSEAGE_NOTE As String
	
	Private _DIAGNOSEAGE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_IDChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_CODEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_NOTEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGNOSEAGE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DIAGNOSEAGE_ID() As Integer
		Get
			Return Me._DIAGNOSEAGE_ID
		End Get
		Set
			If ((Me._DIAGNOSEAGE_ID = value)  _
						= false) Then
				Me.OnDIAGNOSEAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_ID = value
				Me.SendPropertyChanged("DIAGNOSEAGE_ID")
				Me.OnDIAGNOSEAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEAGE_CODE() As String
		Get
			Return Me._DIAGNOSEAGE_CODE
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEAGE_CODE, value) = false) Then
				Me.OnDIAGNOSEAGE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_CODE = value
				Me.SendPropertyChanged("DIAGNOSEAGE_CODE")
				Me.OnDIAGNOSEAGE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEAGE_NAME() As String
		Get
			Return Me._DIAGNOSEAGE_NAME
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEAGE_NAME, value) = false) Then
				Me.OnDIAGNOSEAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_NAME = value
				Me.SendPropertyChanged("DIAGNOSEAGE_NAME")
				Me.OnDIAGNOSEAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEAGE_ENNAME() As String
		Get
			Return Me._DIAGNOSEAGE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEAGE_ENNAME, value) = false) Then
				Me.OnDIAGNOSEAGE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_ENNAME = value
				Me.SendPropertyChanged("DIAGNOSEAGE_ENNAME")
				Me.OnDIAGNOSEAGE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEAGE_NOTE() As String
		Get
			Return Me._DIAGNOSEAGE_NOTE
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEAGE_NOTE, value) = false) Then
				Me.OnDIAGNOSEAGE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_NOTE = value
				Me.SendPropertyChanged("DIAGNOSEAGE_NOTE")
				Me.OnDIAGNOSEAGE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEAGE_ISDISABLED", DbType:="Int")>  _
	Public Property DIAGNOSEAGE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGNOSEAGE_ISDISABLED
		End Get
		Set
			If (Me._DIAGNOSEAGE_ISDISABLED.Equals(value) = false) Then
				Me.OnDIAGNOSEAGE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEAGE_ISDISABLED = value
				Me.SendPropertyChanged("DIAGNOSEAGE_ISDISABLED")
				Me.OnDIAGNOSEAGE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DIAGNOSEBOOK")>  _
Partial Public Class MAS_DIAGNOSEBOOK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DIAGNOSEBOOK_ID As Integer
	
	Private _DIAGNOSEBOOK_CODE As String
	
	Private _DIAGNOSEBOOK_NAME As String
	
	Private _DIAGNOSEBOOK_ENNAME As String
	
	Private _DIAGNOSEBOOK_NOTE As String
	
	Private _DIAGNOSEBOOK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_IDChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_CODEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_NAMEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_NOTEChanged()
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGNOSEBOOK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DIAGNOSEBOOK_ID() As Integer
		Get
			Return Me._DIAGNOSEBOOK_ID
		End Get
		Set
			If ((Me._DIAGNOSEBOOK_ID = value)  _
						= false) Then
				Me.OnDIAGNOSEBOOK_IDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_ID = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_ID")
				Me.OnDIAGNOSEBOOK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEBOOK_CODE() As String
		Get
			Return Me._DIAGNOSEBOOK_CODE
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEBOOK_CODE, value) = false) Then
				Me.OnDIAGNOSEBOOK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_CODE = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_CODE")
				Me.OnDIAGNOSEBOOK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEBOOK_NAME() As String
		Get
			Return Me._DIAGNOSEBOOK_NAME
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEBOOK_NAME, value) = false) Then
				Me.OnDIAGNOSEBOOK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_NAME = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_NAME")
				Me.OnDIAGNOSEBOOK_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEBOOK_ENNAME() As String
		Get
			Return Me._DIAGNOSEBOOK_ENNAME
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEBOOK_ENNAME, value) = false) Then
				Me.OnDIAGNOSEBOOK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_ENNAME = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_ENNAME")
				Me.OnDIAGNOSEBOOK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGNOSEBOOK_NOTE() As String
		Get
			Return Me._DIAGNOSEBOOK_NOTE
		End Get
		Set
			If (String.Equals(Me._DIAGNOSEBOOK_NOTE, value) = false) Then
				Me.OnDIAGNOSEBOOK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_NOTE = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_NOTE")
				Me.OnDIAGNOSEBOOK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGNOSEBOOK_ISDISABLED", DbType:="Int")>  _
	Public Property DIAGNOSEBOOK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGNOSEBOOK_ISDISABLED
		End Get
		Set
			If (Me._DIAGNOSEBOOK_ISDISABLED.Equals(value) = false) Then
				Me.OnDIAGNOSEBOOK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGNOSEBOOK_ISDISABLED = value
				Me.SendPropertyChanged("DIAGNOSEBOOK_ISDISABLED")
				Me.OnDIAGNOSEBOOK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DIAGNOSIS")>  _
Partial Public Class MAS_DIAGNOSI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DIAGCODE_ID As Integer
	
	Private _DIAGCODE_SYMPTOM As System.Nullable(Of Integer)
	
	Private _DIAGCODE_DIAGNOSISNAME As String
	
	Private _DIAGCODE_ENNAME As String
	
	Private _DIAGCODE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DIAGCODE_NOTE As String
	
	Private _DIAGCODE_CODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDIAGCODE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDIAGCODE_IDChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_SYMPTOMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGCODE_SYMPTOMChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_DIAGNOSISNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGCODE_DIAGNOSISNAMEChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGCODE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGCODE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGCODE_NOTEChanged()
    End Sub
    Partial Private Sub OnDIAGCODE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGCODE_CODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DIAGCODE_ID() As Integer
		Get
			Return Me._DIAGCODE_ID
		End Get
		Set
			If ((Me._DIAGCODE_ID = value)  _
						= false) Then
				Me.OnDIAGCODE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_ID = value
				Me.SendPropertyChanged("DIAGCODE_ID")
				Me.OnDIAGCODE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_SYMPTOM", DbType:="Int")>  _
	Public Property DIAGCODE_SYMPTOM() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGCODE_SYMPTOM
		End Get
		Set
			If (Me._DIAGCODE_SYMPTOM.Equals(value) = false) Then
				Me.OnDIAGCODE_SYMPTOMChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_SYMPTOM = value
				Me.SendPropertyChanged("DIAGCODE_SYMPTOM")
				Me.OnDIAGCODE_SYMPTOMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_DIAGNOSISNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGCODE_DIAGNOSISNAME() As String
		Get
			Return Me._DIAGCODE_DIAGNOSISNAME
		End Get
		Set
			If (String.Equals(Me._DIAGCODE_DIAGNOSISNAME, value) = false) Then
				Me.OnDIAGCODE_DIAGNOSISNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_DIAGNOSISNAME = value
				Me.SendPropertyChanged("DIAGCODE_DIAGNOSISNAME")
				Me.OnDIAGCODE_DIAGNOSISNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGCODE_ENNAME() As String
		Get
			Return Me._DIAGCODE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DIAGCODE_ENNAME, value) = false) Then
				Me.OnDIAGCODE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_ENNAME = value
				Me.SendPropertyChanged("DIAGCODE_ENNAME")
				Me.OnDIAGCODE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_ISDISABLED", DbType:="Int")>  _
	Public Property DIAGCODE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGCODE_ISDISABLED
		End Get
		Set
			If (Me._DIAGCODE_ISDISABLED.Equals(value) = false) Then
				Me.OnDIAGCODE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_ISDISABLED = value
				Me.SendPropertyChanged("DIAGCODE_ISDISABLED")
				Me.OnDIAGCODE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DIAGCODE_NOTE() As String
		Get
			Return Me._DIAGCODE_NOTE
		End Get
		Set
			If (String.Equals(Me._DIAGCODE_NOTE, value) = false) Then
				Me.OnDIAGCODE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_NOTE = value
				Me.SendPropertyChanged("DIAGCODE_NOTE")
				Me.OnDIAGCODE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGCODE_CODE", DbType:="NVarChar(50)")>  _
	Public Property DIAGCODE_CODE() As String
		Get
			Return Me._DIAGCODE_CODE
		End Get
		Set
			If (String.Equals(Me._DIAGCODE_CODE, value) = false) Then
				Me.OnDIAGCODE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGCODE_CODE = value
				Me.SendPropertyChanged("DIAGCODE_CODE")
				Me.OnDIAGCODE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DIAGTYPE")>  _
Partial Public Class MAS_DIAGTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DIAGTYPE_ID As Integer
	
	Private _DIAGTYPE_CODE As System.Nullable(Of Integer)
	
	Private _DIAGTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDIAGTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDIAGTYPE_IDChanged()
    End Sub
    Partial Private Sub OnDIAGTYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDIAGTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnDIAGTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIAGTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DIAGTYPE_ID() As Integer
		Get
			Return Me._DIAGTYPE_ID
		End Get
		Set
			If ((Me._DIAGTYPE_ID = value)  _
						= false) Then
				Me.OnDIAGTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DIAGTYPE_ID = value
				Me.SendPropertyChanged("DIAGTYPE_ID")
				Me.OnDIAGTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGTYPE_CODE", DbType:="Int")>  _
	Public Property DIAGTYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DIAGTYPE_CODE
		End Get
		Set
			If (Me._DIAGTYPE_CODE.Equals(value) = false) Then
				Me.OnDIAGTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DIAGTYPE_CODE = value
				Me.SendPropertyChanged("DIAGTYPE_CODE")
				Me.OnDIAGTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAGTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DIAGTYPE_DESCRIPTION() As String
		Get
			Return Me._DIAGTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DIAGTYPE_DESCRIPTION, value) = false) Then
				Me.OnDIAGTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DIAGTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("DIAGTYPE_DESCRIPTION")
				Me.OnDIAGTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISABCAUSE")>  _
Partial Public Class MAS_DISABCAUSE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISABCAUSE_ID As Integer
	
	Private _DISABCAUSE_CODE As System.Nullable(Of Integer)
	
	Private _DISABCAUSE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISABCAUSE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISABCAUSE_IDChanged()
    End Sub
    Partial Private Sub OnDISABCAUSE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISABCAUSE_CODEChanged()
    End Sub
    Partial Private Sub OnDISABCAUSE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDISABCAUSE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABCAUSE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISABCAUSE_ID() As Integer
		Get
			Return Me._DISABCAUSE_ID
		End Get
		Set
			If ((Me._DISABCAUSE_ID = value)  _
						= false) Then
				Me.OnDISABCAUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISABCAUSE_ID = value
				Me.SendPropertyChanged("DISABCAUSE_ID")
				Me.OnDISABCAUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABCAUSE_CODE", DbType:="Int")>  _
	Public Property DISABCAUSE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DISABCAUSE_CODE
		End Get
		Set
			If (Me._DISABCAUSE_CODE.Equals(value) = false) Then
				Me.OnDISABCAUSE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISABCAUSE_CODE = value
				Me.SendPropertyChanged("DISABCAUSE_CODE")
				Me.OnDISABCAUSE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABCAUSE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DISABCAUSE_DESCRIPTION() As String
		Get
			Return Me._DISABCAUSE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DISABCAUSE_DESCRIPTION, value) = false) Then
				Me.OnDISABCAUSE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DISABCAUSE_DESCRIPTION = value
				Me.SendPropertyChanged("DISABCAUSE_DESCRIPTION")
				Me.OnDISABCAUSE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISABLEREASON")>  _
Partial Public Class MAS_DISABLEREASON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISABLEREASONKEY As Integer
	
	Private _DISABLEREASON_CODE As String
	
	Private _DISABLEREASON_NAME As String
	
	Private _DISABLEREASON_EN_NAME As String
	
	Private _DISABLEREASON_NOTE As String
	
	Private _DISABLEREASON_IsDisabled As System.Nullable(Of Integer)
	
	Private _DISABLEREASON As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISABLEREASONKEYChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISABLEREASONKEYChanged()
    End Sub
    Partial Private Sub OnDISABLEREASON_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISABLEREASON_CODEChanged()
    End Sub
    Partial Private Sub OnDISABLEREASON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISABLEREASON_NAMEChanged()
    End Sub
    Partial Private Sub OnDISABLEREASON_EN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISABLEREASON_EN_NAMEChanged()
    End Sub
    Partial Private Sub OnDISABLEREASON_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISABLEREASON_NOTEChanged()
    End Sub
    Partial Private Sub OnDISABLEREASON_IsDisabledChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISABLEREASON_IsDisabledChanged()
    End Sub
    Partial Private Sub OnDISABLEREASONChanging(value As String)
    End Sub
    Partial Private Sub OnDISABLEREASONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASONKEY", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISABLEREASONKEY() As Integer
		Get
			Return Me._DISABLEREASONKEY
		End Get
		Set
			If ((Me._DISABLEREASONKEY = value)  _
						= false) Then
				Me.OnDISABLEREASONKEYChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASONKEY = value
				Me.SendPropertyChanged("DISABLEREASONKEY")
				Me.OnDISABLEREASONKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON_CODE", DbType:="NVarChar(10)")>  _
	Public Property DISABLEREASON_CODE() As String
		Get
			Return Me._DISABLEREASON_CODE
		End Get
		Set
			If (String.Equals(Me._DISABLEREASON_CODE, value) = false) Then
				Me.OnDISABLEREASON_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON_CODE = value
				Me.SendPropertyChanged("DISABLEREASON_CODE")
				Me.OnDISABLEREASON_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON_NAME", DbType:="NVarChar(100)")>  _
	Public Property DISABLEREASON_NAME() As String
		Get
			Return Me._DISABLEREASON_NAME
		End Get
		Set
			If (String.Equals(Me._DISABLEREASON_NAME, value) = false) Then
				Me.OnDISABLEREASON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON_NAME = value
				Me.SendPropertyChanged("DISABLEREASON_NAME")
				Me.OnDISABLEREASON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON_EN_NAME", DbType:="NVarChar(100)")>  _
	Public Property DISABLEREASON_EN_NAME() As String
		Get
			Return Me._DISABLEREASON_EN_NAME
		End Get
		Set
			If (String.Equals(Me._DISABLEREASON_EN_NAME, value) = false) Then
				Me.OnDISABLEREASON_EN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON_EN_NAME = value
				Me.SendPropertyChanged("DISABLEREASON_EN_NAME")
				Me.OnDISABLEREASON_EN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISABLEREASON_NOTE() As String
		Get
			Return Me._DISABLEREASON_NOTE
		End Get
		Set
			If (String.Equals(Me._DISABLEREASON_NOTE, value) = false) Then
				Me.OnDISABLEREASON_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON_NOTE = value
				Me.SendPropertyChanged("DISABLEREASON_NOTE")
				Me.OnDISABLEREASON_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON_IsDisabled", DbType:="Int")>  _
	Public Property DISABLEREASON_IsDisabled() As System.Nullable(Of Integer)
		Get
			Return Me._DISABLEREASON_IsDisabled
		End Get
		Set
			If (Me._DISABLEREASON_IsDisabled.Equals(value) = false) Then
				Me.OnDISABLEREASON_IsDisabledChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON_IsDisabled = value
				Me.SendPropertyChanged("DISABLEREASON_IsDisabled")
				Me.OnDISABLEREASON_IsDisabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABLEREASON", DbType:="NChar(10)")>  _
	Public Property DISABLEREASON() As String
		Get
			Return Me._DISABLEREASON
		End Get
		Set
			If (String.Equals(Me._DISABLEREASON, value) = false) Then
				Me.OnDISABLEREASONChanging(value)
				Me.SendPropertyChanging
				Me._DISABLEREASON = value
				Me.SendPropertyChanged("DISABLEREASON")
				Me.OnDISABLEREASONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISABTYPE")>  _
Partial Public Class MAS_DISABTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISABTYPE_ID As Integer
	
	Private _DISABTYPE_CODE As System.Nullable(Of Integer)
	
	Private _DISABTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISABTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISABTYPE_IDChanged()
    End Sub
    Partial Private Sub OnDISABTYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISABTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnDISABTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDISABTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISABTYPE_ID() As Integer
		Get
			Return Me._DISABTYPE_ID
		End Get
		Set
			If ((Me._DISABTYPE_ID = value)  _
						= false) Then
				Me.OnDISABTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISABTYPE_ID = value
				Me.SendPropertyChanged("DISABTYPE_ID")
				Me.OnDISABTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABTYPE_CODE", DbType:="Int")>  _
	Public Property DISABTYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DISABTYPE_CODE
		End Get
		Set
			If (Me._DISABTYPE_CODE.Equals(value) = false) Then
				Me.OnDISABTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISABTYPE_CODE = value
				Me.SendPropertyChanged("DISABTYPE_CODE")
				Me.OnDISABTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISABTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DISABTYPE_DESCRIPTION() As String
		Get
			Return Me._DISABTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DISABTYPE_DESCRIPTION, value) = false) Then
				Me.OnDISABTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DISABTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("DISABTYPE_DESCRIPTION")
				Me.OnDISABTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCHARGE")>  _
Partial Public Class MAS_DISCHARGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCHARGE_ID As Integer
	
	Private _DISCHARGE_CODE As System.Nullable(Of Integer)
	
	Private _DISCHARGE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCHARGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCHARGE_IDChanged()
    End Sub
    Partial Private Sub OnDISCHARGE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCHARGE_CODEChanged()
    End Sub
    Partial Private Sub OnDISCHARGE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDISCHARGE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCHARGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCHARGE_ID() As Integer
		Get
			Return Me._DISCHARGE_ID
		End Get
		Set
			If ((Me._DISCHARGE_ID = value)  _
						= false) Then
				Me.OnDISCHARGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCHARGE_ID = value
				Me.SendPropertyChanged("DISCHARGE_ID")
				Me.OnDISCHARGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCHARGE_CODE", DbType:="Int")>  _
	Public Property DISCHARGE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DISCHARGE_CODE
		End Get
		Set
			If (Me._DISCHARGE_CODE.Equals(value) = false) Then
				Me.OnDISCHARGE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCHARGE_CODE = value
				Me.SendPropertyChanged("DISCHARGE_CODE")
				Me.OnDISCHARGE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCHARGE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DISCHARGE_DESCRIPTION() As String
		Get
			Return Me._DISCHARGE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DISCHARGE_DESCRIPTION, value) = false) Then
				Me.OnDISCHARGE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DISCHARGE_DESCRIPTION = value
				Me.SendPropertyChanged("DISCHARGE_DESCRIPTION")
				Me.OnDISCHARGE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCOUNT")>  _
Partial Public Class MAS_DISCOUNT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCOUNT_ID As Integer
	
	Private _DISCOUNT_CODE As String
	
	Private _DISCOUNT_DISCOUNTNAME As String
	
	Private _DISCOUNT_ENNAME As String
	
	Private _DISCOUNT_NOTE As String
	
	Private _DISCOUNT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCOUNT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCOUNT_IDChanged()
    End Sub
    Partial Private Sub OnDISCOUNT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNT_CODEChanged()
    End Sub
    Partial Private Sub OnDISCOUNT_DISCOUNTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNT_DISCOUNTNAMEChanged()
    End Sub
    Partial Private Sub OnDISCOUNT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISCOUNT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNT_NOTEChanged()
    End Sub
    Partial Private Sub OnDISCOUNT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCOUNT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCOUNT_ID() As Integer
		Get
			Return Me._DISCOUNT_ID
		End Get
		Set
			If ((Me._DISCOUNT_ID = value)  _
						= false) Then
				Me.OnDISCOUNT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_ID = value
				Me.SendPropertyChanged("DISCOUNT_ID")
				Me.OnDISCOUNT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISCOUNT_CODE() As String
		Get
			Return Me._DISCOUNT_CODE
		End Get
		Set
			If (String.Equals(Me._DISCOUNT_CODE, value) = false) Then
				Me.OnDISCOUNT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_CODE = value
				Me.SendPropertyChanged("DISCOUNT_CODE")
				Me.OnDISCOUNT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_DISCOUNTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNT_DISCOUNTNAME() As String
		Get
			Return Me._DISCOUNT_DISCOUNTNAME
		End Get
		Set
			If (String.Equals(Me._DISCOUNT_DISCOUNTNAME, value) = false) Then
				Me.OnDISCOUNT_DISCOUNTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_DISCOUNTNAME = value
				Me.SendPropertyChanged("DISCOUNT_DISCOUNTNAME")
				Me.OnDISCOUNT_DISCOUNTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNT_ENNAME() As String
		Get
			Return Me._DISCOUNT_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISCOUNT_ENNAME, value) = false) Then
				Me.OnDISCOUNT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_ENNAME = value
				Me.SendPropertyChanged("DISCOUNT_ENNAME")
				Me.OnDISCOUNT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNT_NOTE() As String
		Get
			Return Me._DISCOUNT_NOTE
		End Get
		Set
			If (String.Equals(Me._DISCOUNT_NOTE, value) = false) Then
				Me.OnDISCOUNT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_NOTE = value
				Me.SendPropertyChanged("DISCOUNT_NOTE")
				Me.OnDISCOUNT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT_ISDISABLED", DbType:="Int")>  _
	Public Property DISCOUNT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISCOUNT_ISDISABLED
		End Get
		Set
			If (Me._DISCOUNT_ISDISABLED.Equals(value) = false) Then
				Me.OnDISCOUNT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT_ISDISABLED = value
				Me.SendPropertyChanged("DISCOUNT_ISDISABLED")
				Me.OnDISCOUNT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCOUNTREASON")>  _
Partial Public Class MAS_DISCOUNTREASON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCOUNTREASON_ID As Integer
	
	Private _DISCOUNTREASON_CODE As String
	
	Private _DISCOUNTREASON_DISCOUNTREASONNAME As String
	
	Private _DISCOUNTREASON_ENNAME As String
	
	Private _DISCOUNTREASON_NOTE As String
	
	Private _DISCOUNTREASON_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCOUNTREASON_IDChanged()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNTREASON_CODEChanged()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_DISCOUNTREASONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNTREASON_DISCOUNTREASONNAMEChanged()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNTREASON_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNTREASON_NOTEChanged()
    End Sub
    Partial Private Sub OnDISCOUNTREASON_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCOUNTREASON_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCOUNTREASON_ID() As Integer
		Get
			Return Me._DISCOUNTREASON_ID
		End Get
		Set
			If ((Me._DISCOUNTREASON_ID = value)  _
						= false) Then
				Me.OnDISCOUNTREASON_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_ID = value
				Me.SendPropertyChanged("DISCOUNTREASON_ID")
				Me.OnDISCOUNTREASON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISCOUNTREASON_CODE() As String
		Get
			Return Me._DISCOUNTREASON_CODE
		End Get
		Set
			If (String.Equals(Me._DISCOUNTREASON_CODE, value) = false) Then
				Me.OnDISCOUNTREASON_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_CODE = value
				Me.SendPropertyChanged("DISCOUNTREASON_CODE")
				Me.OnDISCOUNTREASON_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_DISCOUNTREASONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNTREASON_DISCOUNTREASONNAME() As String
		Get
			Return Me._DISCOUNTREASON_DISCOUNTREASONNAME
		End Get
		Set
			If (String.Equals(Me._DISCOUNTREASON_DISCOUNTREASONNAME, value) = false) Then
				Me.OnDISCOUNTREASON_DISCOUNTREASONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_DISCOUNTREASONNAME = value
				Me.SendPropertyChanged("DISCOUNTREASON_DISCOUNTREASONNAME")
				Me.OnDISCOUNTREASON_DISCOUNTREASONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNTREASON_ENNAME() As String
		Get
			Return Me._DISCOUNTREASON_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISCOUNTREASON_ENNAME, value) = false) Then
				Me.OnDISCOUNTREASON_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_ENNAME = value
				Me.SendPropertyChanged("DISCOUNTREASON_ENNAME")
				Me.OnDISCOUNTREASON_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNTREASON_NOTE() As String
		Get
			Return Me._DISCOUNTREASON_NOTE
		End Get
		Set
			If (String.Equals(Me._DISCOUNTREASON_NOTE, value) = false) Then
				Me.OnDISCOUNTREASON_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_NOTE = value
				Me.SendPropertyChanged("DISCOUNTREASON_NOTE")
				Me.OnDISCOUNTREASON_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNTREASON_ISDISABLED", DbType:="Int")>  _
	Public Property DISCOUNTREASON_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISCOUNTREASON_ISDISABLED
		End Get
		Set
			If (Me._DISCOUNTREASON_ISDISABLED.Equals(value) = false) Then
				Me.OnDISCOUNTREASON_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNTREASON_ISDISABLED = value
				Me.SendPropertyChanged("DISCOUNTREASON_ISDISABLED")
				Me.OnDISCOUNTREASON_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCREPANCY_CUASE")>  _
Partial Public Class MAS_DISCREPANCY_CUASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCREPANCY_CUASE_ID As Integer
	
	Private _DISCREPANCY_CUASE_CODE As String
	
	Private _DISCREPANCY_CUASE_DISNAME As String
	
	Private _DISCREPANCY_CUASE_ENNAME As String
	
	Private _DISCREPANCY_CUASE_NOTE As String
	
	Private _DISCREPANCY_CUASE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DISCREPANCY_CUASE_MEDERRORGROUPKEY1 As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_IDChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_CODEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_DISNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_DISNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_NOTEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_MEDERRORGROUPKEY1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCREPANCY_CUASE_MEDERRORGROUPKEY1Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCREPANCY_CUASE_ID() As Integer
		Get
			Return Me._DISCREPANCY_CUASE_ID
		End Get
		Set
			If ((Me._DISCREPANCY_CUASE_ID = value)  _
						= false) Then
				Me.OnDISCREPANCY_CUASE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_ID = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_ID")
				Me.OnDISCREPANCY_CUASE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISCREPANCY_CUASE_CODE() As String
		Get
			Return Me._DISCREPANCY_CUASE_CODE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_CUASE_CODE, value) = false) Then
				Me.OnDISCREPANCY_CUASE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_CODE = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_CODE")
				Me.OnDISCREPANCY_CUASE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_DISNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_CUASE_DISNAME() As String
		Get
			Return Me._DISCREPANCY_CUASE_DISNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_CUASE_DISNAME, value) = false) Then
				Me.OnDISCREPANCY_CUASE_DISNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_DISNAME = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_DISNAME")
				Me.OnDISCREPANCY_CUASE_DISNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_CUASE_ENNAME() As String
		Get
			Return Me._DISCREPANCY_CUASE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_CUASE_ENNAME, value) = false) Then
				Me.OnDISCREPANCY_CUASE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_ENNAME = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_ENNAME")
				Me.OnDISCREPANCY_CUASE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_CUASE_NOTE() As String
		Get
			Return Me._DISCREPANCY_CUASE_NOTE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_CUASE_NOTE, value) = false) Then
				Me.OnDISCREPANCY_CUASE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_NOTE = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_NOTE")
				Me.OnDISCREPANCY_CUASE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_ISDISABLED", DbType:="Int")>  _
	Public Property DISCREPANCY_CUASE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISCREPANCY_CUASE_ISDISABLED
		End Get
		Set
			If (Me._DISCREPANCY_CUASE_ISDISABLED.Equals(value) = false) Then
				Me.OnDISCREPANCY_CUASE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_ISDISABLED = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_ISDISABLED")
				Me.OnDISCREPANCY_CUASE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CUASE_MEDERRORGROUPKEY1", DbType:="Int")>  _
	Public Property DISCREPANCY_CUASE_MEDERRORGROUPKEY1() As System.Nullable(Of Integer)
		Get
			Return Me._DISCREPANCY_CUASE_MEDERRORGROUPKEY1
		End Get
		Set
			If (Me._DISCREPANCY_CUASE_MEDERRORGROUPKEY1.Equals(value) = false) Then
				Me.OnDISCREPANCY_CUASE_MEDERRORGROUPKEY1Changing(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CUASE_MEDERRORGROUPKEY1 = value
				Me.SendPropertyChanged("DISCREPANCY_CUASE_MEDERRORGROUPKEY1")
				Me.OnDISCREPANCY_CUASE_MEDERRORGROUPKEY1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCREPANCY_GROUP")>  _
Partial Public Class MAS_DISCREPANCY_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCREPANCY_GROUP_ID As Integer
	
	Private _DISCREPANCY_GROUP_CODE As String
	
	Private _DISCREPANCY_GROUP_DISNAME As String
	
	Private _DISCREPANCY_GROUP_ENNAME As String
	
	Private _DISCREPANCY_GROUP_NOTE As String
	
	Private _DISCREPANCY_GROUP_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_IDChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_CODEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_DISNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_DISNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_NOTEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCREPANCY_GROUP_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCREPANCY_GROUP_ID() As Integer
		Get
			Return Me._DISCREPANCY_GROUP_ID
		End Get
		Set
			If ((Me._DISCREPANCY_GROUP_ID = value)  _
						= false) Then
				Me.OnDISCREPANCY_GROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_ID = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_ID")
				Me.OnDISCREPANCY_GROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISCREPANCY_GROUP_CODE() As String
		Get
			Return Me._DISCREPANCY_GROUP_CODE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_GROUP_CODE, value) = false) Then
				Me.OnDISCREPANCY_GROUP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_CODE = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_CODE")
				Me.OnDISCREPANCY_GROUP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_DISNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_GROUP_DISNAME() As String
		Get
			Return Me._DISCREPANCY_GROUP_DISNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_GROUP_DISNAME, value) = false) Then
				Me.OnDISCREPANCY_GROUP_DISNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_DISNAME = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_DISNAME")
				Me.OnDISCREPANCY_GROUP_DISNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_GROUP_ENNAME() As String
		Get
			Return Me._DISCREPANCY_GROUP_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_GROUP_ENNAME, value) = false) Then
				Me.OnDISCREPANCY_GROUP_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_ENNAME = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_ENNAME")
				Me.OnDISCREPANCY_GROUP_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_GROUP_NOTE() As String
		Get
			Return Me._DISCREPANCY_GROUP_NOTE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_GROUP_NOTE, value) = false) Then
				Me.OnDISCREPANCY_GROUP_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_NOTE = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_NOTE")
				Me.OnDISCREPANCY_GROUP_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_GROUP_ISDISABLED", DbType:="Int")>  _
	Public Property DISCREPANCY_GROUP_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISCREPANCY_GROUP_ISDISABLED
		End Get
		Set
			If (Me._DISCREPANCY_GROUP_ISDISABLED.Equals(value) = false) Then
				Me.OnDISCREPANCY_GROUP_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_GROUP_ISDISABLED = value
				Me.SendPropertyChanged("DISCREPANCY_GROUP_ISDISABLED")
				Me.OnDISCREPANCY_GROUP_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISCREPANCY_TYPE")>  _
Partial Public Class MAS_DISCREPANCY_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISCREPANCY_ID As Integer
	
	Private _DISCREPANCY_CODE As String
	
	Private _DISCREPANCY_DISNAME As String
	
	Private _DISCREPANCY_ENNAME As String
	
	Private _DISCREPANCY_NOTE As String
	
	Private _DISCREPANCY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISCREPANCY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISCREPANCY_IDChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_CODEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_DISNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_DISNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISCREPANCY_NOTEChanged()
    End Sub
    Partial Private Sub OnDISCREPANCY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISCREPANCY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISCREPANCY_ID() As Integer
		Get
			Return Me._DISCREPANCY_ID
		End Get
		Set
			If ((Me._DISCREPANCY_ID = value)  _
						= false) Then
				Me.OnDISCREPANCY_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_ID = value
				Me.SendPropertyChanged("DISCREPANCY_ID")
				Me.OnDISCREPANCY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISCREPANCY_CODE() As String
		Get
			Return Me._DISCREPANCY_CODE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_CODE, value) = false) Then
				Me.OnDISCREPANCY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_CODE = value
				Me.SendPropertyChanged("DISCREPANCY_CODE")
				Me.OnDISCREPANCY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_DISNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_DISNAME() As String
		Get
			Return Me._DISCREPANCY_DISNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_DISNAME, value) = false) Then
				Me.OnDISCREPANCY_DISNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_DISNAME = value
				Me.SendPropertyChanged("DISCREPANCY_DISNAME")
				Me.OnDISCREPANCY_DISNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_ENNAME() As String
		Get
			Return Me._DISCREPANCY_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_ENNAME, value) = false) Then
				Me.OnDISCREPANCY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_ENNAME = value
				Me.SendPropertyChanged("DISCREPANCY_ENNAME")
				Me.OnDISCREPANCY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISCREPANCY_NOTE() As String
		Get
			Return Me._DISCREPANCY_NOTE
		End Get
		Set
			If (String.Equals(Me._DISCREPANCY_NOTE, value) = false) Then
				Me.OnDISCREPANCY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_NOTE = value
				Me.SendPropertyChanged("DISCREPANCY_NOTE")
				Me.OnDISCREPANCY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCREPANCY_ISDISABLED", DbType:="Int")>  _
	Public Property DISCREPANCY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISCREPANCY_ISDISABLED
		End Get
		Set
			If (Me._DISCREPANCY_ISDISABLED.Equals(value) = false) Then
				Me.OnDISCREPANCY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISCREPANCY_ISDISABLED = value
				Me.SendPropertyChanged("DISCREPANCY_ISDISABLED")
				Me.OnDISCREPANCY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISEASE")>  _
Partial Public Class MAS_DISEASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISEASE_ID As Integer
	
	Private _DISEASE_CODE As String
	
	Private _DISEASE_DISEASENAME As String
	
	Private _DISEASE_ENNAME As String
	
	Private _DISEASE_NOTE As String
	
	Private _DISEASE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DISEASE_ISINFECTIOUS As System.Nullable(Of Integer)
	
	Private _DISEASE_ISDANGEROUS As System.Nullable(Of Integer)
	
	Private _DISEASE_INFORMREQUIRED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISEASE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISEASE_IDChanged()
    End Sub
    Partial Private Sub OnDISEASE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISEASE_CODEChanged()
    End Sub
    Partial Private Sub OnDISEASE_DISEASENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISEASE_DISEASENAMEChanged()
    End Sub
    Partial Private Sub OnDISEASE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISEASE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISEASE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISEASE_NOTEChanged()
    End Sub
    Partial Private Sub OnDISEASE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISEASE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDISEASE_ISINFECTIOUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISEASE_ISINFECTIOUSChanged()
    End Sub
    Partial Private Sub OnDISEASE_ISDANGEROUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISEASE_ISDANGEROUSChanged()
    End Sub
    Partial Private Sub OnDISEASE_INFORMREQUIREDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISEASE_INFORMREQUIREDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISEASE_ID() As Integer
		Get
			Return Me._DISEASE_ID
		End Get
		Set
			If ((Me._DISEASE_ID = value)  _
						= false) Then
				Me.OnDISEASE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_ID = value
				Me.SendPropertyChanged("DISEASE_ID")
				Me.OnDISEASE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_CODE", DbType:="NVarChar(50)")>  _
	Public Property DISEASE_CODE() As String
		Get
			Return Me._DISEASE_CODE
		End Get
		Set
			If (String.Equals(Me._DISEASE_CODE, value) = false) Then
				Me.OnDISEASE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_CODE = value
				Me.SendPropertyChanged("DISEASE_CODE")
				Me.OnDISEASE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_DISEASENAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISEASE_DISEASENAME() As String
		Get
			Return Me._DISEASE_DISEASENAME
		End Get
		Set
			If (String.Equals(Me._DISEASE_DISEASENAME, value) = false) Then
				Me.OnDISEASE_DISEASENAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_DISEASENAME = value
				Me.SendPropertyChanged("DISEASE_DISEASENAME")
				Me.OnDISEASE_DISEASENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISEASE_ENNAME() As String
		Get
			Return Me._DISEASE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISEASE_ENNAME, value) = false) Then
				Me.OnDISEASE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_ENNAME = value
				Me.SendPropertyChanged("DISEASE_ENNAME")
				Me.OnDISEASE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISEASE_NOTE() As String
		Get
			Return Me._DISEASE_NOTE
		End Get
		Set
			If (String.Equals(Me._DISEASE_NOTE, value) = false) Then
				Me.OnDISEASE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_NOTE = value
				Me.SendPropertyChanged("DISEASE_NOTE")
				Me.OnDISEASE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_ISDISABLED", DbType:="Int")>  _
	Public Property DISEASE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISEASE_ISDISABLED
		End Get
		Set
			If (Me._DISEASE_ISDISABLED.Equals(value) = false) Then
				Me.OnDISEASE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_ISDISABLED = value
				Me.SendPropertyChanged("DISEASE_ISDISABLED")
				Me.OnDISEASE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_ISINFECTIOUS", DbType:="Int")>  _
	Public Property DISEASE_ISINFECTIOUS() As System.Nullable(Of Integer)
		Get
			Return Me._DISEASE_ISINFECTIOUS
		End Get
		Set
			If (Me._DISEASE_ISINFECTIOUS.Equals(value) = false) Then
				Me.OnDISEASE_ISINFECTIOUSChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_ISINFECTIOUS = value
				Me.SendPropertyChanged("DISEASE_ISINFECTIOUS")
				Me.OnDISEASE_ISINFECTIOUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_ISDANGEROUS", DbType:="Int")>  _
	Public Property DISEASE_ISDANGEROUS() As System.Nullable(Of Integer)
		Get
			Return Me._DISEASE_ISDANGEROUS
		End Get
		Set
			If (Me._DISEASE_ISDANGEROUS.Equals(value) = false) Then
				Me.OnDISEASE_ISDANGEROUSChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_ISDANGEROUS = value
				Me.SendPropertyChanged("DISEASE_ISDANGEROUS")
				Me.OnDISEASE_ISDANGEROUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISEASE_INFORMREQUIRED", DbType:="Int")>  _
	Public Property DISEASE_INFORMREQUIRED() As System.Nullable(Of Integer)
		Get
			Return Me._DISEASE_INFORMREQUIRED
		End Get
		Set
			If (Me._DISEASE_INFORMREQUIRED.Equals(value) = false) Then
				Me.OnDISEASE_INFORMREQUIREDChanging(value)
				Me.SendPropertyChanging
				Me._DISEASE_INFORMREQUIRED = value
				Me.SendPropertyChanged("DISEASE_INFORMREQUIRED")
				Me.OnDISEASE_INFORMREQUIREDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISTRIBUTE_OUT")>  _
Partial Public Class MAS_DISTRIBUTE_OUT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISTRIBUTE_OUT_ID As Integer
	
	Private _DISTRIBUTE_OUT_CODE As String
	
	Private _DISTRIBUTE_OUT_NAME As String
	
	Private _DISTRIBUTE_OUT_ENNAME As String
	
	Private _DISTRIBUTE_OUT_NOTE As String
	
	Private _DISTRIBUTE_OUT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_OUT_DISCHARGESTATUS As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_OUT_DISCHARGETYPE As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_OUT_PATIENTTYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_IDChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_CODEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_NAMEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_NOTEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_DISCHARGESTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_DISCHARGESTATUSChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_DISCHARGETYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_DISCHARGETYPEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_PATIENTTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_OUT_PATIENTTYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISTRIBUTE_OUT_ID() As Integer
		Get
			Return Me._DISTRIBUTE_OUT_ID
		End Get
		Set
			If ((Me._DISTRIBUTE_OUT_ID = value)  _
						= false) Then
				Me.OnDISTRIBUTE_OUT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_ID = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_ID")
				Me.OnDISTRIBUTE_OUT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_OUT_CODE() As String
		Get
			Return Me._DISTRIBUTE_OUT_CODE
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_OUT_CODE, value) = false) Then
				Me.OnDISTRIBUTE_OUT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_CODE = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_CODE")
				Me.OnDISTRIBUTE_OUT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_OUT_NAME() As String
		Get
			Return Me._DISTRIBUTE_OUT_NAME
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_OUT_NAME, value) = false) Then
				Me.OnDISTRIBUTE_OUT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_NAME = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_NAME")
				Me.OnDISTRIBUTE_OUT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_OUT_ENNAME() As String
		Get
			Return Me._DISTRIBUTE_OUT_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_OUT_ENNAME, value) = false) Then
				Me.OnDISTRIBUTE_OUT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_ENNAME = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_ENNAME")
				Me.OnDISTRIBUTE_OUT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_OUT_NOTE() As String
		Get
			Return Me._DISTRIBUTE_OUT_NOTE
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_OUT_NOTE, value) = false) Then
				Me.OnDISTRIBUTE_OUT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_NOTE = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_NOTE")
				Me.OnDISTRIBUTE_OUT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_ISDISABLED", DbType:="Int")>  _
	Public Property DISTRIBUTE_OUT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_OUT_ISDISABLED
		End Get
		Set
			If (Me._DISTRIBUTE_OUT_ISDISABLED.Equals(value) = false) Then
				Me.OnDISTRIBUTE_OUT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_ISDISABLED = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_ISDISABLED")
				Me.OnDISTRIBUTE_OUT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_DISCHARGESTATUS", DbType:="Int")>  _
	Public Property DISTRIBUTE_OUT_DISCHARGESTATUS() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_OUT_DISCHARGESTATUS
		End Get
		Set
			If (Me._DISTRIBUTE_OUT_DISCHARGESTATUS.Equals(value) = false) Then
				Me.OnDISTRIBUTE_OUT_DISCHARGESTATUSChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_DISCHARGESTATUS = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_DISCHARGESTATUS")
				Me.OnDISTRIBUTE_OUT_DISCHARGESTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_DISCHARGETYPE", DbType:="Int")>  _
	Public Property DISTRIBUTE_OUT_DISCHARGETYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_OUT_DISCHARGETYPE
		End Get
		Set
			If (Me._DISTRIBUTE_OUT_DISCHARGETYPE.Equals(value) = false) Then
				Me.OnDISTRIBUTE_OUT_DISCHARGETYPEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_DISCHARGETYPE = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_DISCHARGETYPE")
				Me.OnDISTRIBUTE_OUT_DISCHARGETYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_OUT_PATIENTTYPE", DbType:="Int")>  _
	Public Property DISTRIBUTE_OUT_PATIENTTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_OUT_PATIENTTYPE
		End Get
		Set
			If (Me._DISTRIBUTE_OUT_PATIENTTYPE.Equals(value) = false) Then
				Me.OnDISTRIBUTE_OUT_PATIENTTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_OUT_PATIENTTYPE = value
				Me.SendPropertyChanged("DISTRIBUTE_OUT_PATIENTTYPE")
				Me.OnDISTRIBUTE_OUT_PATIENTTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISTRIBUTE_WARD")>  _
Partial Public Class MAS_DISTRIBUTE_WARD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DISTRIBUTE_WARD_ID As Integer
	
	Private _DISTRIBUTE_WARD_CODE As String
	
	Private _DISTRIBUTE_WARD_NAME As String
	
	Private _DISTRIBUTE_WARD_ENNAME As String
	
	Private _DISTRIBUTE_WARD_NOTE As String
	
	Private _DISTRIBUTE_WARD_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_WARD_DISCHARGESTATUS As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_WARD_DISCHARGETYPE As System.Nullable(Of Integer)
	
	Private _DISTRIBUTE_WARD_PATIENTTYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_IDChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_CODEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_NAMEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_NOTEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_DISCHARGESTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_DISCHARGESTATUSChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_DISCHARGETYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_DISCHARGETYPEChanged()
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_PATIENTTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRIBUTE_WARD_PATIENTTYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DISTRIBUTE_WARD_ID() As Integer
		Get
			Return Me._DISTRIBUTE_WARD_ID
		End Get
		Set
			If ((Me._DISTRIBUTE_WARD_ID = value)  _
						= false) Then
				Me.OnDISTRIBUTE_WARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_ID = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_ID")
				Me.OnDISTRIBUTE_WARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_WARD_CODE() As String
		Get
			Return Me._DISTRIBUTE_WARD_CODE
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_WARD_CODE, value) = false) Then
				Me.OnDISTRIBUTE_WARD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_CODE = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_CODE")
				Me.OnDISTRIBUTE_WARD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_WARD_NAME() As String
		Get
			Return Me._DISTRIBUTE_WARD_NAME
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_WARD_NAME, value) = false) Then
				Me.OnDISTRIBUTE_WARD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_NAME = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_NAME")
				Me.OnDISTRIBUTE_WARD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_WARD_ENNAME() As String
		Get
			Return Me._DISTRIBUTE_WARD_ENNAME
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_WARD_ENNAME, value) = false) Then
				Me.OnDISTRIBUTE_WARD_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_ENNAME = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_ENNAME")
				Me.OnDISTRIBUTE_WARD_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRIBUTE_WARD_NOTE() As String
		Get
			Return Me._DISTRIBUTE_WARD_NOTE
		End Get
		Set
			If (String.Equals(Me._DISTRIBUTE_WARD_NOTE, value) = false) Then
				Me.OnDISTRIBUTE_WARD_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_NOTE = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_NOTE")
				Me.OnDISTRIBUTE_WARD_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_ISDISABLED", DbType:="Int")>  _
	Public Property DISTRIBUTE_WARD_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_WARD_ISDISABLED
		End Get
		Set
			If (Me._DISTRIBUTE_WARD_ISDISABLED.Equals(value) = false) Then
				Me.OnDISTRIBUTE_WARD_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_ISDISABLED = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_ISDISABLED")
				Me.OnDISTRIBUTE_WARD_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_DISCHARGESTATUS", DbType:="Int")>  _
	Public Property DISTRIBUTE_WARD_DISCHARGESTATUS() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_WARD_DISCHARGESTATUS
		End Get
		Set
			If (Me._DISTRIBUTE_WARD_DISCHARGESTATUS.Equals(value) = false) Then
				Me.OnDISTRIBUTE_WARD_DISCHARGESTATUSChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_DISCHARGESTATUS = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_DISCHARGESTATUS")
				Me.OnDISTRIBUTE_WARD_DISCHARGESTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_DISCHARGETYPE", DbType:="Int")>  _
	Public Property DISTRIBUTE_WARD_DISCHARGETYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_WARD_DISCHARGETYPE
		End Get
		Set
			If (Me._DISTRIBUTE_WARD_DISCHARGETYPE.Equals(value) = false) Then
				Me.OnDISTRIBUTE_WARD_DISCHARGETYPEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_DISCHARGETYPE = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_DISCHARGETYPE")
				Me.OnDISTRIBUTE_WARD_DISCHARGETYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRIBUTE_WARD_PATIENTTYPE", DbType:="Int")>  _
	Public Property DISTRIBUTE_WARD_PATIENTTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRIBUTE_WARD_PATIENTTYPE
		End Get
		Set
			If (Me._DISTRIBUTE_WARD_PATIENTTYPE.Equals(value) = false) Then
				Me.OnDISTRIBUTE_WARD_PATIENTTYPEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRIBUTE_WARD_PATIENTTYPE = value
				Me.SendPropertyChanged("DISTRIBUTE_WARD_PATIENTTYPE")
				Me.OnDISTRIBUTE_WARD_PATIENTTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DISTRICT")>  _
Partial Public Class MAS_DISTRICT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _DISTRICT_CODE As String
	
	Private _DISTRICT_NAME As String
	
	Private _AMPHUR_ID As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDISTRICT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICT_CODEChanged()
    End Sub
    Partial Private Sub OnDISTRICT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICT_NAMEChanged()
    End Sub
    Partial Private Sub OnAMPHUR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHUR_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT_CODE", DbType:="VarChar(MAX)")>  _
	Public Property DISTRICT_CODE() As String
		Get
			Return Me._DISTRICT_CODE
		End Get
		Set
			If (String.Equals(Me._DISTRICT_CODE, value) = false) Then
				Me.OnDISTRICT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT_CODE = value
				Me.SendPropertyChanged("DISTRICT_CODE")
				Me.OnDISTRICT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT_NAME", DbType:="VarChar(MAX)")>  _
	Public Property DISTRICT_NAME() As String
		Get
			Return Me._DISTRICT_NAME
		End Get
		Set
			If (String.Equals(Me._DISTRICT_NAME, value) = false) Then
				Me.OnDISTRICT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT_NAME = value
				Me.SendPropertyChanged("DISTRICT_NAME")
				Me.OnDISTRICT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR_ID", DbType:="Int")>  _
	Public Property AMPHUR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHUR_ID
		End Get
		Set
			If (Me._AMPHUR_ID.Equals(value) = false) Then
				Me.OnAMPHUR_IDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR_ID = value
				Me.SendPropertyChanged("AMPHUR_ID")
				Me.OnAMPHUR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Doctor")>  _
Partial Public Class MAS_Doctor
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Doctor_Name As System.Nullable(Of Integer)
	
	Private _Doctor_Name As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_Doctor_NameChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_Doctor_NameChanged()
    End Sub
    Partial Private Sub OnDoctor_NameChanging(value As String)
    End Sub
    Partial Private Sub OnDoctor_NameChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Doctor_Name", DbType:="Int")>  _
	Public Property ID_Doctor_Name() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Doctor_Name
		End Get
		Set
			If (Me._ID_Doctor_Name.Equals(value) = false) Then
				Me.OnID_Doctor_NameChanging(value)
				Me.SendPropertyChanging
				Me._ID_Doctor_Name = value
				Me.SendPropertyChanged("ID_Doctor_Name")
				Me.OnID_Doctor_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Doctor_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Doctor_Name() As String
		Get
			Return Me._Doctor_Name
		End Get
		Set
			If (String.Equals(Me._Doctor_Name, value) = false) Then
				Me.OnDoctor_NameChanging(value)
				Me.SendPropertyChanging
				Me._Doctor_Name = value
				Me.SendPropertyChanged("Doctor_Name")
				Me.OnDoctor_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Drug")>  _
Partial Public Class MAS_Drug
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Drug As System.Nullable(Of Integer)
	
	Private _Drug_Name As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_DrugChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_DrugChanged()
    End Sub
    Partial Private Sub OnDrug_NameChanging(value As String)
    End Sub
    Partial Private Sub OnDrug_NameChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Drug", DbType:="Int")>  _
	Public Property ID_Drug() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Drug
		End Get
		Set
			If (Me._ID_Drug.Equals(value) = false) Then
				Me.OnID_DrugChanging(value)
				Me.SendPropertyChanging
				Me._ID_Drug = value
				Me.SendPropertyChanged("ID_Drug")
				Me.OnID_DrugChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Drug_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Drug_Name() As String
		Get
			Return Me._Drug_Name
		End Get
		Set
			If (String.Equals(Me._Drug_Name, value) = false) Then
				Me.OnDrug_NameChanging(value)
				Me.SendPropertyChanging
				Me._Drug_Name = value
				Me.SendPropertyChanged("Drug_Name")
				Me.OnDrug_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NChar(10)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NChar(10)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_MAIN")>  _
Partial Public Class MAS_DRUG_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUG_MAIN_ID As Integer
	
	Private _DRUG_MAIN_CODE As String
	
	Private _DRUG_MAIN_DRUGNAME As String
	
	Private _DRUG_MAIN_ENNAME As String
	
	Private _DRUG_MAIN_NOTE As String
	
	Private _DRUG_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUG_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUG_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnDRUG_MAIN_DRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MAIN_DRUGNAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUG_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUG_MAIN_ID() As Integer
		Get
			Return Me._DRUG_MAIN_ID
		End Get
		Set
			If ((Me._DRUG_MAIN_ID = value)  _
						= false) Then
				Me.OnDRUG_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_ID = value
				Me.SendPropertyChanged("DRUG_MAIN_ID")
				Me.OnDRUG_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUG_MAIN_CODE() As String
		Get
			Return Me._DRUG_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._DRUG_MAIN_CODE, value) = false) Then
				Me.OnDRUG_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_CODE = value
				Me.SendPropertyChanged("DRUG_MAIN_CODE")
				Me.OnDRUG_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_DRUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MAIN_DRUGNAME() As String
		Get
			Return Me._DRUG_MAIN_DRUGNAME
		End Get
		Set
			If (String.Equals(Me._DRUG_MAIN_DRUGNAME, value) = false) Then
				Me.OnDRUG_MAIN_DRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_DRUGNAME = value
				Me.SendPropertyChanged("DRUG_MAIN_DRUGNAME")
				Me.OnDRUG_MAIN_DRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MAIN_ENNAME() As String
		Get
			Return Me._DRUG_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUG_MAIN_ENNAME, value) = false) Then
				Me.OnDRUG_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_ENNAME = value
				Me.SendPropertyChanged("DRUG_MAIN_ENNAME")
				Me.OnDRUG_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_MAIN_NOTE() As String
		Get
			Return Me._DRUG_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUG_MAIN_NOTE, value) = false) Then
				Me.OnDRUG_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_NOTE = value
				Me.SendPropertyChanged("DRUG_MAIN_NOTE")
				Me.OnDRUG_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property DRUG_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_MAIN_ISDISABLED
		End Get
		Set
			If (Me._DRUG_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUG_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("DRUG_MAIN_ISDISABLED")
				Me.OnDRUG_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_SETDETAIL")>  _
Partial Public Class MAS_DRUG_SETDETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUG_SETDETAIL_ID As Integer
	
	Private _DRUG_SETDETAIL_FK As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_MEDICINE_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_MEDICINE_NAME As String
	
	Private _DRUG_SETDETAIL_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_STATUSUSE_NAME As String
	
	Private _DRUG_SETDETAIL_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_CDGITEMTOPIC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _DRUG_SETDETAIL_NAME As String
	
	Private _DRUG_SETDETAIL_ORDERMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_ORDERMED_NAME As String
	
	Private _DRUG_SETDETAIL_METHODMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_MEDTHODMED_NAME As String
	
	Private _DRUG_SETDETAIL_UNITMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_UNITMED_NAME As String
	
	Private _DRUG_SETDETAIL_ACPCMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_ACPCMED_NAME As String
	
	Private _DRUG_SETDETAIL_VOLUMEMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_VOLUMEMED_NAME As String
	
	Private _DRUG_SETDETAIL_TIMEGETMED_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_TIMEGETMED_NAME As String
	
	Private _DRUG_SETDETAIL_NUMMED As String
	
	Private _DRUG_SETDETAIL_TOTALMED As String
	
	Private _DRUG_SETDETAIL_NUMBER_ORDERMED As String
	
	Private _DRUG_SETDETAIL_DRUGID As System.Nullable(Of Integer)
	
	Private _DRUG_SETDETAIL_DRUGNAME As String
	
	Private _DRUG_SETDETAIL_PURPORT_TAKEDRUG As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_FKChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDICINE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDICINE_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDICINE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDICINE_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ORDERMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ORDERMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ORDERMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ORDERMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_METHODMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_METHODMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDTHODMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_MEDTHODMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_UNITMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_UNITMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_UNITMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_UNITMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ACPCMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ACPCMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ACPCMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_ACPCMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_VOLUMEMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_VOLUMEMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_VOLUMEMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_VOLUMEMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TIMEGETMED_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TIMEGETMED_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TIMEGETMED_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TIMEGETMED_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NUMMEDChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NUMMEDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TOTALMEDChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_TOTALMEDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NUMBER_ORDERMEDChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_NUMBER_ORDERMEDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_DRUGIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_DRUGIDChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_DRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_DRUGNAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_PURPORT_TAKEDRUGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SETDETAIL_PURPORT_TAKEDRUGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUG_SETDETAIL_ID() As Integer
		Get
			Return Me._DRUG_SETDETAIL_ID
		End Get
		Set
			If ((Me._DRUG_SETDETAIL_ID = value)  _
						= false) Then
				Me.OnDRUG_SETDETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_ID")
				Me.OnDRUG_SETDETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_FK", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_FK() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_FK
		End Get
		Set
			If (Me._DRUG_SETDETAIL_FK.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_FKChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_FK = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_FK")
				Me.OnDRUG_SETDETAIL_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_MEDICINE_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_MEDICINE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_MEDICINE_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_MEDICINE_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_MEDICINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_MEDICINE_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_MEDICINE_ID")
				Me.OnDRUG_SETDETAIL_MEDICINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_MEDICINE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_MEDICINE_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_MEDICINE_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_MEDICINE_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_MEDICINE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_MEDICINE_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_MEDICINE_NAME")
				Me.OnDRUG_SETDETAIL_MEDICINE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_STATUSUSE_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_STATUSUSE_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_STATUSUSE_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_STATUSUSE_ID")
				Me.OnDRUG_SETDETAIL_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_STATUSUSE_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_STATUSUSE_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_STATUSUSE_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_STATUSUSE_NAME")
				Me.OnDRUG_SETDETAIL_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_CDGITEMTOPIC_ID")
				Me.OnDRUG_SETDETAIL_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_CDGITEMTOPIC_NAME")
				Me.OnDRUG_SETDETAIL_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_NAME")
				Me.OnDRUG_SETDETAIL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_ORDERMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_ORDERMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_ORDERMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_ORDERMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_ORDERMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_ORDERMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_ORDERMED_ID")
				Me.OnDRUG_SETDETAIL_ORDERMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_ORDERMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_ORDERMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_ORDERMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_ORDERMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_ORDERMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_ORDERMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_ORDERMED_NAME")
				Me.OnDRUG_SETDETAIL_ORDERMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_METHODMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_METHODMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_METHODMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_METHODMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_METHODMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_METHODMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_METHODMED_ID")
				Me.OnDRUG_SETDETAIL_METHODMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_MEDTHODMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_MEDTHODMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_MEDTHODMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_MEDTHODMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_MEDTHODMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_MEDTHODMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_MEDTHODMED_NAME")
				Me.OnDRUG_SETDETAIL_MEDTHODMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_UNITMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_UNITMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_UNITMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_UNITMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_UNITMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_UNITMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_UNITMED_ID")
				Me.OnDRUG_SETDETAIL_UNITMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_UNITMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_UNITMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_UNITMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_UNITMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_UNITMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_UNITMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_UNITMED_NAME")
				Me.OnDRUG_SETDETAIL_UNITMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_ACPCMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_ACPCMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_ACPCMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_ACPCMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_ACPCMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_ACPCMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_ACPCMED_ID")
				Me.OnDRUG_SETDETAIL_ACPCMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_ACPCMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_ACPCMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_ACPCMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_ACPCMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_ACPCMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_ACPCMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_ACPCMED_NAME")
				Me.OnDRUG_SETDETAIL_ACPCMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_VOLUMEMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_VOLUMEMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_VOLUMEMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_VOLUMEMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_VOLUMEMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_VOLUMEMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_VOLUMEMED_ID")
				Me.OnDRUG_SETDETAIL_VOLUMEMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_VOLUMEMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_VOLUMEMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_VOLUMEMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_VOLUMEMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_VOLUMEMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_VOLUMEMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_VOLUMEMED_NAME")
				Me.OnDRUG_SETDETAIL_VOLUMEMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_TIMEGETMED_ID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_TIMEGETMED_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_TIMEGETMED_ID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_TIMEGETMED_ID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_TIMEGETMED_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_TIMEGETMED_ID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_TIMEGETMED_ID")
				Me.OnDRUG_SETDETAIL_TIMEGETMED_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_TIMEGETMED_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_TIMEGETMED_NAME() As String
		Get
			Return Me._DRUG_SETDETAIL_TIMEGETMED_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_TIMEGETMED_NAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_TIMEGETMED_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_TIMEGETMED_NAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_TIMEGETMED_NAME")
				Me.OnDRUG_SETDETAIL_TIMEGETMED_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_NUMMED", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_NUMMED() As String
		Get
			Return Me._DRUG_SETDETAIL_NUMMED
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_NUMMED, value) = false) Then
				Me.OnDRUG_SETDETAIL_NUMMEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_NUMMED = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_NUMMED")
				Me.OnDRUG_SETDETAIL_NUMMEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_TOTALMED", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_TOTALMED() As String
		Get
			Return Me._DRUG_SETDETAIL_TOTALMED
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_TOTALMED, value) = false) Then
				Me.OnDRUG_SETDETAIL_TOTALMEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_TOTALMED = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_TOTALMED")
				Me.OnDRUG_SETDETAIL_TOTALMEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_NUMBER_ORDERMED", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_NUMBER_ORDERMED() As String
		Get
			Return Me._DRUG_SETDETAIL_NUMBER_ORDERMED
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_NUMBER_ORDERMED, value) = false) Then
				Me.OnDRUG_SETDETAIL_NUMBER_ORDERMEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_NUMBER_ORDERMED = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_NUMBER_ORDERMED")
				Me.OnDRUG_SETDETAIL_NUMBER_ORDERMEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_DRUGID", DbType:="Int")>  _
	Public Property DRUG_SETDETAIL_DRUGID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SETDETAIL_DRUGID
		End Get
		Set
			If (Me._DRUG_SETDETAIL_DRUGID.Equals(value) = false) Then
				Me.OnDRUG_SETDETAIL_DRUGIDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_DRUGID = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_DRUGID")
				Me.OnDRUG_SETDETAIL_DRUGIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_DRUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_DRUGNAME() As String
		Get
			Return Me._DRUG_SETDETAIL_DRUGNAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_DRUGNAME, value) = false) Then
				Me.OnDRUG_SETDETAIL_DRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_DRUGNAME = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_DRUGNAME")
				Me.OnDRUG_SETDETAIL_DRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SETDETAIL_PURPORT_TAKEDRUG", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SETDETAIL_PURPORT_TAKEDRUG() As String
		Get
			Return Me._DRUG_SETDETAIL_PURPORT_TAKEDRUG
		End Get
		Set
			If (String.Equals(Me._DRUG_SETDETAIL_PURPORT_TAKEDRUG, value) = false) Then
				Me.OnDRUG_SETDETAIL_PURPORT_TAKEDRUGChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SETDETAIL_PURPORT_TAKEDRUG = value
				Me.SendPropertyChanged("DRUG_SETDETAIL_PURPORT_TAKEDRUG")
				Me.OnDRUG_SETDETAIL_PURPORT_TAKEDRUGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_SETMAIN")>  _
Partial Public Class MAS_DRUG_SETMAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUG_SET_ID As Integer
	
	Private _DRUG_SET_NAME As String
	
	Private _DRUG_SET_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SET_CDGITEMTOPIC_NAME As String
	
	Private _DRUG_SET_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _DRUG_SET_STATUSUSE_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUG_SET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUG_SET_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SET_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SET_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SET_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SET_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SET_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SET_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_SET_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_SET_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_SET_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_SET_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUG_SET_ID() As Integer
		Get
			Return Me._DRUG_SET_ID
		End Get
		Set
			If ((Me._DRUG_SET_ID = value)  _
						= false) Then
				Me.OnDRUG_SET_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_ID = value
				Me.SendPropertyChanged("DRUG_SET_ID")
				Me.OnDRUG_SET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SET_NAME() As String
		Get
			Return Me._DRUG_SET_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SET_NAME, value) = false) Then
				Me.OnDRUG_SET_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_NAME = value
				Me.SendPropertyChanged("DRUG_SET_NAME")
				Me.OnDRUG_SET_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property DRUG_SET_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SET_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._DRUG_SET_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnDRUG_SET_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("DRUG_SET_CDGITEMTOPIC_ID")
				Me.OnDRUG_SET_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SET_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._DRUG_SET_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SET_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnDRUG_SET_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("DRUG_SET_CDGITEMTOPIC_NAME")
				Me.OnDRUG_SET_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_STATUSUSE_ID", DbType:="Int")>  _
	Public Property DRUG_SET_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_SET_STATUSUSE_ID
		End Get
		Set
			If (Me._DRUG_SET_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnDRUG_SET_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_STATUSUSE_ID = value
				Me.SendPropertyChanged("DRUG_SET_STATUSUSE_ID")
				Me.OnDRUG_SET_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SET_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SET_STATUSUSE_NAME() As String
		Get
			Return Me._DRUG_SET_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_SET_STATUSUSE_NAME, value) = false) Then
				Me.OnDRUG_SET_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_SET_STATUSUSE_NAME = value
				Me.SendPropertyChanged("DRUG_SET_STATUSUSE_NAME")
				Me.OnDRUG_SET_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_TYPE")>  _
Partial Public Class MAS_DRUG_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUG_TYPE_ID As Integer
	
	Private _DRUG_TYPE_CODE As String
	
	Private _DRUG_TYPE_NAME As String
	
	Private _DRUG_TYPE_ENNAME As String
	
	Private _DRUG_TYPE_NOTE As String
	
	Private _DRUG_TYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUG_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUG_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUG_TYPE_ID() As Integer
		Get
			Return Me._DRUG_TYPE_ID
		End Get
		Set
			If ((Me._DRUG_TYPE_ID = value)  _
						= false) Then
				Me.OnDRUG_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_ID = value
				Me.SendPropertyChanged("DRUG_TYPE_ID")
				Me.OnDRUG_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_CODE() As String
		Get
			Return Me._DRUG_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_CODE, value) = false) Then
				Me.OnDRUG_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_CODE = value
				Me.SendPropertyChanged("DRUG_TYPE_CODE")
				Me.OnDRUG_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_NAME() As String
		Get
			Return Me._DRUG_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_NAME, value) = false) Then
				Me.OnDRUG_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_NAME = value
				Me.SendPropertyChanged("DRUG_TYPE_NAME")
				Me.OnDRUG_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_ENNAME() As String
		Get
			Return Me._DRUG_TYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_ENNAME, value) = false) Then
				Me.OnDRUG_TYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_ENNAME = value
				Me.SendPropertyChanged("DRUG_TYPE_ENNAME")
				Me.OnDRUG_TYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_NOTE() As String
		Get
			Return Me._DRUG_TYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_NOTE, value) = false) Then
				Me.OnDRUG_TYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_NOTE = value
				Me.SendPropertyChanged("DRUG_TYPE_NOTE")
				Me.OnDRUG_TYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_ISDISABLED", DbType:="Int")>  _
	Public Property DRUG_TYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE_ISDISABLED
		End Get
		Set
			If (Me._DRUG_TYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUG_TYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_ISDISABLED = value
				Me.SendPropertyChanged("DRUG_TYPE_ISDISABLED")
				Me.OnDRUG_TYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_USE")>  _
Partial Public Class MAS_DRUG_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DrugUseKey As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _ENName As String
	
	Private _Note As String
	
	Private _IsDisabled As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDrugUseKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnDrugUseKeyChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnENNameChanging(value As String)
    End Sub
    Partial Private Sub OnENNameChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnIsDisabledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDisabledChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugUseKey", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property DrugUseKey() As Integer
		Get
			Return Me._DrugUseKey
		End Get
		Set
			If ((Me._DrugUseKey = value)  _
						= false) Then
				Me.OnDrugUseKeyChanging(value)
				Me.SendPropertyChanging
				Me._DrugUseKey = value
				Me.SendPropertyChanged("DrugUseKey")
				Me.OnDrugUseKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENName", DbType:="NVarChar(100)")>  _
	Public Property ENName() As String
		Get
			Return Me._ENName
		End Get
		Set
			If (String.Equals(Me._ENName, value) = false) Then
				Me.OnENNameChanging(value)
				Me.SendPropertyChanging
				Me._ENName = value
				Me.SendPropertyChanged("ENName")
				Me.OnENNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="NVarChar(MAX)")>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisabled", DbType:="Bit NOT NULL")>  _
	Public Property IsDisabled() As Boolean
		Get
			Return Me._IsDisabled
		End Get
		Set
			If ((Me._IsDisabled = value)  _
						= false) Then
				Me.OnIsDisabledChanging(value)
				Me.SendPropertyChanging
				Me._IsDisabled = value
				Me.SendPropertyChanged("IsDisabled")
				Me.OnIsDisabledChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGALLERGY")>  _
Partial Public Class MAS_DRUGALLERGY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _D_ID As Integer
	
	Private _DRUGALLERGY_CODE As System.Nullable(Of Integer)
	
	Private _DRUGALLERGY_DESCRIPTION As String
	
	Private _DRUGALLERGY_DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnD_IDChanged()
    End Sub
    Partial Private Sub OnDRUGALLERGY_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGALLERGY_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGALLERGY_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGALLERGY_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDRUGALLERGY_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGALLERGY_DETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property D_ID() As Integer
		Get
			Return Me._D_ID
		End Get
		Set
			If ((Me._D_ID = value)  _
						= false) Then
				Me.OnD_IDChanging(value)
				Me.SendPropertyChanging
				Me._D_ID = value
				Me.SendPropertyChanged("D_ID")
				Me.OnD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGALLERGY_CODE", DbType:="Int")>  _
	Public Property DRUGALLERGY_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGALLERGY_CODE
		End Get
		Set
			If (Me._DRUGALLERGY_CODE.Equals(value) = false) Then
				Me.OnDRUGALLERGY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGALLERGY_CODE = value
				Me.SendPropertyChanged("DRUGALLERGY_CODE")
				Me.OnDRUGALLERGY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGALLERGY_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DRUGALLERGY_DESCRIPTION() As String
		Get
			Return Me._DRUGALLERGY_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DRUGALLERGY_DESCRIPTION, value) = false) Then
				Me.OnDRUGALLERGY_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DRUGALLERGY_DESCRIPTION = value
				Me.SendPropertyChanged("DRUGALLERGY_DESCRIPTION")
				Me.OnDRUGALLERGY_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGALLERGY_DETAIL", DbType:="VarChar(MAX)")>  _
	Public Property DRUGALLERGY_DETAIL() As String
		Get
			Return Me._DRUGALLERGY_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUGALLERGY_DETAIL, value) = false) Then
				Me.OnDRUGALLERGY_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUGALLERGY_DETAIL = value
				Me.SendPropertyChanged("DRUGALLERGY_DETAIL")
				Me.OnDRUGALLERGY_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGGENERIC_MAIN")>  _
Partial Public Class MAS_DRUGGENERIC_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGGENERIC_MAIN_ID As Integer
	
	Private _DRUGGENERIC_MAIN_CODE As String
	
	Private _DRUGGENERIC_MAIN_DRUGGENERICNAME As String
	
	Private _DRUGGENERIC_MAIN_DRUGGROUP As System.Nullable(Of Integer)
	
	Private _DRUGGENERIC_MAIN_NOTE As String
	
	Private _DRUGGENERIC_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DRUGGENERIC_MAIN_ADRNOTE As String
	
	Private _DRUGGENERIC_MAIN_PSYCHO As String
	
	Private _DRUGGENERIC_MAIN_PSYCHOCATEGORY As String
	
	Private _DRUGGENERIC_MAIN_PSYCHONOTE As String
	
	Private _DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY As String
	
	Private _DRUGGENERIC_MAIN_ISNARCOTIC As String
	
	Private _DRUGGENERIC_MAIN_NARCOTICNOTE As String
	
	Private _DRUGGENERIC_MAIN_DRUGPREG As String
	
	Private _DRUGGENERIC_MAIN_DRUGPREGNOTE As String
	
	Private _DRUGGENERIC_MAIN_ISHAD As String
	
	Private _DRUGGENERIC_MAIN_HADNOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGGENERICNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGGENERICNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGGROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGGROUPChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ADRNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ADRNOTEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHOChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHOChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHOCATEGORYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHOCATEGORYChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHONOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_PSYCHONOTEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NARCOTICCATEGORYKEYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NARCOTICCATEGORYKEYChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISNARCOTICChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISNARCOTICChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NARCOTICNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_NARCOTICNOTEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGPREGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGPREGChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGPREGNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_DRUGPREGNOTEChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISHADChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_ISHADChanged()
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_HADNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGGENERIC_MAIN_HADNOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGGENERIC_MAIN_ID() As Integer
		Get
			Return Me._DRUGGENERIC_MAIN_ID
		End Get
		Set
			If ((Me._DRUGGENERIC_MAIN_ID = value)  _
						= false) Then
				Me.OnDRUGGENERIC_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_ID = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_ID")
				Me.OnDRUGGENERIC_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGGENERIC_MAIN_CODE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_CODE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_CODE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_CODE")
				Me.OnDRUGGENERIC_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_DRUGGENERICNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_DRUGGENERICNAME() As String
		Get
			Return Me._DRUGGENERIC_MAIN_DRUGGENERICNAME
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_DRUGGENERICNAME, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_DRUGGENERICNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_DRUGGENERICNAME = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_DRUGGENERICNAME")
				Me.OnDRUGGENERIC_MAIN_DRUGGENERICNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_DRUGGROUP", DbType:="Int")>  _
	Public Property DRUGGENERIC_MAIN_DRUGGROUP() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGGENERIC_MAIN_DRUGGROUP
		End Get
		Set
			If (Me._DRUGGENERIC_MAIN_DRUGGROUP.Equals(value) = false) Then
				Me.OnDRUGGENERIC_MAIN_DRUGGROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_DRUGGROUP = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_DRUGGROUP")
				Me.OnDRUGGENERIC_MAIN_DRUGGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_NOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_NOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_NOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_NOTE")
				Me.OnDRUGGENERIC_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGGENERIC_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGGENERIC_MAIN_ISDISABLED
		End Get
		Set
			If (Me._DRUGGENERIC_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGGENERIC_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_ISDISABLED")
				Me.OnDRUGGENERIC_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_ADRNOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_ADRNOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_ADRNOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_ADRNOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_ADRNOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_ADRNOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_ADRNOTE")
				Me.OnDRUGGENERIC_MAIN_ADRNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_PSYCHO", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_PSYCHO() As String
		Get
			Return Me._DRUGGENERIC_MAIN_PSYCHO
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_PSYCHO, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_PSYCHOChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_PSYCHO = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_PSYCHO")
				Me.OnDRUGGENERIC_MAIN_PSYCHOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_PSYCHOCATEGORY", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_PSYCHOCATEGORY() As String
		Get
			Return Me._DRUGGENERIC_MAIN_PSYCHOCATEGORY
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_PSYCHOCATEGORY, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_PSYCHOCATEGORYChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_PSYCHOCATEGORY = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_PSYCHOCATEGORY")
				Me.OnDRUGGENERIC_MAIN_PSYCHOCATEGORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_PSYCHONOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_PSYCHONOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_PSYCHONOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_PSYCHONOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_PSYCHONOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_PSYCHONOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_PSYCHONOTE")
				Me.OnDRUGGENERIC_MAIN_PSYCHONOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY() As String
		Get
			Return Me._DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_NARCOTICCATEGORYKEYChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_NARCOTICCATEGORYKEY")
				Me.OnDRUGGENERIC_MAIN_NARCOTICCATEGORYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_ISNARCOTIC", DbType:="NVarChar(50)")>  _
	Public Property DRUGGENERIC_MAIN_ISNARCOTIC() As String
		Get
			Return Me._DRUGGENERIC_MAIN_ISNARCOTIC
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_ISNARCOTIC, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_ISNARCOTICChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_ISNARCOTIC = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_ISNARCOTIC")
				Me.OnDRUGGENERIC_MAIN_ISNARCOTICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_NARCOTICNOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_NARCOTICNOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_NARCOTICNOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_NARCOTICNOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_NARCOTICNOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_NARCOTICNOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_NARCOTICNOTE")
				Me.OnDRUGGENERIC_MAIN_NARCOTICNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_DRUGPREG", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_DRUGPREG() As String
		Get
			Return Me._DRUGGENERIC_MAIN_DRUGPREG
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_DRUGPREG, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_DRUGPREGChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_DRUGPREG = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_DRUGPREG")
				Me.OnDRUGGENERIC_MAIN_DRUGPREGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_DRUGPREGNOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_DRUGPREGNOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_DRUGPREGNOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_DRUGPREGNOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_DRUGPREGNOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_DRUGPREGNOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_DRUGPREGNOTE")
				Me.OnDRUGGENERIC_MAIN_DRUGPREGNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_ISHAD", DbType:="NVarChar(50)")>  _
	Public Property DRUGGENERIC_MAIN_ISHAD() As String
		Get
			Return Me._DRUGGENERIC_MAIN_ISHAD
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_ISHAD, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_ISHADChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_ISHAD = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_ISHAD")
				Me.OnDRUGGENERIC_MAIN_ISHADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGGENERIC_MAIN_HADNOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGGENERIC_MAIN_HADNOTE() As String
		Get
			Return Me._DRUGGENERIC_MAIN_HADNOTE
		End Get
		Set
			If (String.Equals(Me._DRUGGENERIC_MAIN_HADNOTE, value) = false) Then
				Me.OnDRUGGENERIC_MAIN_HADNOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGGENERIC_MAIN_HADNOTE = value
				Me.SendPropertyChanged("DRUGGENERIC_MAIN_HADNOTE")
				Me.OnDRUGGENERIC_MAIN_HADNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGMIMS")>  _
Partial Public Class MAS_DRUGMIM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGMIMS_ID As Integer
	
	Private _DRUGMIMS_CODE As String
	
	Private _DRUGMIMS_DRUGMIMNAME As String
	
	Private _DRUGMIMS_ENNAME As String
	
	Private _DRUGMIMS_NOTE As String
	
	Private _DRUGMIMS_PARENTGROUP As System.Nullable(Of Integer)
	
	Private _DRUGMIMS_HASCHILD As System.Nullable(Of Integer)
	
	Private _DRUGMIMS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGMIMS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGMIMS_IDChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGMIMS_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_DRUGMIMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGMIMS_DRUGMIMNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGMIMS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGMIMS_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_PARENTGROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGMIMS_PARENTGROUPChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_HASCHILDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGMIMS_HASCHILDChanged()
    End Sub
    Partial Private Sub OnDRUGMIMS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGMIMS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGMIMS_ID() As Integer
		Get
			Return Me._DRUGMIMS_ID
		End Get
		Set
			If ((Me._DRUGMIMS_ID = value)  _
						= false) Then
				Me.OnDRUGMIMS_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_ID = value
				Me.SendPropertyChanged("DRUGMIMS_ID")
				Me.OnDRUGMIMS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGMIMS_CODE() As String
		Get
			Return Me._DRUGMIMS_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGMIMS_CODE, value) = false) Then
				Me.OnDRUGMIMS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_CODE = value
				Me.SendPropertyChanged("DRUGMIMS_CODE")
				Me.OnDRUGMIMS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_DRUGMIMNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGMIMS_DRUGMIMNAME() As String
		Get
			Return Me._DRUGMIMS_DRUGMIMNAME
		End Get
		Set
			If (String.Equals(Me._DRUGMIMS_DRUGMIMNAME, value) = false) Then
				Me.OnDRUGMIMS_DRUGMIMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_DRUGMIMNAME = value
				Me.SendPropertyChanged("DRUGMIMS_DRUGMIMNAME")
				Me.OnDRUGMIMS_DRUGMIMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGMIMS_ENNAME() As String
		Get
			Return Me._DRUGMIMS_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGMIMS_ENNAME, value) = false) Then
				Me.OnDRUGMIMS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_ENNAME = value
				Me.SendPropertyChanged("DRUGMIMS_ENNAME")
				Me.OnDRUGMIMS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGMIMS_NOTE() As String
		Get
			Return Me._DRUGMIMS_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGMIMS_NOTE, value) = false) Then
				Me.OnDRUGMIMS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_NOTE = value
				Me.SendPropertyChanged("DRUGMIMS_NOTE")
				Me.OnDRUGMIMS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_PARENTGROUP", DbType:="Int")>  _
	Public Property DRUGMIMS_PARENTGROUP() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGMIMS_PARENTGROUP
		End Get
		Set
			If (Me._DRUGMIMS_PARENTGROUP.Equals(value) = false) Then
				Me.OnDRUGMIMS_PARENTGROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_PARENTGROUP = value
				Me.SendPropertyChanged("DRUGMIMS_PARENTGROUP")
				Me.OnDRUGMIMS_PARENTGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_HASCHILD", DbType:="Int")>  _
	Public Property DRUGMIMS_HASCHILD() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGMIMS_HASCHILD
		End Get
		Set
			If (Me._DRUGMIMS_HASCHILD.Equals(value) = false) Then
				Me.OnDRUGMIMS_HASCHILDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_HASCHILD = value
				Me.SendPropertyChanged("DRUGMIMS_HASCHILD")
				Me.OnDRUGMIMS_HASCHILDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGMIMS_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGMIMS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGMIMS_ISDISABLED
		End Get
		Set
			If (Me._DRUGMIMS_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGMIMS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGMIMS_ISDISABLED = value
				Me.SendPropertyChanged("DRUGMIMS_ISDISABLED")
				Me.OnDRUGMIMS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGPREG")>  _
Partial Public Class MAS_DRUGPREG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGPREG_ID As Integer
	
	Private _DRUGPREG_CODE As String
	
	Private _DRUGPREG_DRUGPREGNAME As String
	
	Private _DRUGPREG_ENNAME As String
	
	Private _DRUGPREG_NOTE As String
	
	Private _DRUGPREG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DRUGPREG_ISALERT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGPREG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGPREG_IDChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGPREG_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_DRUGPREGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGPREG_DRUGPREGNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGPREG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGPREG_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGPREG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDRUGPREG_ISALERTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGPREG_ISALERTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGPREG_ID() As Integer
		Get
			Return Me._DRUGPREG_ID
		End Get
		Set
			If ((Me._DRUGPREG_ID = value)  _
						= false) Then
				Me.OnDRUGPREG_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_ID = value
				Me.SendPropertyChanged("DRUGPREG_ID")
				Me.OnDRUGPREG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGPREG_CODE() As String
		Get
			Return Me._DRUGPREG_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGPREG_CODE, value) = false) Then
				Me.OnDRUGPREG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_CODE = value
				Me.SendPropertyChanged("DRUGPREG_CODE")
				Me.OnDRUGPREG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_DRUGPREGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGPREG_DRUGPREGNAME() As String
		Get
			Return Me._DRUGPREG_DRUGPREGNAME
		End Get
		Set
			If (String.Equals(Me._DRUGPREG_DRUGPREGNAME, value) = false) Then
				Me.OnDRUGPREG_DRUGPREGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_DRUGPREGNAME = value
				Me.SendPropertyChanged("DRUGPREG_DRUGPREGNAME")
				Me.OnDRUGPREG_DRUGPREGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGPREG_ENNAME() As String
		Get
			Return Me._DRUGPREG_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGPREG_ENNAME, value) = false) Then
				Me.OnDRUGPREG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_ENNAME = value
				Me.SendPropertyChanged("DRUGPREG_ENNAME")
				Me.OnDRUGPREG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGPREG_NOTE() As String
		Get
			Return Me._DRUGPREG_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGPREG_NOTE, value) = false) Then
				Me.OnDRUGPREG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_NOTE = value
				Me.SendPropertyChanged("DRUGPREG_NOTE")
				Me.OnDRUGPREG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGPREG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGPREG_ISDISABLED
		End Get
		Set
			If (Me._DRUGPREG_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGPREG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_ISDISABLED = value
				Me.SendPropertyChanged("DRUGPREG_ISDISABLED")
				Me.OnDRUGPREG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGPREG_ISALERT", DbType:="Int")>  _
	Public Property DRUGPREG_ISALERT() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGPREG_ISALERT
		End Get
		Set
			If (Me._DRUGPREG_ISALERT.Equals(value) = false) Then
				Me.OnDRUGPREG_ISALERTChanging(value)
				Me.SendPropertyChanging
				Me._DRUGPREG_ISALERT = value
				Me.SendPropertyChanged("DRUGPREG_ISALERT")
				Me.OnDRUGPREG_ISALERTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGQTY")>  _
Partial Public Class MAS_DRUGQTY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGQTY_ID As Integer
	
	Private _DRUGQTY_CODE As String
	
	Private _DRUGQTY_DRUGQTYNAME As String
	
	Private _DRUGQTY_ENNAME As String
	
	Private _DRUGQTY_NOTE As String
	
	Private _DRUGQTY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DRUGQTY_QTY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGQTY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGQTY_IDChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGQTY_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_DRUGQTYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGQTY_DRUGQTYNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGQTY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGQTY_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGQTY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDRUGQTY_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGQTY_QTYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGQTY_ID() As Integer
		Get
			Return Me._DRUGQTY_ID
		End Get
		Set
			If ((Me._DRUGQTY_ID = value)  _
						= false) Then
				Me.OnDRUGQTY_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_ID = value
				Me.SendPropertyChanged("DRUGQTY_ID")
				Me.OnDRUGQTY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGQTY_CODE() As String
		Get
			Return Me._DRUGQTY_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGQTY_CODE, value) = false) Then
				Me.OnDRUGQTY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_CODE = value
				Me.SendPropertyChanged("DRUGQTY_CODE")
				Me.OnDRUGQTY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_DRUGQTYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGQTY_DRUGQTYNAME() As String
		Get
			Return Me._DRUGQTY_DRUGQTYNAME
		End Get
		Set
			If (String.Equals(Me._DRUGQTY_DRUGQTYNAME, value) = false) Then
				Me.OnDRUGQTY_DRUGQTYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_DRUGQTYNAME = value
				Me.SendPropertyChanged("DRUGQTY_DRUGQTYNAME")
				Me.OnDRUGQTY_DRUGQTYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGQTY_ENNAME() As String
		Get
			Return Me._DRUGQTY_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGQTY_ENNAME, value) = false) Then
				Me.OnDRUGQTY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_ENNAME = value
				Me.SendPropertyChanged("DRUGQTY_ENNAME")
				Me.OnDRUGQTY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGQTY_NOTE() As String
		Get
			Return Me._DRUGQTY_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGQTY_NOTE, value) = false) Then
				Me.OnDRUGQTY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_NOTE = value
				Me.SendPropertyChanged("DRUGQTY_NOTE")
				Me.OnDRUGQTY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGQTY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGQTY_ISDISABLED
		End Get
		Set
			If (Me._DRUGQTY_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGQTY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_ISDISABLED = value
				Me.SendPropertyChanged("DRUGQTY_ISDISABLED")
				Me.OnDRUGQTY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGQTY_QTY", DbType:="NVarChar(50)")>  _
	Public Property DRUGQTY_QTY() As String
		Get
			Return Me._DRUGQTY_QTY
		End Get
		Set
			If (String.Equals(Me._DRUGQTY_QTY, value) = false) Then
				Me.OnDRUGQTY_QTYChanging(value)
				Me.SendPropertyChanging
				Me._DRUGQTY_QTY = value
				Me.SendPropertyChanged("DRUGQTY_QTY")
				Me.OnDRUGQTY_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGSTRENGTH")>  _
Partial Public Class MAS_DRUGSTRENGTH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGSTRENGTH_ID As Integer
	
	Private _DRUGSTRENGTH_CODE As String
	
	Private _DRUGSTRENGTH_DRUGSTRENGTH As String
	
	Private _DRUGSTRENGTH_ENNAME As String
	
	Private _DRUGSTRENGTH_NOTE As String
	
	Private _DRUGSTRENGTH_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_IDChanged()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_DRUGSTRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_DRUGSTRENGTHChanged()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGSTRENGTH_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGSTRENGTH_ID() As Integer
		Get
			Return Me._DRUGSTRENGTH_ID
		End Get
		Set
			If ((Me._DRUGSTRENGTH_ID = value)  _
						= false) Then
				Me.OnDRUGSTRENGTH_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_ID = value
				Me.SendPropertyChanged("DRUGSTRENGTH_ID")
				Me.OnDRUGSTRENGTH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGSTRENGTH_CODE() As String
		Get
			Return Me._DRUGSTRENGTH_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGSTRENGTH_CODE, value) = false) Then
				Me.OnDRUGSTRENGTH_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_CODE = value
				Me.SendPropertyChanged("DRUGSTRENGTH_CODE")
				Me.OnDRUGSTRENGTH_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_DRUGSTRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGSTRENGTH_DRUGSTRENGTH() As String
		Get
			Return Me._DRUGSTRENGTH_DRUGSTRENGTH
		End Get
		Set
			If (String.Equals(Me._DRUGSTRENGTH_DRUGSTRENGTH, value) = false) Then
				Me.OnDRUGSTRENGTH_DRUGSTRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_DRUGSTRENGTH = value
				Me.SendPropertyChanged("DRUGSTRENGTH_DRUGSTRENGTH")
				Me.OnDRUGSTRENGTH_DRUGSTRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGSTRENGTH_ENNAME() As String
		Get
			Return Me._DRUGSTRENGTH_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGSTRENGTH_ENNAME, value) = false) Then
				Me.OnDRUGSTRENGTH_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_ENNAME = value
				Me.SendPropertyChanged("DRUGSTRENGTH_ENNAME")
				Me.OnDRUGSTRENGTH_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGSTRENGTH_NOTE() As String
		Get
			Return Me._DRUGSTRENGTH_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGSTRENGTH_NOTE, value) = false) Then
				Me.OnDRUGSTRENGTH_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_NOTE = value
				Me.SendPropertyChanged("DRUGSTRENGTH_NOTE")
				Me.OnDRUGSTRENGTH_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGSTRENGTH_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGSTRENGTH_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGSTRENGTH_ISDISABLED
		End Get
		Set
			If (Me._DRUGSTRENGTH_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGSTRENGTH_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGSTRENGTH_ISDISABLED = value
				Me.SendPropertyChanged("DRUGSTRENGTH_ISDISABLED")
				Me.OnDRUGSTRENGTH_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGTHAICATEGORY")>  _
Partial Public Class MAS_DRUGTHAICATEGORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGTHAICATEGORY_ID As Integer
	
	Private _DRUGTHAICATEGORY_CODE As String
	
	Private _DRUGTHAICATEGORY_DRUGCATEGORYNAME As String
	
	Private _DRUGTHAICATEGORY_ENNAME As String
	
	Private _DRUGTHAICATEGORY_NOTE As String
	
	Private _DRUGTHAICATEGORY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_IDChanged()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_DRUGCATEGORYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_DRUGCATEGORYNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGTHAICATEGORY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGTHAICATEGORY_ID() As Integer
		Get
			Return Me._DRUGTHAICATEGORY_ID
		End Get
		Set
			If ((Me._DRUGTHAICATEGORY_ID = value)  _
						= false) Then
				Me.OnDRUGTHAICATEGORY_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_ID = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_ID")
				Me.OnDRUGTHAICATEGORY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGTHAICATEGORY_CODE() As String
		Get
			Return Me._DRUGTHAICATEGORY_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGTHAICATEGORY_CODE, value) = false) Then
				Me.OnDRUGTHAICATEGORY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_CODE = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_CODE")
				Me.OnDRUGTHAICATEGORY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_DRUGCATEGORYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTHAICATEGORY_DRUGCATEGORYNAME() As String
		Get
			Return Me._DRUGTHAICATEGORY_DRUGCATEGORYNAME
		End Get
		Set
			If (String.Equals(Me._DRUGTHAICATEGORY_DRUGCATEGORYNAME, value) = false) Then
				Me.OnDRUGTHAICATEGORY_DRUGCATEGORYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_DRUGCATEGORYNAME = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_DRUGCATEGORYNAME")
				Me.OnDRUGTHAICATEGORY_DRUGCATEGORYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTHAICATEGORY_ENNAME() As String
		Get
			Return Me._DRUGTHAICATEGORY_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGTHAICATEGORY_ENNAME, value) = false) Then
				Me.OnDRUGTHAICATEGORY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_ENNAME = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_ENNAME")
				Me.OnDRUGTHAICATEGORY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTHAICATEGORY_NOTE() As String
		Get
			Return Me._DRUGTHAICATEGORY_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGTHAICATEGORY_NOTE, value) = false) Then
				Me.OnDRUGTHAICATEGORY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_NOTE = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_NOTE")
				Me.OnDRUGTHAICATEGORY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTHAICATEGORY_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGTHAICATEGORY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGTHAICATEGORY_ISDISABLED
		End Get
		Set
			If (Me._DRUGTHAICATEGORY_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGTHAICATEGORY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTHAICATEGORY_ISDISABLED = value
				Me.SendPropertyChanged("DRUGTHAICATEGORY_ISDISABLED")
				Me.OnDRUGTHAICATEGORY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUGTIME")>  _
Partial Public Class MAS_DRUGTIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DRUGTIME_ID As Integer
	
	Private _DRUGTIME_CODE As String
	
	Private _DRUGTIME_DRUGTIMENAME As String
	
	Private _DRUGTIME_ENNAME As String
	
	Private _DRUGTIME_NOTE As String
	
	Private _DRUGTIME_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DRUGTIME_TIMEPERDAY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDRUGTIME_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDRUGTIME_IDChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTIME_CODEChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_DRUGTIMENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTIME_DRUGTIMENAMEChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTIME_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTIME_NOTEChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUGTIME_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDRUGTIME_TIMEPERDAYChanging(value As String)
    End Sub
    Partial Private Sub OnDRUGTIME_TIMEPERDAYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DRUGTIME_ID() As Integer
		Get
			Return Me._DRUGTIME_ID
		End Get
		Set
			If ((Me._DRUGTIME_ID = value)  _
						= false) Then
				Me.OnDRUGTIME_IDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_ID = value
				Me.SendPropertyChanged("DRUGTIME_ID")
				Me.OnDRUGTIME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_CODE", DbType:="NVarChar(50)")>  _
	Public Property DRUGTIME_CODE() As String
		Get
			Return Me._DRUGTIME_CODE
		End Get
		Set
			If (String.Equals(Me._DRUGTIME_CODE, value) = false) Then
				Me.OnDRUGTIME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_CODE = value
				Me.SendPropertyChanged("DRUGTIME_CODE")
				Me.OnDRUGTIME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_DRUGTIMENAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTIME_DRUGTIMENAME() As String
		Get
			Return Me._DRUGTIME_DRUGTIMENAME
		End Get
		Set
			If (String.Equals(Me._DRUGTIME_DRUGTIMENAME, value) = false) Then
				Me.OnDRUGTIME_DRUGTIMENAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_DRUGTIMENAME = value
				Me.SendPropertyChanged("DRUGTIME_DRUGTIMENAME")
				Me.OnDRUGTIME_DRUGTIMENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTIME_ENNAME() As String
		Get
			Return Me._DRUGTIME_ENNAME
		End Get
		Set
			If (String.Equals(Me._DRUGTIME_ENNAME, value) = false) Then
				Me.OnDRUGTIME_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_ENNAME = value
				Me.SendPropertyChanged("DRUGTIME_ENNAME")
				Me.OnDRUGTIME_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUGTIME_NOTE() As String
		Get
			Return Me._DRUGTIME_NOTE
		End Get
		Set
			If (String.Equals(Me._DRUGTIME_NOTE, value) = false) Then
				Me.OnDRUGTIME_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_NOTE = value
				Me.SendPropertyChanged("DRUGTIME_NOTE")
				Me.OnDRUGTIME_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_ISDISABLED", DbType:="Int")>  _
	Public Property DRUGTIME_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DRUGTIME_ISDISABLED
		End Get
		Set
			If (Me._DRUGTIME_ISDISABLED.Equals(value) = false) Then
				Me.OnDRUGTIME_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_ISDISABLED = value
				Me.SendPropertyChanged("DRUGTIME_ISDISABLED")
				Me.OnDRUGTIME_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUGTIME_TIMEPERDAY", DbType:="NVarChar(50)")>  _
	Public Property DRUGTIME_TIMEPERDAY() As String
		Get
			Return Me._DRUGTIME_TIMEPERDAY
		End Get
		Set
			If (String.Equals(Me._DRUGTIME_TIMEPERDAY, value) = false) Then
				Me.OnDRUGTIME_TIMEPERDAYChanging(value)
				Me.SendPropertyChanging
				Me._DRUGTIME_TIMEPERDAY = value
				Me.SendPropertyChanged("DRUGTIME_TIMEPERDAY")
				Me.OnDRUGTIME_TIMEPERDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DURABILITY")>  _
Partial Public Class MAS_DURABILITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DURABILITY_ID As Integer
	
	Private _DURABILITY_CODE As System.Nullable(Of Integer)
	
	Private _DURABILITY_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDURABILITY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDURABILITY_IDChanged()
    End Sub
    Partial Private Sub OnDURABILITY_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURABILITY_CODEChanged()
    End Sub
    Partial Private Sub OnDURABILITY_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDURABILITY_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURABILITY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DURABILITY_ID() As Integer
		Get
			Return Me._DURABILITY_ID
		End Get
		Set
			If ((Me._DURABILITY_ID = value)  _
						= false) Then
				Me.OnDURABILITY_IDChanging(value)
				Me.SendPropertyChanging
				Me._DURABILITY_ID = value
				Me.SendPropertyChanged("DURABILITY_ID")
				Me.OnDURABILITY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURABILITY_CODE", DbType:="Int")>  _
	Public Property DURABILITY_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._DURABILITY_CODE
		End Get
		Set
			If (Me._DURABILITY_CODE.Equals(value) = false) Then
				Me.OnDURABILITY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DURABILITY_CODE = value
				Me.SendPropertyChanged("DURABILITY_CODE")
				Me.OnDURABILITY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURABILITY_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DURABILITY_DESCRIPTION() As String
		Get
			Return Me._DURABILITY_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DURABILITY_DESCRIPTION, value) = false) Then
				Me.OnDURABILITY_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DURABILITY_DESCRIPTION = value
				Me.SendPropertyChanged("DURABILITY_DESCRIPTION")
				Me.OnDURABILITY_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DURATION_MAIN")>  _
Partial Public Class MAS_DURATION_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DURATION_MAIN_ID As Integer
	
	Private _DURATION_MAIN_SHIFITKEY As System.Nullable(Of Integer)
	
	Private _DURATION_MAIN_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _DURATION_MAIN_CODE As String
	
	Private _DURATION_MAIN_DURATIONNAME As String
	
	Private _DURATION_MAIN_FROMTIME As String
	
	Private _DURATION_MAIN_TOTIME As String
	
	Private _DURATION_MAIN_TONEXTDAY As String
	
	Private _DURATION_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DURATION_MAIN_SHIFITTYPEKEY As System.Nullable(Of Integer)
	
	Private _DURATION_MAIN_ENNAME As String
	
	Private _DURATION_MAIN_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDURATION_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDURATION_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_SHIFITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURATION_MAIN_SHIFITKEYChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURATION_MAIN_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_DURATIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_DURATIONNAMEChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_FROMTIMEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_FROMTIMEChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_TOTIMEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_TOTIMEChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_TONEXTDAYChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_TONEXTDAYChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURATION_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_SHIFITTYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURATION_MAIN_SHIFITTYPEKEYChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnDURATION_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnDURATION_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DURATION_MAIN_ID() As Integer
		Get
			Return Me._DURATION_MAIN_ID
		End Get
		Set
			If ((Me._DURATION_MAIN_ID = value)  _
						= false) Then
				Me.OnDURATION_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_ID = value
				Me.SendPropertyChanged("DURATION_MAIN_ID")
				Me.OnDURATION_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_SHIFITKEY", DbType:="Int")>  _
	Public Property DURATION_MAIN_SHIFITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._DURATION_MAIN_SHIFITKEY
		End Get
		Set
			If (Me._DURATION_MAIN_SHIFITKEY.Equals(value) = false) Then
				Me.OnDURATION_MAIN_SHIFITKEYChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_SHIFITKEY = value
				Me.SendPropertyChanged("DURATION_MAIN_SHIFITKEY")
				Me.OnDURATION_MAIN_SHIFITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property DURATION_MAIN_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._DURATION_MAIN_SERVICEUNITKEY
		End Get
		Set
			If (Me._DURATION_MAIN_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnDURATION_MAIN_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_SERVICEUNITKEY = value
				Me.SendPropertyChanged("DURATION_MAIN_SERVICEUNITKEY")
				Me.OnDURATION_MAIN_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property DURATION_MAIN_CODE() As String
		Get
			Return Me._DURATION_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_CODE, value) = false) Then
				Me.OnDURATION_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_CODE = value
				Me.SendPropertyChanged("DURATION_MAIN_CODE")
				Me.OnDURATION_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_DURATIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DURATION_MAIN_DURATIONNAME() As String
		Get
			Return Me._DURATION_MAIN_DURATIONNAME
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_DURATIONNAME, value) = false) Then
				Me.OnDURATION_MAIN_DURATIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_DURATIONNAME = value
				Me.SendPropertyChanged("DURATION_MAIN_DURATIONNAME")
				Me.OnDURATION_MAIN_DURATIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_FROMTIME", DbType:="NVarChar(50)")>  _
	Public Property DURATION_MAIN_FROMTIME() As String
		Get
			Return Me._DURATION_MAIN_FROMTIME
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_FROMTIME, value) = false) Then
				Me.OnDURATION_MAIN_FROMTIMEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_FROMTIME = value
				Me.SendPropertyChanged("DURATION_MAIN_FROMTIME")
				Me.OnDURATION_MAIN_FROMTIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_TOTIME", DbType:="NVarChar(50)")>  _
	Public Property DURATION_MAIN_TOTIME() As String
		Get
			Return Me._DURATION_MAIN_TOTIME
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_TOTIME, value) = false) Then
				Me.OnDURATION_MAIN_TOTIMEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_TOTIME = value
				Me.SendPropertyChanged("DURATION_MAIN_TOTIME")
				Me.OnDURATION_MAIN_TOTIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_TONEXTDAY", DbType:="NVarChar(50)")>  _
	Public Property DURATION_MAIN_TONEXTDAY() As String
		Get
			Return Me._DURATION_MAIN_TONEXTDAY
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_TONEXTDAY, value) = false) Then
				Me.OnDURATION_MAIN_TONEXTDAYChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_TONEXTDAY = value
				Me.SendPropertyChanged("DURATION_MAIN_TONEXTDAY")
				Me.OnDURATION_MAIN_TONEXTDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property DURATION_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._DURATION_MAIN_ISDISABLED
		End Get
		Set
			If (Me._DURATION_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnDURATION_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("DURATION_MAIN_ISDISABLED")
				Me.OnDURATION_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_SHIFITTYPEKEY", DbType:="Int")>  _
	Public Property DURATION_MAIN_SHIFITTYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._DURATION_MAIN_SHIFITTYPEKEY
		End Get
		Set
			If (Me._DURATION_MAIN_SHIFITTYPEKEY.Equals(value) = false) Then
				Me.OnDURATION_MAIN_SHIFITTYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_SHIFITTYPEKEY = value
				Me.SendPropertyChanged("DURATION_MAIN_SHIFITTYPEKEY")
				Me.OnDURATION_MAIN_SHIFITTYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property DURATION_MAIN_ENNAME() As String
		Get
			Return Me._DURATION_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_ENNAME, value) = false) Then
				Me.OnDURATION_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_ENNAME = value
				Me.SendPropertyChanged("DURATION_MAIN_ENNAME")
				Me.OnDURATION_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property DURATION_MAIN_NOTE() As String
		Get
			Return Me._DURATION_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._DURATION_MAIN_NOTE, value) = false) Then
				Me.OnDURATION_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_MAIN_NOTE = value
				Me.SendPropertyChanged("DURATION_MAIN_NOTE")
				Me.OnDURATION_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EDUCATION")>  _
Partial Public Class MAS_EDUCATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EDUCATION_ID As Integer
	
	Private _EDUCATION_CODE As System.Nullable(Of Integer)
	
	Private _EDUCATION_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEDUCATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEDUCATION_IDChanged()
    End Sub
    Partial Private Sub OnEDUCATION_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDUCATION_CODEChanged()
    End Sub
    Partial Private Sub OnEDUCATION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDUCATION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EDUCATION_ID() As Integer
		Get
			Return Me._EDUCATION_ID
		End Get
		Set
			If ((Me._EDUCATION_ID = value)  _
						= false) Then
				Me.OnEDUCATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATION_ID = value
				Me.SendPropertyChanged("EDUCATION_ID")
				Me.OnEDUCATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATION_CODE", DbType:="Int")>  _
	Public Property EDUCATION_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._EDUCATION_CODE
		End Get
		Set
			If (Me._EDUCATION_CODE.Equals(value) = false) Then
				Me.OnEDUCATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATION_CODE = value
				Me.SendPropertyChanged("EDUCATION_CODE")
				Me.OnEDUCATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATION_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property EDUCATION_DESCRIPTION() As String
		Get
			Return Me._EDUCATION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDUCATION_DESCRIPTION, value) = false) Then
				Me.OnEDUCATION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATION_DESCRIPTION = value
				Me.SendPropertyChanged("EDUCATION_DESCRIPTION")
				Me.OnEDUCATION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EDUCATIONLEVEL")>  _
Partial Public Class MAS_EDUCATIONLEVEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EDUCATIONLEVEL_ID As Integer
	
	Private _EDUCATIONLEVEL_CODE As System.Nullable(Of Integer)
	
	Private _EDUCATIONLEVEL_EDUCATIONLEVELNAME As String
	
	Private _EDUCATIONLEVEL_ENNANE As String
	
	Private _EDUCATIONLEVEL_NOTE As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _EDUCATIONLEVEL_EDUCATIONKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_IDChanged()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_CODEChanged()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_EDUCATIONLEVELNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_EDUCATIONLEVELNAMEChanged()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_ENNANEChanging(value As String)
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_ENNANEChanged()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_NOTEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_EDUCATIONKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDUCATIONLEVEL_EDUCATIONKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EDUCATIONLEVEL_ID() As Integer
		Get
			Return Me._EDUCATIONLEVEL_ID
		End Get
		Set
			If ((Me._EDUCATIONLEVEL_ID = value)  _
						= false) Then
				Me.OnEDUCATIONLEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_ID = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_ID")
				Me.OnEDUCATIONLEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_CODE", DbType:="Int")>  _
	Public Property EDUCATIONLEVEL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._EDUCATIONLEVEL_CODE
		End Get
		Set
			If (Me._EDUCATIONLEVEL_CODE.Equals(value) = false) Then
				Me.OnEDUCATIONLEVEL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_CODE = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_CODE")
				Me.OnEDUCATIONLEVEL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_EDUCATIONLEVELNAME", DbType:="NVarChar(200)")>  _
	Public Property EDUCATIONLEVEL_EDUCATIONLEVELNAME() As String
		Get
			Return Me._EDUCATIONLEVEL_EDUCATIONLEVELNAME
		End Get
		Set
			If (String.Equals(Me._EDUCATIONLEVEL_EDUCATIONLEVELNAME, value) = false) Then
				Me.OnEDUCATIONLEVEL_EDUCATIONLEVELNAMEChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_EDUCATIONLEVELNAME = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_EDUCATIONLEVELNAME")
				Me.OnEDUCATIONLEVEL_EDUCATIONLEVELNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_ENNANE", DbType:="NVarChar(MAX)")>  _
	Public Property EDUCATIONLEVEL_ENNANE() As String
		Get
			Return Me._EDUCATIONLEVEL_ENNANE
		End Get
		Set
			If (String.Equals(Me._EDUCATIONLEVEL_ENNANE, value) = false) Then
				Me.OnEDUCATIONLEVEL_ENNANEChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_ENNANE = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_ENNANE")
				Me.OnEDUCATIONLEVEL_ENNANEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property EDUCATIONLEVEL_NOTE() As String
		Get
			Return Me._EDUCATIONLEVEL_NOTE
		End Get
		Set
			If (String.Equals(Me._EDUCATIONLEVEL_NOTE, value) = false) Then
				Me.OnEDUCATIONLEVEL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_NOTE = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_NOTE")
				Me.OnEDUCATIONLEVEL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCATIONLEVEL_EDUCATIONKEY", DbType:="Int")>  _
	Public Property EDUCATIONLEVEL_EDUCATIONKEY() As System.Nullable(Of Integer)
		Get
			Return Me._EDUCATIONLEVEL_EDUCATIONKEY
		End Get
		Set
			If (Me._EDUCATIONLEVEL_EDUCATIONKEY.Equals(value) = false) Then
				Me.OnEDUCATIONLEVEL_EDUCATIONKEYChanging(value)
				Me.SendPropertyChanging
				Me._EDUCATIONLEVEL_EDUCATIONKEY = value
				Me.SendPropertyChanged("EDUCATIONLEVEL_EDUCATIONKEY")
				Me.OnEDUCATIONLEVEL_EDUCATIONKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ELEMENTAL")>  _
Partial Public Class MAS_ELEMENTAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ELEMENTAL_ID As Integer
	
	Private _ELEMENTAL_CODE As String
	
	Private _ELEMENTAL_MONTH As String
	
	Private _ELEMENTAL_NAME As String
	
	Private _ELEMENTAL_MONTHNAME As String
	
	Private _ELEMENTAL_ENNAME As String
	
	Private _ELEMENTAL_NOTE As String
	
	Private _ELEMENTAL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ELEMENTAL_ISUSE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnELEMENTAL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnELEMENTAL_IDChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_CODEChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_MONTHChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_MONTHChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_NAMEChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_MONTHNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_MONTHNAMEChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnELEMENTAL_NOTEChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnELEMENTAL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnELEMENTAL_ISUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnELEMENTAL_ISUSEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ELEMENTAL_ID() As Integer
		Get
			Return Me._ELEMENTAL_ID
		End Get
		Set
			If ((Me._ELEMENTAL_ID = value)  _
						= false) Then
				Me.OnELEMENTAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_ID = value
				Me.SendPropertyChanged("ELEMENTAL_ID")
				Me.OnELEMENTAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_CODE() As String
		Get
			Return Me._ELEMENTAL_CODE
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_CODE, value) = false) Then
				Me.OnELEMENTAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_CODE = value
				Me.SendPropertyChanged("ELEMENTAL_CODE")
				Me.OnELEMENTAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_MONTH", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_MONTH() As String
		Get
			Return Me._ELEMENTAL_MONTH
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_MONTH, value) = false) Then
				Me.OnELEMENTAL_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_MONTH = value
				Me.SendPropertyChanged("ELEMENTAL_MONTH")
				Me.OnELEMENTAL_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_NAME() As String
		Get
			Return Me._ELEMENTAL_NAME
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_NAME, value) = false) Then
				Me.OnELEMENTAL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_NAME = value
				Me.SendPropertyChanged("ELEMENTAL_NAME")
				Me.OnELEMENTAL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_MONTHNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_MONTHNAME() As String
		Get
			Return Me._ELEMENTAL_MONTHNAME
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_MONTHNAME, value) = false) Then
				Me.OnELEMENTAL_MONTHNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_MONTHNAME = value
				Me.SendPropertyChanged("ELEMENTAL_MONTHNAME")
				Me.OnELEMENTAL_MONTHNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_ENNAME() As String
		Get
			Return Me._ELEMENTAL_ENNAME
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_ENNAME, value) = false) Then
				Me.OnELEMENTAL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_ENNAME = value
				Me.SendPropertyChanged("ELEMENTAL_ENNAME")
				Me.OnELEMENTAL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ELEMENTAL_NOTE() As String
		Get
			Return Me._ELEMENTAL_NOTE
		End Get
		Set
			If (String.Equals(Me._ELEMENTAL_NOTE, value) = false) Then
				Me.OnELEMENTAL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_NOTE = value
				Me.SendPropertyChanged("ELEMENTAL_NOTE")
				Me.OnELEMENTAL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_ISDISABLED", DbType:="Int")>  _
	Public Property ELEMENTAL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ELEMENTAL_ISDISABLED
		End Get
		Set
			If (Me._ELEMENTAL_ISDISABLED.Equals(value) = false) Then
				Me.OnELEMENTAL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_ISDISABLED = value
				Me.SendPropertyChanged("ELEMENTAL_ISDISABLED")
				Me.OnELEMENTAL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ELEMENTAL_ISUSE", DbType:="Int")>  _
	Public Property ELEMENTAL_ISUSE() As System.Nullable(Of Integer)
		Get
			Return Me._ELEMENTAL_ISUSE
		End Get
		Set
			If (Me._ELEMENTAL_ISUSE.Equals(value) = false) Then
				Me.OnELEMENTAL_ISUSEChanging(value)
				Me.SendPropertyChanging
				Me._ELEMENTAL_ISUSE = value
				Me.SendPropertyChanged("ELEMENTAL_ISUSE")
				Me.OnELEMENTAL_ISUSEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EMERGENCE")>  _
Partial Public Class MAS_EMERGENCE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EMERGENCE_ID As Integer
	
	Private _EMERGENCE_CODE As String
	
	Private _EMERGENCE_EMERGENCYNAME As String
	
	Private _EMERGENCE_ABBRNAME As String
	
	Private _EMERGENCE_ENNAME As String
	
	Private _EMERGENCE_NOTE As String
	
	Private _EMERGENCE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEMERGENCE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEMERGENCE_IDChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnEMERGENCE_CODEChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_EMERGENCYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEMERGENCE_EMERGENCYNAMEChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEMERGENCE_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEMERGENCE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnEMERGENCE_NOTEChanged()
    End Sub
    Partial Private Sub OnEMERGENCE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEMERGENCE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EMERGENCE_ID() As Integer
		Get
			Return Me._EMERGENCE_ID
		End Get
		Set
			If ((Me._EMERGENCE_ID = value)  _
						= false) Then
				Me.OnEMERGENCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_ID = value
				Me.SendPropertyChanged("EMERGENCE_ID")
				Me.OnEMERGENCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_CODE", DbType:="NVarChar(50)")>  _
	Public Property EMERGENCE_CODE() As String
		Get
			Return Me._EMERGENCE_CODE
		End Get
		Set
			If (String.Equals(Me._EMERGENCE_CODE, value) = false) Then
				Me.OnEMERGENCE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_CODE = value
				Me.SendPropertyChanged("EMERGENCE_CODE")
				Me.OnEMERGENCE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_EMERGENCYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property EMERGENCE_EMERGENCYNAME() As String
		Get
			Return Me._EMERGENCE_EMERGENCYNAME
		End Get
		Set
			If (String.Equals(Me._EMERGENCE_EMERGENCYNAME, value) = false) Then
				Me.OnEMERGENCE_EMERGENCYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_EMERGENCYNAME = value
				Me.SendPropertyChanged("EMERGENCE_EMERGENCYNAME")
				Me.OnEMERGENCE_EMERGENCYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_ABBRNAME", DbType:="NVarChar(MAX)")>  _
	Public Property EMERGENCE_ABBRNAME() As String
		Get
			Return Me._EMERGENCE_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._EMERGENCE_ABBRNAME, value) = false) Then
				Me.OnEMERGENCE_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_ABBRNAME = value
				Me.SendPropertyChanged("EMERGENCE_ABBRNAME")
				Me.OnEMERGENCE_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property EMERGENCE_ENNAME() As String
		Get
			Return Me._EMERGENCE_ENNAME
		End Get
		Set
			If (String.Equals(Me._EMERGENCE_ENNAME, value) = false) Then
				Me.OnEMERGENCE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_ENNAME = value
				Me.SendPropertyChanged("EMERGENCE_ENNAME")
				Me.OnEMERGENCE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property EMERGENCE_NOTE() As String
		Get
			Return Me._EMERGENCE_NOTE
		End Get
		Set
			If (String.Equals(Me._EMERGENCE_NOTE, value) = false) Then
				Me.OnEMERGENCE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_NOTE = value
				Me.SendPropertyChanged("EMERGENCE_NOTE")
				Me.OnEMERGENCE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMERGENCE_ISDISABLED", DbType:="Int")>  _
	Public Property EMERGENCE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._EMERGENCE_ISDISABLED
		End Get
		Set
			If (Me._EMERGENCE_ISDISABLED.Equals(value) = false) Then
				Me.OnEMERGENCE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._EMERGENCE_ISDISABLED = value
				Me.SendPropertyChanged("EMERGENCE_ISDISABLED")
				Me.OnEMERGENCE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EXPENSES")>  _
Partial Public Class MAS_EXPENSE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EXPENSES_ID As Integer
	
	Private _EXPENSES_F12CHRGITEMKEY As System.Nullable(Of Integer)
	
	Private _EXPENSES_CODE As String
	
	Private _EXPENSES_EXPENSESNAME As String
	
	Private _EXPENSES_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEXPENSES_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEXPENSES_IDChanged()
    End Sub
    Partial Private Sub OnEXPENSES_F12CHRGITEMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPENSES_F12CHRGITEMKEYChanged()
    End Sub
    Partial Private Sub OnEXPENSES_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnEXPENSES_CODEChanged()
    End Sub
    Partial Private Sub OnEXPENSES_EXPENSESNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEXPENSES_EXPENSESNAMEChanged()
    End Sub
    Partial Private Sub OnEXPENSES_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPENSES_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPENSES_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EXPENSES_ID() As Integer
		Get
			Return Me._EXPENSES_ID
		End Get
		Set
			If ((Me._EXPENSES_ID = value)  _
						= false) Then
				Me.OnEXPENSES_IDChanging(value)
				Me.SendPropertyChanging
				Me._EXPENSES_ID = value
				Me.SendPropertyChanged("EXPENSES_ID")
				Me.OnEXPENSES_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPENSES_F12CHRGITEMKEY", DbType:="Int")>  _
	Public Property EXPENSES_F12CHRGITEMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._EXPENSES_F12CHRGITEMKEY
		End Get
		Set
			If (Me._EXPENSES_F12CHRGITEMKEY.Equals(value) = false) Then
				Me.OnEXPENSES_F12CHRGITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._EXPENSES_F12CHRGITEMKEY = value
				Me.SendPropertyChanged("EXPENSES_F12CHRGITEMKEY")
				Me.OnEXPENSES_F12CHRGITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPENSES_CODE", DbType:="NVarChar(50)")>  _
	Public Property EXPENSES_CODE() As String
		Get
			Return Me._EXPENSES_CODE
		End Get
		Set
			If (String.Equals(Me._EXPENSES_CODE, value) = false) Then
				Me.OnEXPENSES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._EXPENSES_CODE = value
				Me.SendPropertyChanged("EXPENSES_CODE")
				Me.OnEXPENSES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPENSES_EXPENSESNAME", DbType:="NVarChar(MAX)")>  _
	Public Property EXPENSES_EXPENSESNAME() As String
		Get
			Return Me._EXPENSES_EXPENSESNAME
		End Get
		Set
			If (String.Equals(Me._EXPENSES_EXPENSESNAME, value) = false) Then
				Me.OnEXPENSES_EXPENSESNAMEChanging(value)
				Me.SendPropertyChanging
				Me._EXPENSES_EXPENSESNAME = value
				Me.SendPropertyChanged("EXPENSES_EXPENSESNAME")
				Me.OnEXPENSES_EXPENSESNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPENSES_ISDISABLED", DbType:="Int")>  _
	Public Property EXPENSES_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._EXPENSES_ISDISABLED
		End Get
		Set
			If (Me._EXPENSES_ISDISABLED.Equals(value) = false) Then
				Me.OnEXPENSES_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._EXPENSES_ISDISABLED = value
				Me.SendPropertyChanged("EXPENSES_ISDISABLED")
				Me.OnEXPENSES_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_F18VACCINE")>  _
Partial Public Class MAS_F18VACCINE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _F18VaccineKey As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _ENName As String
	
	Private _UseNote As String
	
	Private _AgeNote As String
	
	Private _IsDisabled As Boolean
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnF18VaccineKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnF18VaccineKeyChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnENNameChanging(value As String)
    End Sub
    Partial Private Sub OnENNameChanged()
    End Sub
    Partial Private Sub OnUseNoteChanging(value As String)
    End Sub
    Partial Private Sub OnUseNoteChanged()
    End Sub
    Partial Private Sub OnAgeNoteChanging(value As String)
    End Sub
    Partial Private Sub OnAgeNoteChanged()
    End Sub
    Partial Private Sub OnIsDisabledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDisabledChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F18VaccineKey", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property F18VaccineKey() As Integer
		Get
			Return Me._F18VaccineKey
		End Get
		Set
			If ((Me._F18VaccineKey = value)  _
						= false) Then
				Me.OnF18VaccineKeyChanging(value)
				Me.SendPropertyChanging
				Me._F18VaccineKey = value
				Me.SendPropertyChanged("F18VaccineKey")
				Me.OnF18VaccineKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(10)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENName", DbType:="NVarChar(100)")>  _
	Public Property ENName() As String
		Get
			Return Me._ENName
		End Get
		Set
			If (String.Equals(Me._ENName, value) = false) Then
				Me.OnENNameChanging(value)
				Me.SendPropertyChanging
				Me._ENName = value
				Me.SendPropertyChanged("ENName")
				Me.OnENNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseNote", DbType:="NVarChar(100)")>  _
	Public Property UseNote() As String
		Get
			Return Me._UseNote
		End Get
		Set
			If (String.Equals(Me._UseNote, value) = false) Then
				Me.OnUseNoteChanging(value)
				Me.SendPropertyChanging
				Me._UseNote = value
				Me.SendPropertyChanged("UseNote")
				Me.OnUseNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgeNote", DbType:="NVarChar(100)")>  _
	Public Property AgeNote() As String
		Get
			Return Me._AgeNote
		End Get
		Set
			If (String.Equals(Me._AgeNote, value) = false) Then
				Me.OnAgeNoteChanging(value)
				Me.SendPropertyChanging
				Me._AgeNote = value
				Me.SendPropertyChanged("AgeNote")
				Me.OnAgeNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisabled", DbType:="Bit NOT NULL")>  _
	Public Property IsDisabled() As Boolean
		Get
			Return Me._IsDisabled
		End Get
		Set
			If ((Me._IsDisabled = value)  _
						= false) Then
				Me.OnIsDisabledChanging(value)
				Me.SendPropertyChanging
				Me._IsDisabled = value
				Me.SendPropertyChanged("IsDisabled")
				Me.OnIsDisabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FLOOR_INBUILDING")>  _
Partial Public Class MAS_FLOOR_INBUILDING
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FLOOR_INBUILDING_ID As Integer
	
	Private _FLOOR_INBUILDING_FLOORKEY As System.Nullable(Of Integer)
	
	Private _FLOOR_INBUILDING_CODE As String
	
	Private _FLOOR_INBUILDING_FLOORNAME As String
	
	Private _FLOOR_INBUILDING_ENNAME As String
	
	Private _FLOOR_INBUILDING_NOTE As String
	
	Private _FLOOR_INBUILDING_ISDISABLED As System.Nullable(Of Integer)
	
	Private _FLOOR_INBUILDING_BUILDINGKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_IDChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_FLOORKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_FLOORKEYChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_CODEChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_FLOORNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_FLOORNAMEChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_ENNAMEChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_NOTEChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_BUILDINGKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFLOOR_INBUILDING_BUILDINGKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FLOOR_INBUILDING_ID() As Integer
		Get
			Return Me._FLOOR_INBUILDING_ID
		End Get
		Set
			If ((Me._FLOOR_INBUILDING_ID = value)  _
						= false) Then
				Me.OnFLOOR_INBUILDING_IDChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_ID = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_ID")
				Me.OnFLOOR_INBUILDING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_FLOORKEY", DbType:="Int")>  _
	Public Property FLOOR_INBUILDING_FLOORKEY() As System.Nullable(Of Integer)
		Get
			Return Me._FLOOR_INBUILDING_FLOORKEY
		End Get
		Set
			If (Me._FLOOR_INBUILDING_FLOORKEY.Equals(value) = false) Then
				Me.OnFLOOR_INBUILDING_FLOORKEYChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_FLOORKEY = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_FLOORKEY")
				Me.OnFLOOR_INBUILDING_FLOORKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_CODE", DbType:="NVarChar(50)")>  _
	Public Property FLOOR_INBUILDING_CODE() As String
		Get
			Return Me._FLOOR_INBUILDING_CODE
		End Get
		Set
			If (String.Equals(Me._FLOOR_INBUILDING_CODE, value) = false) Then
				Me.OnFLOOR_INBUILDING_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_CODE = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_CODE")
				Me.OnFLOOR_INBUILDING_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_FLOORNAME", DbType:="NVarChar(200)")>  _
	Public Property FLOOR_INBUILDING_FLOORNAME() As String
		Get
			Return Me._FLOOR_INBUILDING_FLOORNAME
		End Get
		Set
			If (String.Equals(Me._FLOOR_INBUILDING_FLOORNAME, value) = false) Then
				Me.OnFLOOR_INBUILDING_FLOORNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_FLOORNAME = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_FLOORNAME")
				Me.OnFLOOR_INBUILDING_FLOORNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property FLOOR_INBUILDING_ENNAME() As String
		Get
			Return Me._FLOOR_INBUILDING_ENNAME
		End Get
		Set
			If (String.Equals(Me._FLOOR_INBUILDING_ENNAME, value) = false) Then
				Me.OnFLOOR_INBUILDING_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_ENNAME = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_ENNAME")
				Me.OnFLOOR_INBUILDING_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property FLOOR_INBUILDING_NOTE() As String
		Get
			Return Me._FLOOR_INBUILDING_NOTE
		End Get
		Set
			If (String.Equals(Me._FLOOR_INBUILDING_NOTE, value) = false) Then
				Me.OnFLOOR_INBUILDING_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_NOTE = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_NOTE")
				Me.OnFLOOR_INBUILDING_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_ISDISABLED", DbType:="Int")>  _
	Public Property FLOOR_INBUILDING_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._FLOOR_INBUILDING_ISDISABLED
		End Get
		Set
			If (Me._FLOOR_INBUILDING_ISDISABLED.Equals(value) = false) Then
				Me.OnFLOOR_INBUILDING_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_ISDISABLED = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_ISDISABLED")
				Me.OnFLOOR_INBUILDING_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR_INBUILDING_BUILDINGKEY", DbType:="Int")>  _
	Public Property FLOOR_INBUILDING_BUILDINGKEY() As System.Nullable(Of Integer)
		Get
			Return Me._FLOOR_INBUILDING_BUILDINGKEY
		End Get
		Set
			If (Me._FLOOR_INBUILDING_BUILDINGKEY.Equals(value) = false) Then
				Me.OnFLOOR_INBUILDING_BUILDINGKEYChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR_INBUILDING_BUILDINGKEY = value
				Me.SendPropertyChanged("FLOOR_INBUILDING_BUILDINGKEY")
				Me.OnFLOOR_INBUILDING_BUILDINGKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FOOD")>  _
Partial Public Class MAS_FOOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FOOD_ID As Integer
	
	Private _FOOD_CODE As String
	
	Private _FOOD_NAME As String
	
	Private _FOOD_ENNAME As String
	
	Private _FOOD_NOTE As String
	
	Private _FOOD_ISDISABLED As System.Nullable(Of Integer)
	
	Private _FOOD_CURRENTPRICE As String
	
	Private _FOOD_CDGITEMTOPIC As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _FOOD_PRICE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFOOD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFOOD_IDChanged()
    End Sub
    Partial Private Sub OnFOOD_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_CODEChanged()
    End Sub
    Partial Private Sub OnFOOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NAMEChanged()
    End Sub
    Partial Private Sub OnFOOD_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_ENNAMEChanged()
    End Sub
    Partial Private Sub OnFOOD_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NOTEChanged()
    End Sub
    Partial Private Sub OnFOOD_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOOD_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnFOOD_CURRENTPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_CURRENTPRICEChanged()
    End Sub
    Partial Private Sub OnFOOD_CDGITEMTOPICChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_CDGITEMTOPICChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnFOOD_PRICEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_PRICEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FOOD_ID() As Integer
		Get
			Return Me._FOOD_ID
		End Get
		Set
			If ((Me._FOOD_ID = value)  _
						= false) Then
				Me.OnFOOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_ID = value
				Me.SendPropertyChanged("FOOD_ID")
				Me.OnFOOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_CODE() As String
		Get
			Return Me._FOOD_CODE
		End Get
		Set
			If (String.Equals(Me._FOOD_CODE, value) = false) Then
				Me.OnFOOD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_CODE = value
				Me.SendPropertyChanged("FOOD_CODE")
				Me.OnFOOD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NAME() As String
		Get
			Return Me._FOOD_NAME
		End Get
		Set
			If (String.Equals(Me._FOOD_NAME, value) = false) Then
				Me.OnFOOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NAME = value
				Me.SendPropertyChanged("FOOD_NAME")
				Me.OnFOOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_ENNAME() As String
		Get
			Return Me._FOOD_ENNAME
		End Get
		Set
			If (String.Equals(Me._FOOD_ENNAME, value) = false) Then
				Me.OnFOOD_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_ENNAME = value
				Me.SendPropertyChanged("FOOD_ENNAME")
				Me.OnFOOD_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NOTE() As String
		Get
			Return Me._FOOD_NOTE
		End Get
		Set
			If (String.Equals(Me._FOOD_NOTE, value) = false) Then
				Me.OnFOOD_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NOTE = value
				Me.SendPropertyChanged("FOOD_NOTE")
				Me.OnFOOD_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_ISDISABLED", DbType:="Int")>  _
	Public Property FOOD_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._FOOD_ISDISABLED
		End Get
		Set
			If (Me._FOOD_ISDISABLED.Equals(value) = false) Then
				Me.OnFOOD_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_ISDISABLED = value
				Me.SendPropertyChanged("FOOD_ISDISABLED")
				Me.OnFOOD_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_CURRENTPRICE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_CURRENTPRICE() As String
		Get
			Return Me._FOOD_CURRENTPRICE
		End Get
		Set
			If (String.Equals(Me._FOOD_CURRENTPRICE, value) = false) Then
				Me.OnFOOD_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_CURRENTPRICE = value
				Me.SendPropertyChanged("FOOD_CURRENTPRICE")
				Me.OnFOOD_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_CDGITEMTOPIC", DbType:="NVarChar(50)")>  _
	Public Property FOOD_CDGITEMTOPIC() As String
		Get
			Return Me._FOOD_CDGITEMTOPIC
		End Get
		Set
			If (String.Equals(Me._FOOD_CDGITEMTOPIC, value) = false) Then
				Me.OnFOOD_CDGITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_CDGITEMTOPIC = value
				Me.SendPropertyChanged("FOOD_CDGITEMTOPIC")
				Me.OnFOOD_CDGITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_PRICE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_PRICE() As String
		Get
			Return Me._FOOD_PRICE
		End Get
		Set
			If (String.Equals(Me._FOOD_PRICE, value) = false) Then
				Me.OnFOOD_PRICEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_PRICE = value
				Me.SendPropertyChanged("FOOD_PRICE")
				Me.OnFOOD_PRICEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FOOD_NATURE")>  _
Partial Public Class MAS_FOOD_NATURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FOOD_NATURE_ID As Integer
	
	Private _FOOD_NATURE_CODE As String
	
	Private _FOOD_NATURE_NAME As String
	
	Private _FOOD_NATURE_ENNAME As String
	
	Private _FOOD_NATURE_NOTE As String
	
	Private _FOOD_NATURE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFOOD_NATURE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFOOD_NATURE_IDChanged()
    End Sub
    Partial Private Sub OnFOOD_NATURE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NATURE_CODEChanged()
    End Sub
    Partial Private Sub OnFOOD_NATURE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NATURE_NAMEChanged()
    End Sub
    Partial Private Sub OnFOOD_NATURE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NATURE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnFOOD_NATURE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnFOOD_NATURE_NOTEChanged()
    End Sub
    Partial Private Sub OnFOOD_NATURE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOOD_NATURE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FOOD_NATURE_ID() As Integer
		Get
			Return Me._FOOD_NATURE_ID
		End Get
		Set
			If ((Me._FOOD_NATURE_ID = value)  _
						= false) Then
				Me.OnFOOD_NATURE_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_ID = value
				Me.SendPropertyChanged("FOOD_NATURE_ID")
				Me.OnFOOD_NATURE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NATURE_CODE() As String
		Get
			Return Me._FOOD_NATURE_CODE
		End Get
		Set
			If (String.Equals(Me._FOOD_NATURE_CODE, value) = false) Then
				Me.OnFOOD_NATURE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_CODE = value
				Me.SendPropertyChanged("FOOD_NATURE_CODE")
				Me.OnFOOD_NATURE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NATURE_NAME() As String
		Get
			Return Me._FOOD_NATURE_NAME
		End Get
		Set
			If (String.Equals(Me._FOOD_NATURE_NAME, value) = false) Then
				Me.OnFOOD_NATURE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_NAME = value
				Me.SendPropertyChanged("FOOD_NATURE_NAME")
				Me.OnFOOD_NATURE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NATURE_ENNAME() As String
		Get
			Return Me._FOOD_NATURE_ENNAME
		End Get
		Set
			If (String.Equals(Me._FOOD_NATURE_ENNAME, value) = false) Then
				Me.OnFOOD_NATURE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_ENNAME = value
				Me.SendPropertyChanged("FOOD_NATURE_ENNAME")
				Me.OnFOOD_NATURE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property FOOD_NATURE_NOTE() As String
		Get
			Return Me._FOOD_NATURE_NOTE
		End Get
		Set
			If (String.Equals(Me._FOOD_NATURE_NOTE, value) = false) Then
				Me.OnFOOD_NATURE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_NOTE = value
				Me.SendPropertyChanged("FOOD_NATURE_NOTE")
				Me.OnFOOD_NATURE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOOD_NATURE_ISDISABLED", DbType:="Int")>  _
	Public Property FOOD_NATURE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._FOOD_NATURE_ISDISABLED
		End Get
		Set
			If (Me._FOOD_NATURE_ISDISABLED.Equals(value) = false) Then
				Me.OnFOOD_NATURE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._FOOD_NATURE_ISDISABLED = value
				Me.SendPropertyChanged("FOOD_NATURE_ISDISABLED")
				Me.OnFOOD_NATURE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FORMAT_FOOD")>  _
Partial Public Class MAS_FORMAT_FOOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FORMAT_FOOD_ID As Integer
	
	Private _FORMAT_FOOD_CODE As String
	
	Private _FORMAT_FOOD_NAME As String
	
	Private _FORMAT_FOOD_ENNAME As String
	
	Private _FORMAT_FOOD_NOTE As String
	
	Private _FORMAT_FOOD_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFORMAT_FOOD_IDChanged()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_FOOD_CODEChanged()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_FOOD_NAMEChanged()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_FOOD_ENNAMEChanged()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnFORMAT_FOOD_NOTEChanged()
    End Sub
    Partial Private Sub OnFORMAT_FOOD_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFORMAT_FOOD_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FORMAT_FOOD_ID() As Integer
		Get
			Return Me._FORMAT_FOOD_ID
		End Get
		Set
			If ((Me._FORMAT_FOOD_ID = value)  _
						= false) Then
				Me.OnFORMAT_FOOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_ID = value
				Me.SendPropertyChanged("FORMAT_FOOD_ID")
				Me.OnFORMAT_FOOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_FOOD_CODE() As String
		Get
			Return Me._FORMAT_FOOD_CODE
		End Get
		Set
			If (String.Equals(Me._FORMAT_FOOD_CODE, value) = false) Then
				Me.OnFORMAT_FOOD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_CODE = value
				Me.SendPropertyChanged("FORMAT_FOOD_CODE")
				Me.OnFORMAT_FOOD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_FOOD_NAME() As String
		Get
			Return Me._FORMAT_FOOD_NAME
		End Get
		Set
			If (String.Equals(Me._FORMAT_FOOD_NAME, value) = false) Then
				Me.OnFORMAT_FOOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_NAME = value
				Me.SendPropertyChanged("FORMAT_FOOD_NAME")
				Me.OnFORMAT_FOOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_FOOD_ENNAME() As String
		Get
			Return Me._FORMAT_FOOD_ENNAME
		End Get
		Set
			If (String.Equals(Me._FORMAT_FOOD_ENNAME, value) = false) Then
				Me.OnFORMAT_FOOD_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_ENNAME = value
				Me.SendPropertyChanged("FORMAT_FOOD_ENNAME")
				Me.OnFORMAT_FOOD_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property FORMAT_FOOD_NOTE() As String
		Get
			Return Me._FORMAT_FOOD_NOTE
		End Get
		Set
			If (String.Equals(Me._FORMAT_FOOD_NOTE, value) = false) Then
				Me.OnFORMAT_FOOD_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_NOTE = value
				Me.SendPropertyChanged("FORMAT_FOOD_NOTE")
				Me.OnFORMAT_FOOD_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT_FOOD_ISDISABLED", DbType:="Int")>  _
	Public Property FORMAT_FOOD_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._FORMAT_FOOD_ISDISABLED
		End Get
		Set
			If (Me._FORMAT_FOOD_ISDISABLED.Equals(value) = false) Then
				Me.OnFORMAT_FOOD_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT_FOOD_ISDISABLED = value
				Me.SendPropertyChanged("FORMAT_FOOD_ISDISABLED")
				Me.OnFORMAT_FOOD_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FPTYPE")>  _
Partial Public Class MAS_FPTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FPTYPE_ID As Integer
	
	Private _FPTYPE_CODE As System.Nullable(Of Integer)
	
	Private _FPTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFPTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFPTYPE_IDChanged()
    End Sub
    Partial Private Sub OnFPTYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFPTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnFPTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFPTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FPTYPE_ID() As Integer
		Get
			Return Me._FPTYPE_ID
		End Get
		Set
			If ((Me._FPTYPE_ID = value)  _
						= false) Then
				Me.OnFPTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._FPTYPE_ID = value
				Me.SendPropertyChanged("FPTYPE_ID")
				Me.OnFPTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPTYPE_CODE", DbType:="Int")>  _
	Public Property FPTYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._FPTYPE_CODE
		End Get
		Set
			If (Me._FPTYPE_CODE.Equals(value) = false) Then
				Me.OnFPTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FPTYPE_CODE = value
				Me.SendPropertyChanged("FPTYPE_CODE")
				Me.OnFPTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property FPTYPE_DESCRIPTION() As String
		Get
			Return Me._FPTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._FPTYPE_DESCRIPTION, value) = false) Then
				Me.OnFPTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FPTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("FPTYPE_DESCRIPTION")
				Me.OnFPTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FSTATUS")>  _
Partial Public Class MAS_FSTATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FSTATUS_ID As Integer
	
	Private _FSTATUS_CODE As System.Nullable(Of Integer)
	
	Private _FSTATUS_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFSTATUS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFSTATUS_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFSTATUS_CODEChanged()
    End Sub
    Partial Private Sub OnFSTATUS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFSTATUS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FSTATUS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FSTATUS_ID() As Integer
		Get
			Return Me._FSTATUS_ID
		End Get
		Set
			If ((Me._FSTATUS_ID = value)  _
						= false) Then
				Me.OnFSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FSTATUS_ID = value
				Me.SendPropertyChanged("FSTATUS_ID")
				Me.OnFSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FSTATUS_CODE", DbType:="Int")>  _
	Public Property FSTATUS_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._FSTATUS_CODE
		End Get
		Set
			If (Me._FSTATUS_CODE.Equals(value) = false) Then
				Me.OnFSTATUS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FSTATUS_CODE = value
				Me.SendPropertyChanged("FSTATUS_CODE")
				Me.OnFSTATUS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FSTATUS_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property FSTATUS_DESCRIPTION() As String
		Get
			Return Me._FSTATUS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._FSTATUS_DESCRIPTION, value) = false) Then
				Me.OnFSTATUS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FSTATUS_DESCRIPTION = value
				Me.SendPropertyChanged("FSTATUS_DESCRIPTION")
				Me.OnFSTATUS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FUNCTIONAL_TEST")>  _
Partial Public Class MAS_FUNCTIONAL_TEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FUNCTIONAL_TEST_ID As Integer
	
	Private _FUNCTIONAL_TEST_CODE As String
	
	Private _FUNCTIONAL_TEST_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_IDChanged()
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_CODEChanged()
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFUNCTIONAL_TEST_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTIONAL_TEST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FUNCTIONAL_TEST_ID() As Integer
		Get
			Return Me._FUNCTIONAL_TEST_ID
		End Get
		Set
			If ((Me._FUNCTIONAL_TEST_ID = value)  _
						= false) Then
				Me.OnFUNCTIONAL_TEST_IDChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTIONAL_TEST_ID = value
				Me.SendPropertyChanged("FUNCTIONAL_TEST_ID")
				Me.OnFUNCTIONAL_TEST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTIONAL_TEST_CODE", DbType:="VarChar(50)")>  _
	Public Property FUNCTIONAL_TEST_CODE() As String
		Get
			Return Me._FUNCTIONAL_TEST_CODE
		End Get
		Set
			If (String.Equals(Me._FUNCTIONAL_TEST_CODE, value) = false) Then
				Me.OnFUNCTIONAL_TEST_CODEChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTIONAL_TEST_CODE = value
				Me.SendPropertyChanged("FUNCTIONAL_TEST_CODE")
				Me.OnFUNCTIONAL_TEST_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUNCTIONAL_TEST_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property FUNCTIONAL_TEST_DESCRIPTION() As String
		Get
			Return Me._FUNCTIONAL_TEST_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._FUNCTIONAL_TEST_DESCRIPTION, value) = false) Then
				Me.OnFUNCTIONAL_TEST_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FUNCTIONAL_TEST_DESCRIPTION = value
				Me.SendPropertyChanged("FUNCTIONAL_TEST_DESCRIPTION")
				Me.OnFUNCTIONAL_TEST_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GARBAGE")>  _
Partial Public Class MAS_GARBAGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GARBAGE_ID As Integer
	
	Private _GARBAGE_CODE As System.Nullable(Of Integer)
	
	Private _GARBAGE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGARBAGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGARBAGE_IDChanged()
    End Sub
    Partial Private Sub OnGARBAGE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGARBAGE_CODEChanged()
    End Sub
    Partial Private Sub OnGARBAGE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnGARBAGE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GARBAGE_ID() As Integer
		Get
			Return Me._GARBAGE_ID
		End Get
		Set
			If ((Me._GARBAGE_ID = value)  _
						= false) Then
				Me.OnGARBAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_ID = value
				Me.SendPropertyChanged("GARBAGE_ID")
				Me.OnGARBAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_CODE", DbType:="Int")>  _
	Public Property GARBAGE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._GARBAGE_CODE
		End Get
		Set
			If (Me._GARBAGE_CODE.Equals(value) = false) Then
				Me.OnGARBAGE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_CODE = value
				Me.SendPropertyChanged("GARBAGE_CODE")
				Me.OnGARBAGE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property GARBAGE_DESCRIPTION() As String
		Get
			Return Me._GARBAGE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._GARBAGE_DESCRIPTION, value) = false) Then
				Me.OnGARBAGE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_DESCRIPTION = value
				Me.SendPropertyChanged("GARBAGE_DESCRIPTION")
				Me.OnGARBAGE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GARBAGE_VILLAGE")>  _
Partial Public Class MAS_GARBAGE_VILLAGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GARBAGE_VILLAGE_ID As Integer
	
	Private _GARBAGE_VILLAGE_CODE As System.Nullable(Of Integer)
	
	Private _GARBAGE_VILLAGE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_IDChanged()
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_CODEChanged()
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnGARBAGE_VILLAGE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_VILLAGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GARBAGE_VILLAGE_ID() As Integer
		Get
			Return Me._GARBAGE_VILLAGE_ID
		End Get
		Set
			If ((Me._GARBAGE_VILLAGE_ID = value)  _
						= false) Then
				Me.OnGARBAGE_VILLAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_VILLAGE_ID = value
				Me.SendPropertyChanged("GARBAGE_VILLAGE_ID")
				Me.OnGARBAGE_VILLAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_VILLAGE_CODE", DbType:="Int")>  _
	Public Property GARBAGE_VILLAGE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._GARBAGE_VILLAGE_CODE
		End Get
		Set
			If (Me._GARBAGE_VILLAGE_CODE.Equals(value) = false) Then
				Me.OnGARBAGE_VILLAGE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_VILLAGE_CODE = value
				Me.SendPropertyChanged("GARBAGE_VILLAGE_CODE")
				Me.OnGARBAGE_VILLAGE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GARBAGE_VILLAGE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property GARBAGE_VILLAGE_DESCRIPTION() As String
		Get
			Return Me._GARBAGE_VILLAGE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._GARBAGE_VILLAGE_DESCRIPTION, value) = false) Then
				Me.OnGARBAGE_VILLAGE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._GARBAGE_VILLAGE_DESCRIPTION = value
				Me.SendPropertyChanged("GARBAGE_VILLAGE_DESCRIPTION")
				Me.OnGARBAGE_VILLAGE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GENDER")>  _
Partial Public Class MAS_GENDER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GENDER_ID As Integer
	
	Private _GENDER_CODE As String
	
	Private _GENDER_GENDERNAME As String
	
	Private _GENDER_ENNAME As String
	
	Private _GENDER_NOTE As String
	
	Private _GENDER_ISDISABLED As System.Nullable(Of Integer)
	
	Private _DRGCODE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGENDER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGENDER_IDChanged()
    End Sub
    Partial Private Sub OnGENDER_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGENDER_CODEChanged()
    End Sub
    Partial Private Sub OnGENDER_GENDERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGENDER_GENDERNAMEChanged()
    End Sub
    Partial Private Sub OnGENDER_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGENDER_ENNAMEChanged()
    End Sub
    Partial Private Sub OnGENDER_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnGENDER_NOTEChanged()
    End Sub
    Partial Private Sub OnGENDER_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENDER_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnDRGCODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRGCODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GENDER_ID() As Integer
		Get
			Return Me._GENDER_ID
		End Get
		Set
			If ((Me._GENDER_ID = value)  _
						= false) Then
				Me.OnGENDER_IDChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_ID = value
				Me.SendPropertyChanged("GENDER_ID")
				Me.OnGENDER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_CODE", DbType:="NVarChar(50)")>  _
	Public Property GENDER_CODE() As String
		Get
			Return Me._GENDER_CODE
		End Get
		Set
			If (String.Equals(Me._GENDER_CODE, value) = false) Then
				Me.OnGENDER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_CODE = value
				Me.SendPropertyChanged("GENDER_CODE")
				Me.OnGENDER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_GENDERNAME", DbType:="NVarChar(50)")>  _
	Public Property GENDER_GENDERNAME() As String
		Get
			Return Me._GENDER_GENDERNAME
		End Get
		Set
			If (String.Equals(Me._GENDER_GENDERNAME, value) = false) Then
				Me.OnGENDER_GENDERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_GENDERNAME = value
				Me.SendPropertyChanged("GENDER_GENDERNAME")
				Me.OnGENDER_GENDERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property GENDER_ENNAME() As String
		Get
			Return Me._GENDER_ENNAME
		End Get
		Set
			If (String.Equals(Me._GENDER_ENNAME, value) = false) Then
				Me.OnGENDER_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_ENNAME = value
				Me.SendPropertyChanged("GENDER_ENNAME")
				Me.OnGENDER_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property GENDER_NOTE() As String
		Get
			Return Me._GENDER_NOTE
		End Get
		Set
			If (String.Equals(Me._GENDER_NOTE, value) = false) Then
				Me.OnGENDER_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_NOTE = value
				Me.SendPropertyChanged("GENDER_NOTE")
				Me.OnGENDER_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER_ISDISABLED", DbType:="Int")>  _
	Public Property GENDER_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._GENDER_ISDISABLED
		End Get
		Set
			If (Me._GENDER_ISDISABLED.Equals(value) = false) Then
				Me.OnGENDER_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._GENDER_ISDISABLED = value
				Me.SendPropertyChanged("GENDER_ISDISABLED")
				Me.OnGENDER_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRGCODE", DbType:="Int")>  _
	Public Property DRGCODE() As System.Nullable(Of Integer)
		Get
			Return Me._DRGCODE
		End Get
		Set
			If (Me._DRGCODE.Equals(value) = false) Then
				Me.OnDRGCODEChanging(value)
				Me.SendPropertyChanging
				Me._DRGCODE = value
				Me.SendPropertyChanged("DRGCODE")
				Me.OnDRGCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GENERICDRUGS")>  _
Partial Public Class MAS_GENERICDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GENERICDRUGS_ID As Integer
	
	Private _GENERICDRUGS_CODE As String
	
	Private _GENERICDRUGS_GENERICNAME As String
	
	Private _GENERICDRUGS_ENNAME As String
	
	Private _GENERICDRUGS_NOTE As String
	
	Private _GENERICDRUGS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGENERICDRUGS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGENERICDRUGS_IDChanged()
    End Sub
    Partial Private Sub OnGENERICDRUGS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGENERICDRUGS_CODEChanged()
    End Sub
    Partial Private Sub OnGENERICDRUGS_GENERICNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGENERICDRUGS_GENERICNAMEChanged()
    End Sub
    Partial Private Sub OnGENERICDRUGS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGENERICDRUGS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnGENERICDRUGS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnGENERICDRUGS_NOTEChanged()
    End Sub
    Partial Private Sub OnGENERICDRUGS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENERICDRUGS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GENERICDRUGS_ID() As Integer
		Get
			Return Me._GENERICDRUGS_ID
		End Get
		Set
			If ((Me._GENERICDRUGS_ID = value)  _
						= false) Then
				Me.OnGENERICDRUGS_IDChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_ID = value
				Me.SendPropertyChanged("GENERICDRUGS_ID")
				Me.OnGENERICDRUGS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_CODE", DbType:="NVarChar(50)")>  _
	Public Property GENERICDRUGS_CODE() As String
		Get
			Return Me._GENERICDRUGS_CODE
		End Get
		Set
			If (String.Equals(Me._GENERICDRUGS_CODE, value) = false) Then
				Me.OnGENERICDRUGS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_CODE = value
				Me.SendPropertyChanged("GENERICDRUGS_CODE")
				Me.OnGENERICDRUGS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_GENERICNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GENERICDRUGS_GENERICNAME() As String
		Get
			Return Me._GENERICDRUGS_GENERICNAME
		End Get
		Set
			If (String.Equals(Me._GENERICDRUGS_GENERICNAME, value) = false) Then
				Me.OnGENERICDRUGS_GENERICNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_GENERICNAME = value
				Me.SendPropertyChanged("GENERICDRUGS_GENERICNAME")
				Me.OnGENERICDRUGS_GENERICNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GENERICDRUGS_ENNAME() As String
		Get
			Return Me._GENERICDRUGS_ENNAME
		End Get
		Set
			If (String.Equals(Me._GENERICDRUGS_ENNAME, value) = false) Then
				Me.OnGENERICDRUGS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_ENNAME = value
				Me.SendPropertyChanged("GENERICDRUGS_ENNAME")
				Me.OnGENERICDRUGS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property GENERICDRUGS_NOTE() As String
		Get
			Return Me._GENERICDRUGS_NOTE
		End Get
		Set
			If (String.Equals(Me._GENERICDRUGS_NOTE, value) = false) Then
				Me.OnGENERICDRUGS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_NOTE = value
				Me.SendPropertyChanged("GENERICDRUGS_NOTE")
				Me.OnGENERICDRUGS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERICDRUGS_ISDISABLED", DbType:="Int")>  _
	Public Property GENERICDRUGS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._GENERICDRUGS_ISDISABLED
		End Get
		Set
			If (Me._GENERICDRUGS_ISDISABLED.Equals(value) = false) Then
				Me.OnGENERICDRUGS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._GENERICDRUGS_ISDISABLED = value
				Me.SendPropertyChanged("GENERICDRUGS_ISDISABLED")
				Me.OnGENERICDRUGS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GROUPCOST")>  _
Partial Public Class MAS_GROUPCOST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GROUPCOST_ID As Integer
	
	Private _GROUPCOST_CODE As String
	
	Private _GROUPCOST_NAME As String
	
	Private _GROUPCOST_ENNAME As String
	
	Private _GROUPCOST_NOTE As String
	
	Private _GROUPCOST_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGROUPCOST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGROUPCOST_IDChanged()
    End Sub
    Partial Private Sub OnGROUPCOST_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPCOST_CODEChanged()
    End Sub
    Partial Private Sub OnGROUPCOST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPCOST_NAMEChanged()
    End Sub
    Partial Private Sub OnGROUPCOST_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPCOST_ENNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPCOST_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPCOST_NOTEChanged()
    End Sub
    Partial Private Sub OnGROUPCOST_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPCOST_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GROUPCOST_ID() As Integer
		Get
			Return Me._GROUPCOST_ID
		End Get
		Set
			If ((Me._GROUPCOST_ID = value)  _
						= false) Then
				Me.OnGROUPCOST_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_ID = value
				Me.SendPropertyChanged("GROUPCOST_ID")
				Me.OnGROUPCOST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPCOST_CODE() As String
		Get
			Return Me._GROUPCOST_CODE
		End Get
		Set
			If (String.Equals(Me._GROUPCOST_CODE, value) = false) Then
				Me.OnGROUPCOST_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_CODE = value
				Me.SendPropertyChanged("GROUPCOST_CODE")
				Me.OnGROUPCOST_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPCOST_NAME() As String
		Get
			Return Me._GROUPCOST_NAME
		End Get
		Set
			If (String.Equals(Me._GROUPCOST_NAME, value) = false) Then
				Me.OnGROUPCOST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_NAME = value
				Me.SendPropertyChanged("GROUPCOST_NAME")
				Me.OnGROUPCOST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPCOST_ENNAME() As String
		Get
			Return Me._GROUPCOST_ENNAME
		End Get
		Set
			If (String.Equals(Me._GROUPCOST_ENNAME, value) = false) Then
				Me.OnGROUPCOST_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_ENNAME = value
				Me.SendPropertyChanged("GROUPCOST_ENNAME")
				Me.OnGROUPCOST_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPCOST_NOTE() As String
		Get
			Return Me._GROUPCOST_NOTE
		End Get
		Set
			If (String.Equals(Me._GROUPCOST_NOTE, value) = false) Then
				Me.OnGROUPCOST_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_NOTE = value
				Me.SendPropertyChanged("GROUPCOST_NOTE")
				Me.OnGROUPCOST_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPCOST_ISDISABLED", DbType:="Int")>  _
	Public Property GROUPCOST_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPCOST_ISDISABLED
		End Get
		Set
			If (Me._GROUPCOST_ISDISABLED.Equals(value) = false) Then
				Me.OnGROUPCOST_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPCOST_ISDISABLED = value
				Me.SendPropertyChanged("GROUPCOST_ISDISABLED")
				Me.OnGROUPCOST_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GROUPITEM_MAIN")>  _
Partial Public Class MAS_GROUPITEM_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GROUPITEM_MAIN_ID As Integer
	
	Private _GROUPITEM_MAIN_KEY As System.Nullable(Of Integer)
	
	Private _GROUPITEM_MAIN_CODE As String
	
	Private _GROUPITEM_MAIN_ITEMGROUPNAME As String
	
	Private _GROUPITEM_MAIN_NOTE As String
	
	Private _GROUPITEM_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _GROUPITEM_MAIN_ITEMTYPEKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_KEYChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ITEMGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ITEMGROUPNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ITEMTYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPITEM_MAIN_ITEMTYPEKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GROUPITEM_MAIN_ID() As Integer
		Get
			Return Me._GROUPITEM_MAIN_ID
		End Get
		Set
			If ((Me._GROUPITEM_MAIN_ID = value)  _
						= false) Then
				Me.OnGROUPITEM_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_ID = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_ID")
				Me.OnGROUPITEM_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_KEY", DbType:="Int")>  _
	Public Property GROUPITEM_MAIN_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPITEM_MAIN_KEY
		End Get
		Set
			If (Me._GROUPITEM_MAIN_KEY.Equals(value) = false) Then
				Me.OnGROUPITEM_MAIN_KEYChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_KEY = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_KEY")
				Me.OnGROUPITEM_MAIN_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property GROUPITEM_MAIN_CODE() As String
		Get
			Return Me._GROUPITEM_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._GROUPITEM_MAIN_CODE, value) = false) Then
				Me.OnGROUPITEM_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_CODE = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_CODE")
				Me.OnGROUPITEM_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_ITEMGROUPNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPITEM_MAIN_ITEMGROUPNAME() As String
		Get
			Return Me._GROUPITEM_MAIN_ITEMGROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPITEM_MAIN_ITEMGROUPNAME, value) = false) Then
				Me.OnGROUPITEM_MAIN_ITEMGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_ITEMGROUPNAME = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_ITEMGROUPNAME")
				Me.OnGROUPITEM_MAIN_ITEMGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPITEM_MAIN_NOTE() As String
		Get
			Return Me._GROUPITEM_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._GROUPITEM_MAIN_NOTE, value) = false) Then
				Me.OnGROUPITEM_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_NOTE = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_NOTE")
				Me.OnGROUPITEM_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property GROUPITEM_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPITEM_MAIN_ISDISABLED
		End Get
		Set
			If (Me._GROUPITEM_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnGROUPITEM_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_ISDISABLED")
				Me.OnGROUPITEM_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPITEM_MAIN_ITEMTYPEKEY", DbType:="Int")>  _
	Public Property GROUPITEM_MAIN_ITEMTYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPITEM_MAIN_ITEMTYPEKEY
		End Get
		Set
			If (Me._GROUPITEM_MAIN_ITEMTYPEKEY.Equals(value) = false) Then
				Me.OnGROUPITEM_MAIN_ITEMTYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._GROUPITEM_MAIN_ITEMTYPEKEY = value
				Me.SendPropertyChanged("GROUPITEM_MAIN_ITEMTYPEKEY")
				Me.OnGROUPITEM_MAIN_ITEMTYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GROUPMEDICAL_SUPPLIES")>  _
Partial Public Class MAS_GROUPMEDICAL_SUPPLy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GROUPMEDICAL_SUPPLIES_ID As Integer
	
	Private _GROUPMEDICAL_SUPPLIES_CODE As String
	
	Private _GROUPMEDICAL_SUPPLIES_MEDICALNAME As String
	
	Private _GROUPMEDICAL_SUPPLIES_ENNAME As String
	
	Private _GROUPMEDICAL_SUPPLIES_NOTE As String
	
	Private _GROUPMEDICAL_SUPPLIES_ISDISABLED As System.Nullable(Of Integer)
	
	Private _GROUPMEDICAL_SUPPLIES_ORDER As String
	
	Private _GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_IDChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_CODEChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_MEDICALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_MEDICALNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ENNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_NOTEChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ORDERChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_ORDERChanged()
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_F12CHRGITEMKEYChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPMEDICAL_SUPPLIES_F12CHRGITEMKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GROUPMEDICAL_SUPPLIES_ID() As Integer
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_ID
		End Get
		Set
			If ((Me._GROUPMEDICAL_SUPPLIES_ID = value)  _
						= false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_ID = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_ID")
				Me.OnGROUPMEDICAL_SUPPLIES_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_CODE", DbType:="NVarChar(50)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_CODE() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_CODE
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_CODE, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_CODE = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_CODE")
				Me.OnGROUPMEDICAL_SUPPLIES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_MEDICALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_MEDICALNAME() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_MEDICALNAME
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_MEDICALNAME, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_MEDICALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_MEDICALNAME = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_MEDICALNAME")
				Me.OnGROUPMEDICAL_SUPPLIES_MEDICALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_ENNAME() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_ENNAME
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_ENNAME, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_ENNAME = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_ENNAME")
				Me.OnGROUPMEDICAL_SUPPLIES_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_NOTE() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_NOTE
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_NOTE, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_NOTE = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_NOTE")
				Me.OnGROUPMEDICAL_SUPPLIES_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_ISDISABLED", DbType:="Int")>  _
	Public Property GROUPMEDICAL_SUPPLIES_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_ISDISABLED
		End Get
		Set
			If (Me._GROUPMEDICAL_SUPPLIES_ISDISABLED.Equals(value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_ISDISABLED = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_ISDISABLED")
				Me.OnGROUPMEDICAL_SUPPLIES_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_ORDER", DbType:="NVarChar(50)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_ORDER() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_ORDER
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_ORDER, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_ORDERChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_ORDER = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_ORDER")
				Me.OnGROUPMEDICAL_SUPPLIES_ORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY", DbType:="NVarChar(50)")>  _
	Public Property GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY() As String
		Get
			Return Me._GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY
		End Get
		Set
			If (String.Equals(Me._GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY, value) = false) Then
				Me.OnGROUPMEDICAL_SUPPLIES_F12CHRGITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY = value
				Me.SendPropertyChanged("GROUPMEDICAL_SUPPLIES_F12CHRGITEMKEY")
				Me.OnGROUPMEDICAL_SUPPLIES_F12CHRGITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GROUPTYPE")>  _
Partial Public Class MAS_GROUPTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Blood_Type_ID As Integer
	
	Private _Blood_Type_Name As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBlood_Type_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBlood_Type_IDChanged()
    End Sub
    Partial Private Sub OnBlood_Type_NameChanging(value As String)
    End Sub
    Partial Private Sub OnBlood_Type_NameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Blood_Type_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Blood_Type_ID() As Integer
		Get
			Return Me._Blood_Type_ID
		End Get
		Set
			If ((Me._Blood_Type_ID = value)  _
						= false) Then
				Me.OnBlood_Type_IDChanging(value)
				Me.SendPropertyChanging
				Me._Blood_Type_ID = value
				Me.SendPropertyChanged("Blood_Type_ID")
				Me.OnBlood_Type_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Blood_Type_Name", DbType:="NVarChar(50)")>  _
	Public Property Blood_Type_Name() As String
		Get
			Return Me._Blood_Type_Name
		End Get
		Set
			If (String.Equals(Me._Blood_Type_Name, value) = false) Then
				Me.OnBlood_Type_NameChanging(value)
				Me.SendPropertyChanging
				Me._Blood_Type_Name = value
				Me.SendPropertyChanged("Blood_Type_Name")
				Me.OnBlood_Type_NameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HEALS")>  _
Partial Public Class MAS_HEAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HEALS_ID As Integer
	
	Private _HEALS_CODE As String
	
	Private _HEALS_HEALNAME As String
	
	Private _HEALS_ABBRNAME As String
	
	Private _HEALS_NOTE As String
	
	Private _HEALS_MCITEMGROUP As System.Nullable(Of Integer)
	
	Private _HEALS_ISAUTOASSIGN As System.Nullable(Of Integer)
	
	Private _HEALS_ISFORVISIT As System.Nullable(Of Integer)
	
	Private _HEALS_DEFMCPAYER As System.Nullable(Of Integer)
	
	Private _HEALS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _HEALS_MAXAMT As System.Nullable(Of Integer)
	
	Private _HEALS_PAIDBYHOSPITAL As System.Nullable(Of Integer)
	
	Private _HEALS_ISCGD As System.Nullable(Of Integer)
	
	Private _HEALS_ISMAIN As System.Nullable(Of Integer)
	
	Private _HEALS_DRGBASERATE As System.Nullable(Of Integer)
	
	Private _HEALS_F12PTTYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHEALS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHEALS_IDChanged()
    End Sub
    Partial Private Sub OnHEALS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALS_CODEChanged()
    End Sub
    Partial Private Sub OnHEALS_HEALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALS_HEALNAMEChanged()
    End Sub
    Partial Private Sub OnHEALS_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALS_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnHEALS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALS_NOTEChanged()
    End Sub
    Partial Private Sub OnHEALS_MCITEMGROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_MCITEMGROUPChanged()
    End Sub
    Partial Private Sub OnHEALS_ISAUTOASSIGNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_ISAUTOASSIGNChanged()
    End Sub
    Partial Private Sub OnHEALS_ISFORVISITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_ISFORVISITChanged()
    End Sub
    Partial Private Sub OnHEALS_DEFMCPAYERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_DEFMCPAYERChanged()
    End Sub
    Partial Private Sub OnHEALS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnHEALS_MAXAMTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_MAXAMTChanged()
    End Sub
    Partial Private Sub OnHEALS_PAIDBYHOSPITALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_PAIDBYHOSPITALChanged()
    End Sub
    Partial Private Sub OnHEALS_ISCGDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_ISCGDChanged()
    End Sub
    Partial Private Sub OnHEALS_ISMAINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_ISMAINChanged()
    End Sub
    Partial Private Sub OnHEALS_DRGBASERATEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_DRGBASERATEChanged()
    End Sub
    Partial Private Sub OnHEALS_F12PTTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALS_F12PTTYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HEALS_ID() As Integer
		Get
			Return Me._HEALS_ID
		End Get
		Set
			If ((Me._HEALS_ID = value)  _
						= false) Then
				Me.OnHEALS_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ID = value
				Me.SendPropertyChanged("HEALS_ID")
				Me.OnHEALS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_CODE", DbType:="NVarChar(50)")>  _
	Public Property HEALS_CODE() As String
		Get
			Return Me._HEALS_CODE
		End Get
		Set
			If (String.Equals(Me._HEALS_CODE, value) = false) Then
				Me.OnHEALS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_CODE = value
				Me.SendPropertyChanged("HEALS_CODE")
				Me.OnHEALS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_HEALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HEALS_HEALNAME() As String
		Get
			Return Me._HEALS_HEALNAME
		End Get
		Set
			If (String.Equals(Me._HEALS_HEALNAME, value) = false) Then
				Me.OnHEALS_HEALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_HEALNAME = value
				Me.SendPropertyChanged("HEALS_HEALNAME")
				Me.OnHEALS_HEALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ABBRNAME", DbType:="NVarChar(50)")>  _
	Public Property HEALS_ABBRNAME() As String
		Get
			Return Me._HEALS_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._HEALS_ABBRNAME, value) = false) Then
				Me.OnHEALS_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ABBRNAME = value
				Me.SendPropertyChanged("HEALS_ABBRNAME")
				Me.OnHEALS_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property HEALS_NOTE() As String
		Get
			Return Me._HEALS_NOTE
		End Get
		Set
			If (String.Equals(Me._HEALS_NOTE, value) = false) Then
				Me.OnHEALS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_NOTE = value
				Me.SendPropertyChanged("HEALS_NOTE")
				Me.OnHEALS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_MCITEMGROUP", DbType:="Int")>  _
	Public Property HEALS_MCITEMGROUP() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_MCITEMGROUP
		End Get
		Set
			If (Me._HEALS_MCITEMGROUP.Equals(value) = false) Then
				Me.OnHEALS_MCITEMGROUPChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_MCITEMGROUP = value
				Me.SendPropertyChanged("HEALS_MCITEMGROUP")
				Me.OnHEALS_MCITEMGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ISAUTOASSIGN", DbType:="Int")>  _
	Public Property HEALS_ISAUTOASSIGN() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_ISAUTOASSIGN
		End Get
		Set
			If (Me._HEALS_ISAUTOASSIGN.Equals(value) = false) Then
				Me.OnHEALS_ISAUTOASSIGNChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ISAUTOASSIGN = value
				Me.SendPropertyChanged("HEALS_ISAUTOASSIGN")
				Me.OnHEALS_ISAUTOASSIGNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ISFORVISIT", DbType:="Int")>  _
	Public Property HEALS_ISFORVISIT() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_ISFORVISIT
		End Get
		Set
			If (Me._HEALS_ISFORVISIT.Equals(value) = false) Then
				Me.OnHEALS_ISFORVISITChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ISFORVISIT = value
				Me.SendPropertyChanged("HEALS_ISFORVISIT")
				Me.OnHEALS_ISFORVISITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_DEFMCPAYER", DbType:="Int")>  _
	Public Property HEALS_DEFMCPAYER() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_DEFMCPAYER
		End Get
		Set
			If (Me._HEALS_DEFMCPAYER.Equals(value) = false) Then
				Me.OnHEALS_DEFMCPAYERChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_DEFMCPAYER = value
				Me.SendPropertyChanged("HEALS_DEFMCPAYER")
				Me.OnHEALS_DEFMCPAYERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ISDISABLED", DbType:="Int")>  _
	Public Property HEALS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_ISDISABLED
		End Get
		Set
			If (Me._HEALS_ISDISABLED.Equals(value) = false) Then
				Me.OnHEALS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ISDISABLED = value
				Me.SendPropertyChanged("HEALS_ISDISABLED")
				Me.OnHEALS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_MAXAMT", DbType:="Int")>  _
	Public Property HEALS_MAXAMT() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_MAXAMT
		End Get
		Set
			If (Me._HEALS_MAXAMT.Equals(value) = false) Then
				Me.OnHEALS_MAXAMTChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_MAXAMT = value
				Me.SendPropertyChanged("HEALS_MAXAMT")
				Me.OnHEALS_MAXAMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_PAIDBYHOSPITAL", DbType:="Int")>  _
	Public Property HEALS_PAIDBYHOSPITAL() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_PAIDBYHOSPITAL
		End Get
		Set
			If (Me._HEALS_PAIDBYHOSPITAL.Equals(value) = false) Then
				Me.OnHEALS_PAIDBYHOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_PAIDBYHOSPITAL = value
				Me.SendPropertyChanged("HEALS_PAIDBYHOSPITAL")
				Me.OnHEALS_PAIDBYHOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ISCGD", DbType:="Int")>  _
	Public Property HEALS_ISCGD() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_ISCGD
		End Get
		Set
			If (Me._HEALS_ISCGD.Equals(value) = false) Then
				Me.OnHEALS_ISCGDChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ISCGD = value
				Me.SendPropertyChanged("HEALS_ISCGD")
				Me.OnHEALS_ISCGDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_ISMAIN", DbType:="Int")>  _
	Public Property HEALS_ISMAIN() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_ISMAIN
		End Get
		Set
			If (Me._HEALS_ISMAIN.Equals(value) = false) Then
				Me.OnHEALS_ISMAINChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_ISMAIN = value
				Me.SendPropertyChanged("HEALS_ISMAIN")
				Me.OnHEALS_ISMAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_DRGBASERATE", DbType:="Int")>  _
	Public Property HEALS_DRGBASERATE() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_DRGBASERATE
		End Get
		Set
			If (Me._HEALS_DRGBASERATE.Equals(value) = false) Then
				Me.OnHEALS_DRGBASERATEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_DRGBASERATE = value
				Me.SendPropertyChanged("HEALS_DRGBASERATE")
				Me.OnHEALS_DRGBASERATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALS_F12PTTYPE", DbType:="Int")>  _
	Public Property HEALS_F12PTTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._HEALS_F12PTTYPE
		End Get
		Set
			If (Me._HEALS_F12PTTYPE.Equals(value) = false) Then
				Me.OnHEALS_F12PTTYPEChanging(value)
				Me.SendPropertyChanging
				Me._HEALS_F12PTTYPE = value
				Me.SendPropertyChanged("HEALS_F12PTTYPE")
				Me.OnHEALS_F12PTTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HEALTHREGION")>  _
Partial Public Class MAS_HEALTHREGION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HEALTHREGION_ID As Integer
	
	Private _HEALTHREGION_CODE As String
	
	Private _HEALTHREGION_HEALTHNAME As String
	
	Private _HEALTHREGION_ENNAME As String
	
	Private _HEALTHREGION_NOTE As String
	
	Private _HEALTHREGION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHEALTHREGION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHEALTHREGION_IDChanged()
    End Sub
    Partial Private Sub OnHEALTHREGION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALTHREGION_CODEChanged()
    End Sub
    Partial Private Sub OnHEALTHREGION_HEALTHNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALTHREGION_HEALTHNAMEChanged()
    End Sub
    Partial Private Sub OnHEALTHREGION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALTHREGION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnHEALTHREGION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnHEALTHREGION_NOTEChanged()
    End Sub
    Partial Private Sub OnHEALTHREGION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEALTHREGION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HEALTHREGION_ID() As Integer
		Get
			Return Me._HEALTHREGION_ID
		End Get
		Set
			If ((Me._HEALTHREGION_ID = value)  _
						= false) Then
				Me.OnHEALTHREGION_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_ID = value
				Me.SendPropertyChanged("HEALTHREGION_ID")
				Me.OnHEALTHREGION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_CODE", DbType:="NVarChar(50)")>  _
	Public Property HEALTHREGION_CODE() As String
		Get
			Return Me._HEALTHREGION_CODE
		End Get
		Set
			If (String.Equals(Me._HEALTHREGION_CODE, value) = false) Then
				Me.OnHEALTHREGION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_CODE = value
				Me.SendPropertyChanged("HEALTHREGION_CODE")
				Me.OnHEALTHREGION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_HEALTHNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HEALTHREGION_HEALTHNAME() As String
		Get
			Return Me._HEALTHREGION_HEALTHNAME
		End Get
		Set
			If (String.Equals(Me._HEALTHREGION_HEALTHNAME, value) = false) Then
				Me.OnHEALTHREGION_HEALTHNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_HEALTHNAME = value
				Me.SendPropertyChanged("HEALTHREGION_HEALTHNAME")
				Me.OnHEALTHREGION_HEALTHNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HEALTHREGION_ENNAME() As String
		Get
			Return Me._HEALTHREGION_ENNAME
		End Get
		Set
			If (String.Equals(Me._HEALTHREGION_ENNAME, value) = false) Then
				Me.OnHEALTHREGION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_ENNAME = value
				Me.SendPropertyChanged("HEALTHREGION_ENNAME")
				Me.OnHEALTHREGION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property HEALTHREGION_NOTE() As String
		Get
			Return Me._HEALTHREGION_NOTE
		End Get
		Set
			If (String.Equals(Me._HEALTHREGION_NOTE, value) = false) Then
				Me.OnHEALTHREGION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_NOTE = value
				Me.SendPropertyChanged("HEALTHREGION_NOTE")
				Me.OnHEALTHREGION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEALTHREGION_ISDISABLED", DbType:="Int")>  _
	Public Property HEALTHREGION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HEALTHREGION_ISDISABLED
		End Get
		Set
			If (Me._HEALTHREGION_ISDISABLED.Equals(value) = false) Then
				Me.OnHEALTHREGION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HEALTHREGION_ISDISABLED = value
				Me.SendPropertyChanged("HEALTHREGION_ISDISABLED")
				Me.OnHEALTHREGION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HISTORY_MEDICALPRICE")>  _
Partial Public Class MAS_HISTORY_MEDICALPRICE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HISTORY_MEDICALPRICE_ID As Integer
	
	Private _HISTORY_MEDICALPRICE_CDGITEMKEY As System.Nullable(Of Integer)
	
	Private _HISTORY_MEDICALPRICE_UNITPRICE As String
	
	Private _HISTORY_MEDICALPRICE_FROMDT As String
	
	Private _HISTORY_MEDICALPRICE_TODT As String
	
	Private _HISTORY_MEDICALPRICE_TRANDT As String
	
	Private _HISTORY_MEDICALPRICE_UPDATEKEY As String
	
	Private _HISTORY_MEDICALPRICE_DOCID As String
	
	Private _HISTORY_MEDICALPRICE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_IDChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_CDGITEMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_CDGITEMKEYChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_UNITPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_UNITPRICEChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_FROMDTChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_FROMDTChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_TODTChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_TODTChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_TRANDTChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_TRANDTChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_UPDATEKEYChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_UPDATEKEYChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_DOCIDChanging(value As String)
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_DOCIDChanged()
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHISTORY_MEDICALPRICE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HISTORY_MEDICALPRICE_ID() As Integer
		Get
			Return Me._HISTORY_MEDICALPRICE_ID
		End Get
		Set
			If ((Me._HISTORY_MEDICALPRICE_ID = value)  _
						= false) Then
				Me.OnHISTORY_MEDICALPRICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_ID = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_ID")
				Me.OnHISTORY_MEDICALPRICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_CDGITEMKEY", DbType:="Int")>  _
	Public Property HISTORY_MEDICALPRICE_CDGITEMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._HISTORY_MEDICALPRICE_CDGITEMKEY
		End Get
		Set
			If (Me._HISTORY_MEDICALPRICE_CDGITEMKEY.Equals(value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_CDGITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_CDGITEMKEY = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_CDGITEMKEY")
				Me.OnHISTORY_MEDICALPRICE_CDGITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_UNITPRICE", DbType:="NVarChar(200)")>  _
	Public Property HISTORY_MEDICALPRICE_UNITPRICE() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_UNITPRICE
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_UNITPRICE, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_UNITPRICEChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_UNITPRICE = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_UNITPRICE")
				Me.OnHISTORY_MEDICALPRICE_UNITPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_FROMDT", DbType:="NVarChar(50)")>  _
	Public Property HISTORY_MEDICALPRICE_FROMDT() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_FROMDT
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_FROMDT, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_FROMDTChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_FROMDT = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_FROMDT")
				Me.OnHISTORY_MEDICALPRICE_FROMDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_TODT", DbType:="NVarChar(50)")>  _
	Public Property HISTORY_MEDICALPRICE_TODT() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_TODT
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_TODT, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_TODTChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_TODT = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_TODT")
				Me.OnHISTORY_MEDICALPRICE_TODTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_TRANDT", DbType:="NVarChar(50)")>  _
	Public Property HISTORY_MEDICALPRICE_TRANDT() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_TRANDT
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_TRANDT, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_TRANDTChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_TRANDT = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_TRANDT")
				Me.OnHISTORY_MEDICALPRICE_TRANDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_UPDATEKEY", DbType:="NVarChar(50)")>  _
	Public Property HISTORY_MEDICALPRICE_UPDATEKEY() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_UPDATEKEY
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_UPDATEKEY, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_UPDATEKEYChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_UPDATEKEY = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_UPDATEKEY")
				Me.OnHISTORY_MEDICALPRICE_UPDATEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_DOCID", DbType:="NVarChar(50)")>  _
	Public Property HISTORY_MEDICALPRICE_DOCID() As String
		Get
			Return Me._HISTORY_MEDICALPRICE_DOCID
		End Get
		Set
			If (String.Equals(Me._HISTORY_MEDICALPRICE_DOCID, value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_DOCIDChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_DOCID = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_DOCID")
				Me.OnHISTORY_MEDICALPRICE_DOCIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HISTORY_MEDICALPRICE_ISDISABLED", DbType:="Int")>  _
	Public Property HISTORY_MEDICALPRICE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HISTORY_MEDICALPRICE_ISDISABLED
		End Get
		Set
			If (Me._HISTORY_MEDICALPRICE_ISDISABLED.Equals(value) = false) Then
				Me.OnHISTORY_MEDICALPRICE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HISTORY_MEDICALPRICE_ISDISABLED = value
				Me.SendPropertyChanged("HISTORY_MEDICALPRICE_ISDISABLED")
				Me.OnHISTORY_MEDICALPRICE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOLIDAYDATE")>  _
Partial Public Class MAS_HOLIDAYDATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOLIDAYDATE_ID As Integer
	
	Private _HOLIDAYDATE_HOLIDAYDATE As System.Nullable(Of Date)
	
	Private _HOLIDAYDATE_HOLIDAYNAME As String
	
	Private _HOLIDAYDATE_ENNAME As String
	
	Private _HOLIDAYDATE_NOTE As String
	
	Private _HOLIDAYDATE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOLIDAYDATE_IDChanged()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_HOLIDAYDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnHOLIDAYDATE_HOLIDAYDATEChanged()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_HOLIDAYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOLIDAYDATE_HOLIDAYNAMEChanged()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOLIDAYDATE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnHOLIDAYDATE_NOTEChanged()
    End Sub
    Partial Private Sub OnHOLIDAYDATE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOLIDAYDATE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOLIDAYDATE_ID() As Integer
		Get
			Return Me._HOLIDAYDATE_ID
		End Get
		Set
			If ((Me._HOLIDAYDATE_ID = value)  _
						= false) Then
				Me.OnHOLIDAYDATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_ID = value
				Me.SendPropertyChanged("HOLIDAYDATE_ID")
				Me.OnHOLIDAYDATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_HOLIDAYDATE", DbType:="Date")>  _
	Public Property HOLIDAYDATE_HOLIDAYDATE() As System.Nullable(Of Date)
		Get
			Return Me._HOLIDAYDATE_HOLIDAYDATE
		End Get
		Set
			If (Me._HOLIDAYDATE_HOLIDAYDATE.Equals(value) = false) Then
				Me.OnHOLIDAYDATE_HOLIDAYDATEChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_HOLIDAYDATE = value
				Me.SendPropertyChanged("HOLIDAYDATE_HOLIDAYDATE")
				Me.OnHOLIDAYDATE_HOLIDAYDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_HOLIDAYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOLIDAYDATE_HOLIDAYNAME() As String
		Get
			Return Me._HOLIDAYDATE_HOLIDAYNAME
		End Get
		Set
			If (String.Equals(Me._HOLIDAYDATE_HOLIDAYNAME, value) = false) Then
				Me.OnHOLIDAYDATE_HOLIDAYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_HOLIDAYNAME = value
				Me.SendPropertyChanged("HOLIDAYDATE_HOLIDAYNAME")
				Me.OnHOLIDAYDATE_HOLIDAYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOLIDAYDATE_ENNAME() As String
		Get
			Return Me._HOLIDAYDATE_ENNAME
		End Get
		Set
			If (String.Equals(Me._HOLIDAYDATE_ENNAME, value) = false) Then
				Me.OnHOLIDAYDATE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_ENNAME = value
				Me.SendPropertyChanged("HOLIDAYDATE_ENNAME")
				Me.OnHOLIDAYDATE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property HOLIDAYDATE_NOTE() As String
		Get
			Return Me._HOLIDAYDATE_NOTE
		End Get
		Set
			If (String.Equals(Me._HOLIDAYDATE_NOTE, value) = false) Then
				Me.OnHOLIDAYDATE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_NOTE = value
				Me.SendPropertyChanged("HOLIDAYDATE_NOTE")
				Me.OnHOLIDAYDATE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYDATE_ISDISABLED", DbType:="Int")>  _
	Public Property HOLIDAYDATE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HOLIDAYDATE_ISDISABLED
		End Get
		Set
			If (Me._HOLIDAYDATE_ISDISABLED.Equals(value) = false) Then
				Me.OnHOLIDAYDATE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HOLIDAYDATE_ISDISABLED = value
				Me.SendPropertyChanged("HOLIDAYDATE_ISDISABLED")
				Me.OnHOLIDAYDATE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOPITALMAIN")>  _
Partial Public Class MAS_HOPITALMAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOPITALMAIN_ID As Integer
	
	Private _HOPITALMAIN_CODE As String
	
	Private _HOPITALMAIN_NAME As String
	
	Private _HOPITALMAIN_ENNAME As String
	
	Private _HOPITALMAIN_NOTE As String
	
	Private _HOPITALMAIN_SYS As String
	
	Private _HOPITALMAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOPITALMAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOPITALMAIN_IDChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnHOPITALMAIN_CODEChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOPITALMAIN_NAMEChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOPITALMAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnHOPITALMAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_SYSChanging(value As String)
    End Sub
    Partial Private Sub OnHOPITALMAIN_SYSChanged()
    End Sub
    Partial Private Sub OnHOPITALMAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOPITALMAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOPITALMAIN_ID() As Integer
		Get
			Return Me._HOPITALMAIN_ID
		End Get
		Set
			If ((Me._HOPITALMAIN_ID = value)  _
						= false) Then
				Me.OnHOPITALMAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_ID = value
				Me.SendPropertyChanged("HOPITALMAIN_ID")
				Me.OnHOPITALMAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property HOPITALMAIN_CODE() As String
		Get
			Return Me._HOPITALMAIN_CODE
		End Get
		Set
			If (String.Equals(Me._HOPITALMAIN_CODE, value) = false) Then
				Me.OnHOPITALMAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_CODE = value
				Me.SendPropertyChanged("HOPITALMAIN_CODE")
				Me.OnHOPITALMAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOPITALMAIN_NAME() As String
		Get
			Return Me._HOPITALMAIN_NAME
		End Get
		Set
			If (String.Equals(Me._HOPITALMAIN_NAME, value) = false) Then
				Me.OnHOPITALMAIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_NAME = value
				Me.SendPropertyChanged("HOPITALMAIN_NAME")
				Me.OnHOPITALMAIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOPITALMAIN_ENNAME() As String
		Get
			Return Me._HOPITALMAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._HOPITALMAIN_ENNAME, value) = false) Then
				Me.OnHOPITALMAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_ENNAME = value
				Me.SendPropertyChanged("HOPITALMAIN_ENNAME")
				Me.OnHOPITALMAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property HOPITALMAIN_NOTE() As String
		Get
			Return Me._HOPITALMAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._HOPITALMAIN_NOTE, value) = false) Then
				Me.OnHOPITALMAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_NOTE = value
				Me.SendPropertyChanged("HOPITALMAIN_NOTE")
				Me.OnHOPITALMAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_SYS", DbType:="NVarChar(MAX)")>  _
	Public Property HOPITALMAIN_SYS() As String
		Get
			Return Me._HOPITALMAIN_SYS
		End Get
		Set
			If (String.Equals(Me._HOPITALMAIN_SYS, value) = false) Then
				Me.OnHOPITALMAIN_SYSChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_SYS = value
				Me.SendPropertyChanged("HOPITALMAIN_SYS")
				Me.OnHOPITALMAIN_SYSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOPITALMAIN_ISDISABLED", DbType:="Int")>  _
	Public Property HOPITALMAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HOPITALMAIN_ISDISABLED
		End Get
		Set
			If (Me._HOPITALMAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnHOPITALMAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HOPITALMAIN_ISDISABLED = value
				Me.SendPropertyChanged("HOPITALMAIN_ISDISABLED")
				Me.OnHOPITALMAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Hospital")>  _
Partial Public Class MAS_Hospital
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Hospital As System.Nullable(Of Integer)
	
	Private _Hospital_Name As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_HospitalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_HospitalChanged()
    End Sub
    Partial Private Sub OnHospital_NameChanging(value As String)
    End Sub
    Partial Private Sub OnHospital_NameChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Hospital", DbType:="Int")>  _
	Public Property ID_Hospital() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Hospital
		End Get
		Set
			If (Me._ID_Hospital.Equals(value) = false) Then
				Me.OnID_HospitalChanging(value)
				Me.SendPropertyChanging
				Me._ID_Hospital = value
				Me.SendPropertyChanged("ID_Hospital")
				Me.OnID_HospitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hospital_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Hospital_Name() As String
		Get
			Return Me._Hospital_Name
		End Get
		Set
			If (String.Equals(Me._Hospital_Name, value) = false) Then
				Me.OnHospital_NameChanging(value)
				Me.SendPropertyChanging
				Me._Hospital_Name = value
				Me.SendPropertyChanged("Hospital_Name")
				Me.OnHospital_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOSPITALCATEGORY")>  _
Partial Public Class MAS_HOSPITALCATEGORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOSPITALCATEGORY_ID As Integer
	
	Private _HOSPITALCATEGORY_CODE As String
	
	Private _HOSPITALCATEGORY_HOSPITALCATEGORYNAME As String
	
	Private _HOSPITALCATEGORY_ENNAME As String
	
	Private _HOSPITALCATEGORY_NOTE As String
	
	Private _HOSPITALCATEGORY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _HOSPITALCATEGORY_F18HOSPITALTYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_IDChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_CODEChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_HOSPITALCATEGORYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_HOSPITALCATEGORYNAMEChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_NOTEChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_F18HOSPITALTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOSPITALCATEGORY_F18HOSPITALTYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOSPITALCATEGORY_ID() As Integer
		Get
			Return Me._HOSPITALCATEGORY_ID
		End Get
		Set
			If ((Me._HOSPITALCATEGORY_ID = value)  _
						= false) Then
				Me.OnHOSPITALCATEGORY_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_ID = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_ID")
				Me.OnHOSPITALCATEGORY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_CODE", DbType:="NVarChar(50)")>  _
	Public Property HOSPITALCATEGORY_CODE() As String
		Get
			Return Me._HOSPITALCATEGORY_CODE
		End Get
		Set
			If (String.Equals(Me._HOSPITALCATEGORY_CODE, value) = false) Then
				Me.OnHOSPITALCATEGORY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_CODE = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_CODE")
				Me.OnHOSPITALCATEGORY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_HOSPITALCATEGORYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOSPITALCATEGORY_HOSPITALCATEGORYNAME() As String
		Get
			Return Me._HOSPITALCATEGORY_HOSPITALCATEGORYNAME
		End Get
		Set
			If (String.Equals(Me._HOSPITALCATEGORY_HOSPITALCATEGORYNAME, value) = false) Then
				Me.OnHOSPITALCATEGORY_HOSPITALCATEGORYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_HOSPITALCATEGORYNAME = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_HOSPITALCATEGORYNAME")
				Me.OnHOSPITALCATEGORY_HOSPITALCATEGORYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property HOSPITALCATEGORY_ENNAME() As String
		Get
			Return Me._HOSPITALCATEGORY_ENNAME
		End Get
		Set
			If (String.Equals(Me._HOSPITALCATEGORY_ENNAME, value) = false) Then
				Me.OnHOSPITALCATEGORY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_ENNAME = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_ENNAME")
				Me.OnHOSPITALCATEGORY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property HOSPITALCATEGORY_NOTE() As String
		Get
			Return Me._HOSPITALCATEGORY_NOTE
		End Get
		Set
			If (String.Equals(Me._HOSPITALCATEGORY_NOTE, value) = false) Then
				Me.OnHOSPITALCATEGORY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_NOTE = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_NOTE")
				Me.OnHOSPITALCATEGORY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_ISDISABLED", DbType:="Int")>  _
	Public Property HOSPITALCATEGORY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._HOSPITALCATEGORY_ISDISABLED
		End Get
		Set
			If (Me._HOSPITALCATEGORY_ISDISABLED.Equals(value) = false) Then
				Me.OnHOSPITALCATEGORY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_ISDISABLED = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_ISDISABLED")
				Me.OnHOSPITALCATEGORY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALCATEGORY_F18HOSPITALTYPE", DbType:="Int")>  _
	Public Property HOSPITALCATEGORY_F18HOSPITALTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._HOSPITALCATEGORY_F18HOSPITALTYPE
		End Get
		Set
			If (Me._HOSPITALCATEGORY_F18HOSPITALTYPE.Equals(value) = false) Then
				Me.OnHOSPITALCATEGORY_F18HOSPITALTYPEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALCATEGORY_F18HOSPITALTYPE = value
				Me.SendPropertyChanged("HOSPITALCATEGORY_F18HOSPITALTYPE")
				Me.OnHOSPITALCATEGORY_F18HOSPITALTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOUSETYPE")>  _
Partial Public Class MAS_HOUSETYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOUSETYPE_ID As Integer
	
	Private _HOUSETYPE_CODE As System.Nullable(Of Integer)
	
	Private _HOUSETYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOUSETYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOUSETYPE_IDChanged()
    End Sub
    Partial Private Sub OnHOUSETYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOUSETYPE_CODEChanged()
    End Sub
    Partial Private Sub OnHOUSETYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSETYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOUSETYPE_ID() As Integer
		Get
			Return Me._HOUSETYPE_ID
		End Get
		Set
			If ((Me._HOUSETYPE_ID = value)  _
						= false) Then
				Me.OnHOUSETYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_ID = value
				Me.SendPropertyChanged("HOUSETYPE_ID")
				Me.OnHOUSETYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_CODE", DbType:="Int")>  _
	Public Property HOUSETYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._HOUSETYPE_CODE
		End Get
		Set
			If (Me._HOUSETYPE_CODE.Equals(value) = false) Then
				Me.OnHOUSETYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_CODE = value
				Me.SendPropertyChanged("HOUSETYPE_CODE")
				Me.OnHOUSETYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property HOUSETYPE_DESCRIPTION() As String
		Get
			Return Me._HOUSETYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._HOUSETYPE_DESCRIPTION, value) = false) Then
				Me.OnHOUSETYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_DESCRIPTION = value
				Me.SendPropertyChanged("HOUSETYPE_DESCRIPTION")
				Me.OnHOUSETYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOUSETYPE_HOME")>  _
Partial Public Class MAS_HOUSETYPE_HOME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOUSETYPE_HOME_ID As Integer
	
	Private _HOUSETYPE_HOME_CODE As Integer
	
	Private _HOUSETYPE_HOME_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_IDChanged()
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_CODEChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_CODEChanged()
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSETYPE_HOME_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_HOME_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property HOUSETYPE_HOME_ID() As Integer
		Get
			Return Me._HOUSETYPE_HOME_ID
		End Get
		Set
			If ((Me._HOUSETYPE_HOME_ID = value)  _
						= false) Then
				Me.OnHOUSETYPE_HOME_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_HOME_ID = value
				Me.SendPropertyChanged("HOUSETYPE_HOME_ID")
				Me.OnHOUSETYPE_HOME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_HOME_CODE", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property HOUSETYPE_HOME_CODE() As Integer
		Get
			Return Me._HOUSETYPE_HOME_CODE
		End Get
		Set
			If ((Me._HOUSETYPE_HOME_CODE = value)  _
						= false) Then
				Me.OnHOUSETYPE_HOME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_HOME_CODE = value
				Me.SendPropertyChanged("HOUSETYPE_HOME_CODE")
				Me.OnHOUSETYPE_HOME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSETYPE_HOME_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property HOUSETYPE_HOME_DESCRIPTION() As String
		Get
			Return Me._HOUSETYPE_HOME_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._HOUSETYPE_HOME_DESCRIPTION, value) = false) Then
				Me.OnHOUSETYPE_HOME_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._HOUSETYPE_HOME_DESCRIPTION = value
				Me.SendPropertyChanged("HOUSETYPE_HOME_DESCRIPTION")
				Me.OnHOUSETYPE_HOME_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOUSING")>  _
Partial Public Class MAS_HOUSING
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOUSING_ID As Integer
	
	Private _HOUSING_CODE As System.Nullable(Of Integer)
	
	Private _HOUSING_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOUSING_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOUSING_IDChanged()
    End Sub
    Partial Private Sub OnHOUSING_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOUSING_CODEChanged()
    End Sub
    Partial Private Sub OnHOUSING_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSING_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSING_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOUSING_ID() As Integer
		Get
			Return Me._HOUSING_ID
		End Get
		Set
			If ((Me._HOUSING_ID = value)  _
						= false) Then
				Me.OnHOUSING_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOUSING_ID = value
				Me.SendPropertyChanged("HOUSING_ID")
				Me.OnHOUSING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSING_CODE", DbType:="Int")>  _
	Public Property HOUSING_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._HOUSING_CODE
		End Get
		Set
			If (Me._HOUSING_CODE.Equals(value) = false) Then
				Me.OnHOUSING_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOUSING_CODE = value
				Me.SendPropertyChanged("HOUSING_CODE")
				Me.OnHOUSING_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSING_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property HOUSING_DESCRIPTION() As String
		Get
			Return Me._HOUSING_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._HOUSING_DESCRIPTION, value) = false) Then
				Me.OnHOUSING_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._HOUSING_DESCRIPTION = value
				Me.SendPropertyChanged("HOUSING_DESCRIPTION")
				Me.OnHOUSING_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HOW_TO_PRICE")>  _
Partial Public Class MAS_HOW_TO_PRICE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HOW_TO_PRICE_ID As Integer
	
	Private _HOW_TO_PRICE_CODE As System.Nullable(Of Integer)
	
	Private _HOW_TO_PRICE_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_IDChanged()
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_CODEChanged()
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOW_TO_PRICE_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_TO_PRICE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HOW_TO_PRICE_ID() As Integer
		Get
			Return Me._HOW_TO_PRICE_ID
		End Get
		Set
			If ((Me._HOW_TO_PRICE_ID = value)  _
						= false) Then
				Me.OnHOW_TO_PRICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOW_TO_PRICE_ID = value
				Me.SendPropertyChanged("HOW_TO_PRICE_ID")
				Me.OnHOW_TO_PRICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_TO_PRICE_CODE", DbType:="Int")>  _
	Public Property HOW_TO_PRICE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._HOW_TO_PRICE_CODE
		End Get
		Set
			If (Me._HOW_TO_PRICE_CODE.Equals(value) = false) Then
				Me.OnHOW_TO_PRICE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOW_TO_PRICE_CODE = value
				Me.SendPropertyChanged("HOW_TO_PRICE_CODE")
				Me.OnHOW_TO_PRICE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_TO_PRICE_NAME", DbType:="VarChar(MAX)")>  _
	Public Property HOW_TO_PRICE_NAME() As String
		Get
			Return Me._HOW_TO_PRICE_NAME
		End Get
		Set
			If (String.Equals(Me._HOW_TO_PRICE_NAME, value) = false) Then
				Me.OnHOW_TO_PRICE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOW_TO_PRICE_NAME = value
				Me.SendPropertyChanged("HOW_TO_PRICE_NAME")
				Me.OnHOW_TO_PRICE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ICF")>  _
Partial Public Class MAS_ICF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICF_ID As Integer
	
	Private _ICF_ICF As String
	
	Private _ICF_DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICF_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnICF_IDChanged()
    End Sub
    Partial Private Sub OnICF_ICFChanging(value As String)
    End Sub
    Partial Private Sub OnICF_ICFChanged()
    End Sub
    Partial Private Sub OnICF_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnICF_DETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICF_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICF_ID() As Integer
		Get
			Return Me._ICF_ID
		End Get
		Set
			If ((Me._ICF_ID = value)  _
						= false) Then
				Me.OnICF_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICF_ID = value
				Me.SendPropertyChanged("ICF_ID")
				Me.OnICF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICF_ICF", DbType:="VarChar(MAX)")>  _
	Public Property ICF_ICF() As String
		Get
			Return Me._ICF_ICF
		End Get
		Set
			If (String.Equals(Me._ICF_ICF, value) = false) Then
				Me.OnICF_ICFChanging(value)
				Me.SendPropertyChanging
				Me._ICF_ICF = value
				Me.SendPropertyChanged("ICF_ICF")
				Me.OnICF_ICFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICF_DETAIL", DbType:="VarChar(MAX)")>  _
	Public Property ICF_DETAIL() As String
		Get
			Return Me._ICF_DETAIL
		End Get
		Set
			If (String.Equals(Me._ICF_DETAIL, value) = false) Then
				Me.OnICF_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ICF_DETAIL = value
				Me.SendPropertyChanged("ICF_DETAIL")
				Me.OnICF_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_IDENTITYBOOK")>  _
Partial Public Class MAS_IDENTITYBOOK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDENTITYBOOK_ID As Integer
	
	Private _IDENTITYBOOK_CODE As String
	
	Private _IDENTITYBOOK_IDENTITYNAME As String
	
	Private _IDENTITYBOOK_ENNAME As String
	
	Private _IDENTITYBOOK_NOTE As String
	
	Private _IDENTITYBOOK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDENTITYBOOK_IDChanged()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITYBOOK_CODEChanged()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_IDENTITYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITYBOOK_IDENTITYNAMEChanged()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITYBOOK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITYBOOK_NOTEChanged()
    End Sub
    Partial Private Sub OnIDENTITYBOOK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDENTITYBOOK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDENTITYBOOK_ID() As Integer
		Get
			Return Me._IDENTITYBOOK_ID
		End Get
		Set
			If ((Me._IDENTITYBOOK_ID = value)  _
						= false) Then
				Me.OnIDENTITYBOOK_IDChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_ID = value
				Me.SendPropertyChanged("IDENTITYBOOK_ID")
				Me.OnIDENTITYBOOK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_CODE", DbType:="NVarChar(50)")>  _
	Public Property IDENTITYBOOK_CODE() As String
		Get
			Return Me._IDENTITYBOOK_CODE
		End Get
		Set
			If (String.Equals(Me._IDENTITYBOOK_CODE, value) = false) Then
				Me.OnIDENTITYBOOK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_CODE = value
				Me.SendPropertyChanged("IDENTITYBOOK_CODE")
				Me.OnIDENTITYBOOK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_IDENTITYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTITYBOOK_IDENTITYNAME() As String
		Get
			Return Me._IDENTITYBOOK_IDENTITYNAME
		End Get
		Set
			If (String.Equals(Me._IDENTITYBOOK_IDENTITYNAME, value) = false) Then
				Me.OnIDENTITYBOOK_IDENTITYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_IDENTITYNAME = value
				Me.SendPropertyChanged("IDENTITYBOOK_IDENTITYNAME")
				Me.OnIDENTITYBOOK_IDENTITYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTITYBOOK_ENNAME() As String
		Get
			Return Me._IDENTITYBOOK_ENNAME
		End Get
		Set
			If (String.Equals(Me._IDENTITYBOOK_ENNAME, value) = false) Then
				Me.OnIDENTITYBOOK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_ENNAME = value
				Me.SendPropertyChanged("IDENTITYBOOK_ENNAME")
				Me.OnIDENTITYBOOK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTITYBOOK_NOTE() As String
		Get
			Return Me._IDENTITYBOOK_NOTE
		End Get
		Set
			If (String.Equals(Me._IDENTITYBOOK_NOTE, value) = false) Then
				Me.OnIDENTITYBOOK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_NOTE = value
				Me.SendPropertyChanged("IDENTITYBOOK_NOTE")
				Me.OnIDENTITYBOOK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYBOOK_ISDISABLED", DbType:="Int")>  _
	Public Property IDENTITYBOOK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._IDENTITYBOOK_ISDISABLED
		End Get
		Set
			If (Me._IDENTITYBOOK_ISDISABLED.Equals(value) = false) Then
				Me.OnIDENTITYBOOK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITYBOOK_ISDISABLED = value
				Me.SendPropertyChanged("IDENTITYBOOK_ISDISABLED")
				Me.OnIDENTITYBOOK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_INFORMANT")>  _
Partial Public Class MAS_INFORMANT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _INFORMANT_ID As Integer
	
	Private _INFORMANT_CODE As System.Nullable(Of Integer)
	
	Private _INFORMANT_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnINFORMANT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnINFORMANT_IDChanged()
    End Sub
    Partial Private Sub OnINFORMANT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINFORMANT_CODEChanged()
    End Sub
    Partial Private Sub OnINFORMANT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnINFORMANT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORMANT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property INFORMANT_ID() As Integer
		Get
			Return Me._INFORMANT_ID
		End Get
		Set
			If ((Me._INFORMANT_ID = value)  _
						= false) Then
				Me.OnINFORMANT_IDChanging(value)
				Me.SendPropertyChanging
				Me._INFORMANT_ID = value
				Me.SendPropertyChanged("INFORMANT_ID")
				Me.OnINFORMANT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORMANT_CODE", DbType:="Int")>  _
	Public Property INFORMANT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._INFORMANT_CODE
		End Get
		Set
			If (Me._INFORMANT_CODE.Equals(value) = false) Then
				Me.OnINFORMANT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._INFORMANT_CODE = value
				Me.SendPropertyChanged("INFORMANT_CODE")
				Me.OnINFORMANT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INFORMANT_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property INFORMANT_DESCRIPTION() As String
		Get
			Return Me._INFORMANT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._INFORMANT_DESCRIPTION, value) = false) Then
				Me.OnINFORMANT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._INFORMANT_DESCRIPTION = value
				Me.SendPropertyChanged("INFORMANT_DESCRIPTION")
				Me.OnINFORMANT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_INSTYPE_NEW")>  _
Partial Public Class MAS_INSTYPE_NEW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _INSTYPE_NEW_ID As Integer
	
	Private _INSTYPE_NEW_CODE As String
	
	Private _INSTYPE_NEW_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnINSTYPE_NEW_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnINSTYPE_NEW_IDChanged()
    End Sub
    Partial Private Sub OnINSTYPE_NEW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnINSTYPE_NEW_CODEChanged()
    End Sub
    Partial Private Sub OnINSTYPE_NEW_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnINSTYPE_NEW_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_NEW_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property INSTYPE_NEW_ID() As Integer
		Get
			Return Me._INSTYPE_NEW_ID
		End Get
		Set
			If ((Me._INSTYPE_NEW_ID = value)  _
						= false) Then
				Me.OnINSTYPE_NEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_NEW_ID = value
				Me.SendPropertyChanged("INSTYPE_NEW_ID")
				Me.OnINSTYPE_NEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_NEW_CODE", DbType:="VarChar(MAX)")>  _
	Public Property INSTYPE_NEW_CODE() As String
		Get
			Return Me._INSTYPE_NEW_CODE
		End Get
		Set
			If (String.Equals(Me._INSTYPE_NEW_CODE, value) = false) Then
				Me.OnINSTYPE_NEW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_NEW_CODE = value
				Me.SendPropertyChanged("INSTYPE_NEW_CODE")
				Me.OnINSTYPE_NEW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_NEW_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property INSTYPE_NEW_DESCRIPTION() As String
		Get
			Return Me._INSTYPE_NEW_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._INSTYPE_NEW_DESCRIPTION, value) = false) Then
				Me.OnINSTYPE_NEW_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_NEW_DESCRIPTION = value
				Me.SendPropertyChanged("INSTYPE_NEW_DESCRIPTION")
				Me.OnINSTYPE_NEW_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_INSTYPE_OLD")>  _
Partial Public Class MAS_INSTYPE_OLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _INSTYPE_OLD_ID As Integer
	
	Private _INSTYPE_OLD_CODE As System.Nullable(Of Integer)
	
	Private _INSTYPE_OLD_DESCRIPTION As String
	
	Private _INSTYPE_OLD_INSCL_DATEEXP As String
	
	Private _INSTYPE_OLD_MAININSCL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnINSTYPE_OLD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnINSTYPE_OLD_IDChanged()
    End Sub
    Partial Private Sub OnINSTYPE_OLD_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTYPE_OLD_CODEChanged()
    End Sub
    Partial Private Sub OnINSTYPE_OLD_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnINSTYPE_OLD_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnINSTYPE_OLD_INSCL_DATEEXPChanging(value As String)
    End Sub
    Partial Private Sub OnINSTYPE_OLD_INSCL_DATEEXPChanged()
    End Sub
    Partial Private Sub OnINSTYPE_OLD_MAININSCLChanging(value As String)
    End Sub
    Partial Private Sub OnINSTYPE_OLD_MAININSCLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_OLD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property INSTYPE_OLD_ID() As Integer
		Get
			Return Me._INSTYPE_OLD_ID
		End Get
		Set
			If ((Me._INSTYPE_OLD_ID = value)  _
						= false) Then
				Me.OnINSTYPE_OLD_IDChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_OLD_ID = value
				Me.SendPropertyChanged("INSTYPE_OLD_ID")
				Me.OnINSTYPE_OLD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_OLD_CODE", DbType:="Int")>  _
	Public Property INSTYPE_OLD_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._INSTYPE_OLD_CODE
		End Get
		Set
			If (Me._INSTYPE_OLD_CODE.Equals(value) = false) Then
				Me.OnINSTYPE_OLD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_OLD_CODE = value
				Me.SendPropertyChanged("INSTYPE_OLD_CODE")
				Me.OnINSTYPE_OLD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_OLD_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property INSTYPE_OLD_DESCRIPTION() As String
		Get
			Return Me._INSTYPE_OLD_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._INSTYPE_OLD_DESCRIPTION, value) = false) Then
				Me.OnINSTYPE_OLD_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_OLD_DESCRIPTION = value
				Me.SendPropertyChanged("INSTYPE_OLD_DESCRIPTION")
				Me.OnINSTYPE_OLD_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_OLD_INSCL_DATEEXP", DbType:="VarChar(MAX)")>  _
	Public Property INSTYPE_OLD_INSCL_DATEEXP() As String
		Get
			Return Me._INSTYPE_OLD_INSCL_DATEEXP
		End Get
		Set
			If (String.Equals(Me._INSTYPE_OLD_INSCL_DATEEXP, value) = false) Then
				Me.OnINSTYPE_OLD_INSCL_DATEEXPChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_OLD_INSCL_DATEEXP = value
				Me.SendPropertyChanged("INSTYPE_OLD_INSCL_DATEEXP")
				Me.OnINSTYPE_OLD_INSCL_DATEEXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTYPE_OLD_MAININSCL", DbType:="VarChar(MAX)")>  _
	Public Property INSTYPE_OLD_MAININSCL() As String
		Get
			Return Me._INSTYPE_OLD_MAININSCL
		End Get
		Set
			If (String.Equals(Me._INSTYPE_OLD_MAININSCL, value) = false) Then
				Me.OnINSTYPE_OLD_MAININSCLChanging(value)
				Me.SendPropertyChanging
				Me._INSTYPE_OLD_MAININSCL = value
				Me.SendPropertyChanged("INSTYPE_OLD_MAININSCL")
				Me.OnINSTYPE_OLD_MAININSCLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_INTIME")>  _
Partial Public Class MAS_INTIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _INTIME_ID As Integer
	
	Private _INTIME_CODE As System.Nullable(Of Integer)
	
	Private _INTIME_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnINTIME_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnINTIME_IDChanged()
    End Sub
    Partial Private Sub OnINTIME_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINTIME_CODEChanged()
    End Sub
    Partial Private Sub OnINTIME_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnINTIME_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTIME_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property INTIME_ID() As Integer
		Get
			Return Me._INTIME_ID
		End Get
		Set
			If ((Me._INTIME_ID = value)  _
						= false) Then
				Me.OnINTIME_IDChanging(value)
				Me.SendPropertyChanging
				Me._INTIME_ID = value
				Me.SendPropertyChanged("INTIME_ID")
				Me.OnINTIME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTIME_CODE", DbType:="Int")>  _
	Public Property INTIME_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._INTIME_CODE
		End Get
		Set
			If (Me._INTIME_CODE.Equals(value) = false) Then
				Me.OnINTIME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._INTIME_CODE = value
				Me.SendPropertyChanged("INTIME_CODE")
				Me.OnINTIME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTIME_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property INTIME_DESCRIPTION() As String
		Get
			Return Me._INTIME_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._INTIME_DESCRIPTION, value) = false) Then
				Me.OnINTIME_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._INTIME_DESCRIPTION = value
				Me.SendPropertyChanged("INTIME_DESCRIPTION")
				Me.OnINTIME_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ITEM_THAIHERB")>  _
Partial Public Class MAS_ITEM_THAIHERB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ITEM_THAIHERB_ID As Integer
	
	Private _ITEM_THAIHERB_ITEMKEY As String
	
	Private _ITEM_THAIHERB_CODE As String
	
	Private _ITEM_THAIHERB_ITEMNAME_FINANCE As String
	
	Private _ITEM_THAIHERB_ITEMNAME As String
	
	Private _ITEM_THAIHERB_ENNAME As String
	
	Private _ITEM_THAIHERB_ITEMTYPEKEY As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_ITEMGROUPKEY As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_BASEUNIT As String
	
	Private _ITEM_THAIHERBI_CGDITEMTOPIC As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_CDGPAIDBYHOSPITAL As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_CGDPRICEMETHOD As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_CGDITEMKEY As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_CGDPRICE2548 As String
	
	Private _ITEM_THAIHERB_NOTE As String
	
	Private _ITEM_THAIHERB_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_HASCONSUME As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_ICD9CODE As String
	
	Private _ITEM_THAIHERB_ISTIMEREQ As String
	
	Private _ITEM_THAIHERB_ISINTERNAL As String
	
	Private _ITEM_THAIHERB_CURRENTPRICE As String
	
	Private _ITEM_THAIHERB_LASTPRICEUPDATED As String
	
	Private _ITEM_THAIHERB_ISEQUIPREQ As String
	
	Private _ITEM_THAIHERB_F18VACCINE As System.Nullable(Of Integer)
	
	Private _ITEM_THAIHERB_CREATORKEY As String
	
	Private _ITEM_THAIHERB_CREATEDT As String
	
	Private _ITEM_THAIHERB_UPDATERKEY As String
	
	Private _ITEM_THAIHERB_UPDATEDT As String
	
	Private _ITEM_THAIHERB_DISABLEREASONKEY As String
	
	Private _ITEM_THAIHERB_STATUS_EDU As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ITEM_THAIHERB_TYPECHARGEITEM As System.Nullable(Of Integer)
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_IDChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMKEYChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CODEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMNAME_FINANCEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMNAME_FINANCEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMNAMEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ENNAMEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMTYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMTYPEKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMGROUPKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ITEMGROUPKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_BASEUNITChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_BASEUNITChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERBI_CGDITEMTOPICChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERBI_CGDITEMTOPICChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CDGPAIDBYHOSPITALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CDGPAIDBYHOSPITALChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDPRICEMETHODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDPRICEMETHODChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDITEMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDITEMKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDPRICE2548Changing(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CGDPRICE2548Changed()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_NOTEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_HASCONSUMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_HASCONSUMEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ICD9CODEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ICD9CODEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISTIMEREQChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISTIMEREQChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISINTERNALChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISINTERNALChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CURRENTPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CURRENTPRICEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_LASTPRICEUPDATEDChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_LASTPRICEUPDATEDChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISEQUIPREQChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_ISEQUIPREQChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_F18VACCINEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_F18VACCINEChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CREATORKEYChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CREATORKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CREATEDTChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_CREATEDTChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_UPDATERKEYChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_UPDATERKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_UPDATEDTChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_UPDATEDTChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_DISABLEREASONKEYChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_THAIHERB_DISABLEREASONKEYChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_STATUS_EDUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_STATUS_EDUChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnITEM_THAIHERB_TYPECHARGEITEMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEM_THAIHERB_TYPECHARGEITEMChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ITEM_THAIHERB_ID() As Integer
		Get
			Return Me._ITEM_THAIHERB_ID
		End Get
		Set
			If ((Me._ITEM_THAIHERB_ID = value)  _
						= false) Then
				Me.OnITEM_THAIHERB_IDChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ID = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ID")
				Me.OnITEM_THAIHERB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ITEMKEY", DbType:="NVarChar(MAX)")>  _
	Public Property ITEM_THAIHERB_ITEMKEY() As String
		Get
			Return Me._ITEM_THAIHERB_ITEMKEY
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ITEMKEY, value) = false) Then
				Me.OnITEM_THAIHERB_ITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ITEMKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ITEMKEY")
				Me.OnITEM_THAIHERB_ITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CODE", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_CODE() As String
		Get
			Return Me._ITEM_THAIHERB_CODE
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_CODE, value) = false) Then
				Me.OnITEM_THAIHERB_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CODE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CODE")
				Me.OnITEM_THAIHERB_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ITEMNAME_FINANCE", DbType:="NVarChar(MAX)")>  _
	Public Property ITEM_THAIHERB_ITEMNAME_FINANCE() As String
		Get
			Return Me._ITEM_THAIHERB_ITEMNAME_FINANCE
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ITEMNAME_FINANCE, value) = false) Then
				Me.OnITEM_THAIHERB_ITEMNAME_FINANCEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ITEMNAME_FINANCE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ITEMNAME_FINANCE")
				Me.OnITEM_THAIHERB_ITEMNAME_FINANCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ITEMNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ITEM_THAIHERB_ITEMNAME() As String
		Get
			Return Me._ITEM_THAIHERB_ITEMNAME
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ITEMNAME, value) = false) Then
				Me.OnITEM_THAIHERB_ITEMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ITEMNAME = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ITEMNAME")
				Me.OnITEM_THAIHERB_ITEMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ITEM_THAIHERB_ENNAME() As String
		Get
			Return Me._ITEM_THAIHERB_ENNAME
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ENNAME, value) = false) Then
				Me.OnITEM_THAIHERB_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ENNAME = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ENNAME")
				Me.OnITEM_THAIHERB_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ITEMTYPEKEY", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_ITEMTYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_ITEMTYPEKEY
		End Get
		Set
			If (Me._ITEM_THAIHERB_ITEMTYPEKEY.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_ITEMTYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ITEMTYPEKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ITEMTYPEKEY")
				Me.OnITEM_THAIHERB_ITEMTYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ITEMGROUPKEY", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_ITEMGROUPKEY() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_ITEMGROUPKEY
		End Get
		Set
			If (Me._ITEM_THAIHERB_ITEMGROUPKEY.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_ITEMGROUPKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ITEMGROUPKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ITEMGROUPKEY")
				Me.OnITEM_THAIHERB_ITEMGROUPKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_BASEUNIT", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_BASEUNIT() As String
		Get
			Return Me._ITEM_THAIHERB_BASEUNIT
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_BASEUNIT, value) = false) Then
				Me.OnITEM_THAIHERB_BASEUNITChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_BASEUNIT = value
				Me.SendPropertyChanged("ITEM_THAIHERB_BASEUNIT")
				Me.OnITEM_THAIHERB_BASEUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERBI_CGDITEMTOPIC", DbType:="Int")>  _
	Public Property ITEM_THAIHERBI_CGDITEMTOPIC() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERBI_CGDITEMTOPIC
		End Get
		Set
			If (Me._ITEM_THAIHERBI_CGDITEMTOPIC.Equals(value) = false) Then
				Me.OnITEM_THAIHERBI_CGDITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERBI_CGDITEMTOPIC = value
				Me.SendPropertyChanged("ITEM_THAIHERBI_CGDITEMTOPIC")
				Me.OnITEM_THAIHERBI_CGDITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CDGPAIDBYHOSPITAL", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_CDGPAIDBYHOSPITAL() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_CDGPAIDBYHOSPITAL
		End Get
		Set
			If (Me._ITEM_THAIHERB_CDGPAIDBYHOSPITAL.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_CDGPAIDBYHOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CDGPAIDBYHOSPITAL = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CDGPAIDBYHOSPITAL")
				Me.OnITEM_THAIHERB_CDGPAIDBYHOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CGDPRICEMETHOD", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_CGDPRICEMETHOD() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_CGDPRICEMETHOD
		End Get
		Set
			If (Me._ITEM_THAIHERB_CGDPRICEMETHOD.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_CGDPRICEMETHODChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CGDPRICEMETHOD = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CGDPRICEMETHOD")
				Me.OnITEM_THAIHERB_CGDPRICEMETHODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CGDITEMKEY", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_CGDITEMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_CGDITEMKEY
		End Get
		Set
			If (Me._ITEM_THAIHERB_CGDITEMKEY.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_CGDITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CGDITEMKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CGDITEMKEY")
				Me.OnITEM_THAIHERB_CGDITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CGDPRICE2548", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_CGDPRICE2548() As String
		Get
			Return Me._ITEM_THAIHERB_CGDPRICE2548
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_CGDPRICE2548, value) = false) Then
				Me.OnITEM_THAIHERB_CGDPRICE2548Changing(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CGDPRICE2548 = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CGDPRICE2548")
				Me.OnITEM_THAIHERB_CGDPRICE2548Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ITEM_THAIHERB_NOTE() As String
		Get
			Return Me._ITEM_THAIHERB_NOTE
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_NOTE, value) = false) Then
				Me.OnITEM_THAIHERB_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_NOTE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_NOTE")
				Me.OnITEM_THAIHERB_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ISDISABLED", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_ISDISABLED
		End Get
		Set
			If (Me._ITEM_THAIHERB_ISDISABLED.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ISDISABLED = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ISDISABLED")
				Me.OnITEM_THAIHERB_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_HASCONSUME", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_HASCONSUME() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_HASCONSUME
		End Get
		Set
			If (Me._ITEM_THAIHERB_HASCONSUME.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_HASCONSUMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_HASCONSUME = value
				Me.SendPropertyChanged("ITEM_THAIHERB_HASCONSUME")
				Me.OnITEM_THAIHERB_HASCONSUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ICD9CODE", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_ICD9CODE() As String
		Get
			Return Me._ITEM_THAIHERB_ICD9CODE
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ICD9CODE, value) = false) Then
				Me.OnITEM_THAIHERB_ICD9CODEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ICD9CODE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ICD9CODE")
				Me.OnITEM_THAIHERB_ICD9CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ISTIMEREQ", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_ISTIMEREQ() As String
		Get
			Return Me._ITEM_THAIHERB_ISTIMEREQ
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ISTIMEREQ, value) = false) Then
				Me.OnITEM_THAIHERB_ISTIMEREQChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ISTIMEREQ = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ISTIMEREQ")
				Me.OnITEM_THAIHERB_ISTIMEREQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ISINTERNAL", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_ISINTERNAL() As String
		Get
			Return Me._ITEM_THAIHERB_ISINTERNAL
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ISINTERNAL, value) = false) Then
				Me.OnITEM_THAIHERB_ISINTERNALChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ISINTERNAL = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ISINTERNAL")
				Me.OnITEM_THAIHERB_ISINTERNALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CURRENTPRICE", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_CURRENTPRICE() As String
		Get
			Return Me._ITEM_THAIHERB_CURRENTPRICE
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_CURRENTPRICE, value) = false) Then
				Me.OnITEM_THAIHERB_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CURRENTPRICE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CURRENTPRICE")
				Me.OnITEM_THAIHERB_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_LASTPRICEUPDATED", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_LASTPRICEUPDATED() As String
		Get
			Return Me._ITEM_THAIHERB_LASTPRICEUPDATED
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_LASTPRICEUPDATED, value) = false) Then
				Me.OnITEM_THAIHERB_LASTPRICEUPDATEDChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_LASTPRICEUPDATED = value
				Me.SendPropertyChanged("ITEM_THAIHERB_LASTPRICEUPDATED")
				Me.OnITEM_THAIHERB_LASTPRICEUPDATEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_ISEQUIPREQ", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_ISEQUIPREQ() As String
		Get
			Return Me._ITEM_THAIHERB_ISEQUIPREQ
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_ISEQUIPREQ, value) = false) Then
				Me.OnITEM_THAIHERB_ISEQUIPREQChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_ISEQUIPREQ = value
				Me.SendPropertyChanged("ITEM_THAIHERB_ISEQUIPREQ")
				Me.OnITEM_THAIHERB_ISEQUIPREQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_F18VACCINE", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_F18VACCINE() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_F18VACCINE
		End Get
		Set
			If (Me._ITEM_THAIHERB_F18VACCINE.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_F18VACCINEChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_F18VACCINE = value
				Me.SendPropertyChanged("ITEM_THAIHERB_F18VACCINE")
				Me.OnITEM_THAIHERB_F18VACCINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CREATORKEY", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_CREATORKEY() As String
		Get
			Return Me._ITEM_THAIHERB_CREATORKEY
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_CREATORKEY, value) = false) Then
				Me.OnITEM_THAIHERB_CREATORKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CREATORKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CREATORKEY")
				Me.OnITEM_THAIHERB_CREATORKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_CREATEDT", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_CREATEDT() As String
		Get
			Return Me._ITEM_THAIHERB_CREATEDT
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_CREATEDT, value) = false) Then
				Me.OnITEM_THAIHERB_CREATEDTChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_CREATEDT = value
				Me.SendPropertyChanged("ITEM_THAIHERB_CREATEDT")
				Me.OnITEM_THAIHERB_CREATEDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_UPDATERKEY", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_UPDATERKEY() As String
		Get
			Return Me._ITEM_THAIHERB_UPDATERKEY
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_UPDATERKEY, value) = false) Then
				Me.OnITEM_THAIHERB_UPDATERKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_UPDATERKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_UPDATERKEY")
				Me.OnITEM_THAIHERB_UPDATERKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_UPDATEDT", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_UPDATEDT() As String
		Get
			Return Me._ITEM_THAIHERB_UPDATEDT
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_UPDATEDT, value) = false) Then
				Me.OnITEM_THAIHERB_UPDATEDTChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_UPDATEDT = value
				Me.SendPropertyChanged("ITEM_THAIHERB_UPDATEDT")
				Me.OnITEM_THAIHERB_UPDATEDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_DISABLEREASONKEY", DbType:="NVarChar(50)")>  _
	Public Property ITEM_THAIHERB_DISABLEREASONKEY() As String
		Get
			Return Me._ITEM_THAIHERB_DISABLEREASONKEY
		End Get
		Set
			If (String.Equals(Me._ITEM_THAIHERB_DISABLEREASONKEY, value) = false) Then
				Me.OnITEM_THAIHERB_DISABLEREASONKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_DISABLEREASONKEY = value
				Me.SendPropertyChanged("ITEM_THAIHERB_DISABLEREASONKEY")
				Me.OnITEM_THAIHERB_DISABLEREASONKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_STATUS_EDU", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_STATUS_EDU() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_STATUS_EDU
		End Get
		Set
			If (Me._ITEM_THAIHERB_STATUS_EDU.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_STATUS_EDUChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_STATUS_EDU = value
				Me.SendPropertyChanged("ITEM_THAIHERB_STATUS_EDU")
				Me.OnITEM_THAIHERB_STATUS_EDUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_THAIHERB_TYPECHARGEITEM", DbType:="Int")>  _
	Public Property ITEM_THAIHERB_TYPECHARGEITEM() As System.Nullable(Of Integer)
		Get
			Return Me._ITEM_THAIHERB_TYPECHARGEITEM
		End Get
		Set
			If (Me._ITEM_THAIHERB_TYPECHARGEITEM.Equals(value) = false) Then
				Me.OnITEM_THAIHERB_TYPECHARGEITEMChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_THAIHERB_TYPECHARGEITEM = value
				Me.SendPropertyChanged("ITEM_THAIHERB_TYPECHARGEITEM")
				Me.OnITEM_THAIHERB_TYPECHARGEITEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ITEMDRUG_THAIHERB")>  _
Partial Public Class MAS_ITEMDRUG_THAIHERB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ITEMDRUG_THAIHER_ID As Integer
	
	Private _ITEMDRUG_THAIHER_ITEMKEY As System.Nullable(Of Integer)
	
	Private _ITEMDRUG_THAIHER_CODE As String
	
	Private _ITEMDRUG_THAIHER_ITEMNAME As String
	
	Private _ITEMDRUG_THAIHER_UNITDRUGNAME As String
	
	Private _ITEMDRUG_THAIHER_COSTDRUG As String
	
	Private _ITEMDRUG_THAIHER_ENNAME As String
	
	Private _ITEMDRUG_THAIHER_NOTE As String
	
	Private _ITEMDRUG_THAIHER_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_IDChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ITEMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ITEMKEYChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_CODEChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ITEMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ITEMNAMEChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_UNITDRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_UNITDRUGNAMEChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_COSTDRUGChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_COSTDRUGChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ENNAMEChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_NOTEChanged()
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnITEMDRUG_THAIHER_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ITEMDRUG_THAIHER_ID() As Integer
		Get
			Return Me._ITEMDRUG_THAIHER_ID
		End Get
		Set
			If ((Me._ITEMDRUG_THAIHER_ID = value)  _
						= false) Then
				Me.OnITEMDRUG_THAIHER_IDChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_ID = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_ID")
				Me.OnITEMDRUG_THAIHER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_ITEMKEY", DbType:="Int")>  _
	Public Property ITEMDRUG_THAIHER_ITEMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._ITEMDRUG_THAIHER_ITEMKEY
		End Get
		Set
			If (Me._ITEMDRUG_THAIHER_ITEMKEY.Equals(value) = false) Then
				Me.OnITEMDRUG_THAIHER_ITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_ITEMKEY = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_ITEMKEY")
				Me.OnITEMDRUG_THAIHER_ITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_CODE", DbType:="NVarChar(50)")>  _
	Public Property ITEMDRUG_THAIHER_CODE() As String
		Get
			Return Me._ITEMDRUG_THAIHER_CODE
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_CODE, value) = false) Then
				Me.OnITEMDRUG_THAIHER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_CODE = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_CODE")
				Me.OnITEMDRUG_THAIHER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_ITEMNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ITEMDRUG_THAIHER_ITEMNAME() As String
		Get
			Return Me._ITEMDRUG_THAIHER_ITEMNAME
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_ITEMNAME, value) = false) Then
				Me.OnITEMDRUG_THAIHER_ITEMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_ITEMNAME = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_ITEMNAME")
				Me.OnITEMDRUG_THAIHER_ITEMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_UNITDRUGNAME", DbType:="NVarChar(50)")>  _
	Public Property ITEMDRUG_THAIHER_UNITDRUGNAME() As String
		Get
			Return Me._ITEMDRUG_THAIHER_UNITDRUGNAME
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_UNITDRUGNAME, value) = false) Then
				Me.OnITEMDRUG_THAIHER_UNITDRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_UNITDRUGNAME = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_UNITDRUGNAME")
				Me.OnITEMDRUG_THAIHER_UNITDRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_COSTDRUG", DbType:="NVarChar(50)")>  _
	Public Property ITEMDRUG_THAIHER_COSTDRUG() As String
		Get
			Return Me._ITEMDRUG_THAIHER_COSTDRUG
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_COSTDRUG, value) = false) Then
				Me.OnITEMDRUG_THAIHER_COSTDRUGChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_COSTDRUG = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_COSTDRUG")
				Me.OnITEMDRUG_THAIHER_COSTDRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ITEMDRUG_THAIHER_ENNAME() As String
		Get
			Return Me._ITEMDRUG_THAIHER_ENNAME
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_ENNAME, value) = false) Then
				Me.OnITEMDRUG_THAIHER_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_ENNAME = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_ENNAME")
				Me.OnITEMDRUG_THAIHER_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ITEMDRUG_THAIHER_NOTE() As String
		Get
			Return Me._ITEMDRUG_THAIHER_NOTE
		End Get
		Set
			If (String.Equals(Me._ITEMDRUG_THAIHER_NOTE, value) = false) Then
				Me.OnITEMDRUG_THAIHER_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_NOTE = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_NOTE")
				Me.OnITEMDRUG_THAIHER_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEMDRUG_THAIHER_ISDISABLED", DbType:="Int")>  _
	Public Property ITEMDRUG_THAIHER_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ITEMDRUG_THAIHER_ISDISABLED
		End Get
		Set
			If (Me._ITEMDRUG_THAIHER_ISDISABLED.Equals(value) = false) Then
				Me.OnITEMDRUG_THAIHER_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ITEMDRUG_THAIHER_ISDISABLED = value
				Me.SendPropertyChanged("ITEMDRUG_THAIHER_ISDISABLED")
				Me.OnITEMDRUG_THAIHER_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_KEYWORDEM")>  _
Partial Public Class MAS_KEYWORDEM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _KEYWORDEM_ID As Integer
	
	Private _KEYWORDEM_KEYWORDCODE As String
	
	Private _KEYWORDEM_KEYWORDNAME As String
	
	Private _KEYWORDEM_EMPLOYEE As String
	
	Private _KEYWORDEM_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnKEYWORDEM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnKEYWORDEM_IDChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_KEYWORDCODEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_KEYWORDCODEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_KEYWORDNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_KEYWORDNAMEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_EMPLOYEEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_EMPLOYEEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKEYWORDEM_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property KEYWORDEM_ID() As Integer
		Get
			Return Me._KEYWORDEM_ID
		End Get
		Set
			If ((Me._KEYWORDEM_ID = value)  _
						= false) Then
				Me.OnKEYWORDEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_ID = value
				Me.SendPropertyChanged("KEYWORDEM_ID")
				Me.OnKEYWORDEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_KEYWORDCODE", DbType:="NVarChar(MAX)")>  _
	Public Property KEYWORDEM_KEYWORDCODE() As String
		Get
			Return Me._KEYWORDEM_KEYWORDCODE
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_KEYWORDCODE, value) = false) Then
				Me.OnKEYWORDEM_KEYWORDCODEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_KEYWORDCODE = value
				Me.SendPropertyChanged("KEYWORDEM_KEYWORDCODE")
				Me.OnKEYWORDEM_KEYWORDCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_KEYWORDNAME", DbType:="NVarChar(MAX)")>  _
	Public Property KEYWORDEM_KEYWORDNAME() As String
		Get
			Return Me._KEYWORDEM_KEYWORDNAME
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_KEYWORDNAME, value) = false) Then
				Me.OnKEYWORDEM_KEYWORDNAMEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_KEYWORDNAME = value
				Me.SendPropertyChanged("KEYWORDEM_KEYWORDNAME")
				Me.OnKEYWORDEM_KEYWORDNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_EMPLOYEE", DbType:="NVarChar(50)")>  _
	Public Property KEYWORDEM_EMPLOYEE() As String
		Get
			Return Me._KEYWORDEM_EMPLOYEE
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_EMPLOYEE, value) = false) Then
				Me.OnKEYWORDEM_EMPLOYEEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_EMPLOYEE = value
				Me.SendPropertyChanged("KEYWORDEM_EMPLOYEE")
				Me.OnKEYWORDEM_EMPLOYEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_ISDISABLED", DbType:="Int")>  _
	Public Property KEYWORDEM_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._KEYWORDEM_ISDISABLED
		End Get
		Set
			If (Me._KEYWORDEM_ISDISABLED.Equals(value) = false) Then
				Me.OnKEYWORDEM_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_ISDISABLED = value
				Me.SendPropertyChanged("KEYWORDEM_ISDISABLED")
				Me.OnKEYWORDEM_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_KEYWORDEM_HXPI")>  _
Partial Public Class MAS_KEYWORDEM_HXPI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _KEYWORDEM_HXPI_ID As Integer
	
	Private _KEYWORDEM_HXPI_CODE As String
	
	Private _KEYWORDEM_HXPI_NAME As String
	
	Private _KEYWORDEM_HXPI_EMPLOYEE As String
	
	Private _KEYWORDEM_HXPI_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_IDChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_CODEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_NAMEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_EMPLOYEEChanging(value As String)
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_EMPLOYEEChanged()
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKEYWORDEM_HXPI_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_HXPI_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property KEYWORDEM_HXPI_ID() As Integer
		Get
			Return Me._KEYWORDEM_HXPI_ID
		End Get
		Set
			If ((Me._KEYWORDEM_HXPI_ID = value)  _
						= false) Then
				Me.OnKEYWORDEM_HXPI_IDChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_HXPI_ID = value
				Me.SendPropertyChanged("KEYWORDEM_HXPI_ID")
				Me.OnKEYWORDEM_HXPI_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_HXPI_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property KEYWORDEM_HXPI_CODE() As String
		Get
			Return Me._KEYWORDEM_HXPI_CODE
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_HXPI_CODE, value) = false) Then
				Me.OnKEYWORDEM_HXPI_CODEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_HXPI_CODE = value
				Me.SendPropertyChanged("KEYWORDEM_HXPI_CODE")
				Me.OnKEYWORDEM_HXPI_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_HXPI_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property KEYWORDEM_HXPI_NAME() As String
		Get
			Return Me._KEYWORDEM_HXPI_NAME
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_HXPI_NAME, value) = false) Then
				Me.OnKEYWORDEM_HXPI_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_HXPI_NAME = value
				Me.SendPropertyChanged("KEYWORDEM_HXPI_NAME")
				Me.OnKEYWORDEM_HXPI_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_HXPI_EMPLOYEE", DbType:="NVarChar(50)")>  _
	Public Property KEYWORDEM_HXPI_EMPLOYEE() As String
		Get
			Return Me._KEYWORDEM_HXPI_EMPLOYEE
		End Get
		Set
			If (String.Equals(Me._KEYWORDEM_HXPI_EMPLOYEE, value) = false) Then
				Me.OnKEYWORDEM_HXPI_EMPLOYEEChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_HXPI_EMPLOYEE = value
				Me.SendPropertyChanged("KEYWORDEM_HXPI_EMPLOYEE")
				Me.OnKEYWORDEM_HXPI_EMPLOYEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYWORDEM_HXPI_ISDISABLED", DbType:="Int")>  _
	Public Property KEYWORDEM_HXPI_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._KEYWORDEM_HXPI_ISDISABLED
		End Get
		Set
			If (Me._KEYWORDEM_HXPI_ISDISABLED.Equals(value) = false) Then
				Me.OnKEYWORDEM_HXPI_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._KEYWORDEM_HXPI_ISDISABLED = value
				Me.SendPropertyChanged("KEYWORDEM_HXPI_ISDISABLED")
				Me.OnKEYWORDEM_HXPI_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB")>  _
Partial Public Class MAS_LAB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Master_ID As System.Nullable(Of Integer)
	
	Private _Master_Order As String
	
	Private _LN As String
	
	Private _Check_this As String
	
	Private _Not_Wait As String
	
	Private _Wait As String
	
	Private _Authorities_Order As String
	
	Private _Sum As String
	
	Private _Withdraw As String
	
	Private _Not_Withdraw As String
	
	Private _Status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMaster_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMaster_IDChanged()
    End Sub
    Partial Private Sub OnMaster_OrderChanging(value As String)
    End Sub
    Partial Private Sub OnMaster_OrderChanged()
    End Sub
    Partial Private Sub OnLNChanging(value As String)
    End Sub
    Partial Private Sub OnLNChanged()
    End Sub
    Partial Private Sub OnCheck_thisChanging(value As String)
    End Sub
    Partial Private Sub OnCheck_thisChanged()
    End Sub
    Partial Private Sub OnNot_WaitChanging(value As String)
    End Sub
    Partial Private Sub OnNot_WaitChanged()
    End Sub
    Partial Private Sub OnWaitChanging(value As String)
    End Sub
    Partial Private Sub OnWaitChanged()
    End Sub
    Partial Private Sub OnAuthorities_OrderChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorities_OrderChanged()
    End Sub
    Partial Private Sub OnSumChanging(value As String)
    End Sub
    Partial Private Sub OnSumChanged()
    End Sub
    Partial Private Sub OnWithdrawChanging(value As String)
    End Sub
    Partial Private Sub OnWithdrawChanged()
    End Sub
    Partial Private Sub OnNot_WithdrawChanging(value As String)
    End Sub
    Partial Private Sub OnNot_WithdrawChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Master_ID", DbType:="Int")>  _
	Public Property Master_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Master_ID
		End Get
		Set
			If (Me._Master_ID.Equals(value) = false) Then
				Me.OnMaster_IDChanging(value)
				Me.SendPropertyChanging
				Me._Master_ID = value
				Me.SendPropertyChanged("Master_ID")
				Me.OnMaster_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Master_Order", DbType:="NVarChar(MAX)")>  _
	Public Property Master_Order() As String
		Get
			Return Me._Master_Order
		End Get
		Set
			If (String.Equals(Me._Master_Order, value) = false) Then
				Me.OnMaster_OrderChanging(value)
				Me.SendPropertyChanging
				Me._Master_Order = value
				Me.SendPropertyChanged("Master_Order")
				Me.OnMaster_OrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LN", DbType:="NVarChar(MAX)")>  _
	Public Property LN() As String
		Get
			Return Me._LN
		End Get
		Set
			If (String.Equals(Me._LN, value) = false) Then
				Me.OnLNChanging(value)
				Me.SendPropertyChanging
				Me._LN = value
				Me.SendPropertyChanged("LN")
				Me.OnLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Check_this", DbType:="NVarChar(MAX)")>  _
	Public Property Check_this() As String
		Get
			Return Me._Check_this
		End Get
		Set
			If (String.Equals(Me._Check_this, value) = false) Then
				Me.OnCheck_thisChanging(value)
				Me.SendPropertyChanging
				Me._Check_this = value
				Me.SendPropertyChanged("Check_this")
				Me.OnCheck_thisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Not_Wait", DbType:="NVarChar(MAX)")>  _
	Public Property Not_Wait() As String
		Get
			Return Me._Not_Wait
		End Get
		Set
			If (String.Equals(Me._Not_Wait, value) = false) Then
				Me.OnNot_WaitChanging(value)
				Me.SendPropertyChanging
				Me._Not_Wait = value
				Me.SendPropertyChanged("Not_Wait")
				Me.OnNot_WaitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Wait", DbType:="NVarChar(MAX)")>  _
	Public Property Wait() As String
		Get
			Return Me._Wait
		End Get
		Set
			If (String.Equals(Me._Wait, value) = false) Then
				Me.OnWaitChanging(value)
				Me.SendPropertyChanging
				Me._Wait = value
				Me.SendPropertyChanged("Wait")
				Me.OnWaitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authorities_Order", DbType:="NVarChar(MAX)")>  _
	Public Property Authorities_Order() As String
		Get
			Return Me._Authorities_Order
		End Get
		Set
			If (String.Equals(Me._Authorities_Order, value) = false) Then
				Me.OnAuthorities_OrderChanging(value)
				Me.SendPropertyChanging
				Me._Authorities_Order = value
				Me.SendPropertyChanged("Authorities_Order")
				Me.OnAuthorities_OrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sum", DbType:="NVarChar(MAX)")>  _
	Public Property Sum() As String
		Get
			Return Me._Sum
		End Get
		Set
			If (String.Equals(Me._Sum, value) = false) Then
				Me.OnSumChanging(value)
				Me.SendPropertyChanging
				Me._Sum = value
				Me.SendPropertyChanged("Sum")
				Me.OnSumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Withdraw", DbType:="NVarChar(MAX)")>  _
	Public Property Withdraw() As String
		Get
			Return Me._Withdraw
		End Get
		Set
			If (String.Equals(Me._Withdraw, value) = false) Then
				Me.OnWithdrawChanging(value)
				Me.SendPropertyChanging
				Me._Withdraw = value
				Me.SendPropertyChanged("Withdraw")
				Me.OnWithdrawChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Not_Withdraw", DbType:="NVarChar(MAX)")>  _
	Public Property Not_Withdraw() As String
		Get
			Return Me._Not_Withdraw
		End Get
		Set
			If (String.Equals(Me._Not_Withdraw, value) = false) Then
				Me.OnNot_WithdrawChanging(value)
				Me.SendPropertyChanging
				Me._Not_Withdraw = value
				Me.SendPropertyChanged("Not_Withdraw")
				Me.OnNot_WithdrawChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(MAX)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_BACTERIA")>  _
Partial Public Class MAS_LAB_BACTERIA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Lab_Bacteria_ID As Integer
	
	Private _Lab_Bacteria_Code As String
	
	Private _Lab_Bacteria_Name As String
	
	Private _Lab_Bacteria_Other_Name As String
	
	Private _Lab_Bacteria_Remark As String
	
	Private _Lab_Bacteria_UseorNot As System.Nullable(Of Boolean)
	
	Private _Lab_Bacteria_FK_SenseDisc As System.Nullable(Of Integer)
	
	Private _Lab_Bacteria_SenseDisc_Name As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLab_Bacteria_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLab_Bacteria_IDChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnLab_Bacteria_CodeChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_NameChanging(value As String)
    End Sub
    Partial Private Sub OnLab_Bacteria_NameChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_Other_NameChanging(value As String)
    End Sub
    Partial Private Sub OnLab_Bacteria_Other_NameChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_RemarkChanging(value As String)
    End Sub
    Partial Private Sub OnLab_Bacteria_RemarkChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_UseorNotChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLab_Bacteria_UseorNotChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_FK_SenseDiscChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLab_Bacteria_FK_SenseDiscChanged()
    End Sub
    Partial Private Sub OnLab_Bacteria_SenseDisc_NameChanging(value As String)
    End Sub
    Partial Private Sub OnLab_Bacteria_SenseDisc_NameChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Lab_Bacteria_ID() As Integer
		Get
			Return Me._Lab_Bacteria_ID
		End Get
		Set
			If ((Me._Lab_Bacteria_ID = value)  _
						= false) Then
				Me.OnLab_Bacteria_IDChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_ID = value
				Me.SendPropertyChanged("Lab_Bacteria_ID")
				Me.OnLab_Bacteria_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_Code", DbType:="NVarChar(MAX)")>  _
	Public Property Lab_Bacteria_Code() As String
		Get
			Return Me._Lab_Bacteria_Code
		End Get
		Set
			If (String.Equals(Me._Lab_Bacteria_Code, value) = false) Then
				Me.OnLab_Bacteria_CodeChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_Code = value
				Me.SendPropertyChanged("Lab_Bacteria_Code")
				Me.OnLab_Bacteria_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Lab_Bacteria_Name() As String
		Get
			Return Me._Lab_Bacteria_Name
		End Get
		Set
			If (String.Equals(Me._Lab_Bacteria_Name, value) = false) Then
				Me.OnLab_Bacteria_NameChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_Name = value
				Me.SendPropertyChanged("Lab_Bacteria_Name")
				Me.OnLab_Bacteria_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_Other_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Lab_Bacteria_Other_Name() As String
		Get
			Return Me._Lab_Bacteria_Other_Name
		End Get
		Set
			If (String.Equals(Me._Lab_Bacteria_Other_Name, value) = false) Then
				Me.OnLab_Bacteria_Other_NameChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_Other_Name = value
				Me.SendPropertyChanged("Lab_Bacteria_Other_Name")
				Me.OnLab_Bacteria_Other_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_Remark", DbType:="NVarChar(MAX)")>  _
	Public Property Lab_Bacteria_Remark() As String
		Get
			Return Me._Lab_Bacteria_Remark
		End Get
		Set
			If (String.Equals(Me._Lab_Bacteria_Remark, value) = false) Then
				Me.OnLab_Bacteria_RemarkChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_Remark = value
				Me.SendPropertyChanged("Lab_Bacteria_Remark")
				Me.OnLab_Bacteria_RemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_UseorNot", DbType:="Bit")>  _
	Public Property Lab_Bacteria_UseorNot() As System.Nullable(Of Boolean)
		Get
			Return Me._Lab_Bacteria_UseorNot
		End Get
		Set
			If (Me._Lab_Bacteria_UseorNot.Equals(value) = false) Then
				Me.OnLab_Bacteria_UseorNotChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_UseorNot = value
				Me.SendPropertyChanged("Lab_Bacteria_UseorNot")
				Me.OnLab_Bacteria_UseorNotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_FK_SenseDisc", DbType:="Int")>  _
	Public Property Lab_Bacteria_FK_SenseDisc() As System.Nullable(Of Integer)
		Get
			Return Me._Lab_Bacteria_FK_SenseDisc
		End Get
		Set
			If (Me._Lab_Bacteria_FK_SenseDisc.Equals(value) = false) Then
				Me.OnLab_Bacteria_FK_SenseDiscChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_FK_SenseDisc = value
				Me.SendPropertyChanged("Lab_Bacteria_FK_SenseDisc")
				Me.OnLab_Bacteria_FK_SenseDiscChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lab_Bacteria_SenseDisc_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Lab_Bacteria_SenseDisc_Name() As String
		Get
			Return Me._Lab_Bacteria_SenseDisc_Name
		End Get
		Set
			If (String.Equals(Me._Lab_Bacteria_SenseDisc_Name, value) = false) Then
				Me.OnLab_Bacteria_SenseDisc_NameChanging(value)
				Me.SendPropertyChanging
				Me._Lab_Bacteria_SenseDisc_Name = value
				Me.SendPropertyChanged("Lab_Bacteria_SenseDisc_Name")
				Me.OnLab_Bacteria_SenseDisc_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_EXAMINATION")>  _
Partial Public Class MAS_LAB_EXAMINATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_EXAMINATION_ID As Integer
	
	Private _LAB_EXAMINATION_CODE As String
	
	Private _LAB_EXAMINATION_NAME As String
	
	Private _LAB_EXAMINATION_OTHERNAME As String
	
	Private _LAB_EXAMINATION_REMARK As String
	
	Private _LAB_EXAMINATION_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_IDChanged()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_OTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_OTHERNAMEChanged()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_EXAMINATION_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property LAB_EXAMINATION_ID() As Integer
		Get
			Return Me._LAB_EXAMINATION_ID
		End Get
		Set
			If ((Me._LAB_EXAMINATION_ID = value)  _
						= false) Then
				Me.OnLAB_EXAMINATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_ID = value
				Me.SendPropertyChanged("LAB_EXAMINATION_ID")
				Me.OnLAB_EXAMINATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_EXAMINATION_CODE() As String
		Get
			Return Me._LAB_EXAMINATION_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_EXAMINATION_CODE, value) = false) Then
				Me.OnLAB_EXAMINATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_CODE = value
				Me.SendPropertyChanged("LAB_EXAMINATION_CODE")
				Me.OnLAB_EXAMINATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_EXAMINATION_NAME() As String
		Get
			Return Me._LAB_EXAMINATION_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_EXAMINATION_NAME, value) = false) Then
				Me.OnLAB_EXAMINATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_NAME = value
				Me.SendPropertyChanged("LAB_EXAMINATION_NAME")
				Me.OnLAB_EXAMINATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_OTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_EXAMINATION_OTHERNAME() As String
		Get
			Return Me._LAB_EXAMINATION_OTHERNAME
		End Get
		Set
			If (String.Equals(Me._LAB_EXAMINATION_OTHERNAME, value) = false) Then
				Me.OnLAB_EXAMINATION_OTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_OTHERNAME = value
				Me.SendPropertyChanged("LAB_EXAMINATION_OTHERNAME")
				Me.OnLAB_EXAMINATION_OTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_EXAMINATION_REMARK() As String
		Get
			Return Me._LAB_EXAMINATION_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_EXAMINATION_REMARK, value) = false) Then
				Me.OnLAB_EXAMINATION_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_REMARK = value
				Me.SendPropertyChanged("LAB_EXAMINATION_REMARK")
				Me.OnLAB_EXAMINATION_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_EXAMINATION_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_EXAMINATION_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_EXAMINATION_USEORNOT
		End Get
		Set
			If (Me._LAB_EXAMINATION_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_EXAMINATION_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_EXAMINATION_USEORNOT = value
				Me.SendPropertyChanged("LAB_EXAMINATION_USEORNOT")
				Me.OnLAB_EXAMINATION_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_ITEMMETHOD")>  _
Partial Public Class MAS_LAB_ITEMMETHOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _LabItemMethodKey As System.Nullable(Of Integer)
	
	Private _ItemKey As System.Nullable(Of Integer)
	
	Private _LabMethodKey As System.Nullable(Of Integer)
	
	Private _IsDefaultMethod As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLabItemMethodKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLabItemMethodKeyChanged()
    End Sub
    Partial Private Sub OnItemKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnItemKeyChanged()
    End Sub
    Partial Private Sub OnLabMethodKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLabMethodKeyChanged()
    End Sub
    Partial Private Sub OnIsDefaultMethodChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsDefaultMethodChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabItemMethodKey", DbType:="Int")>  _
	Public Property LabItemMethodKey() As System.Nullable(Of Integer)
		Get
			Return Me._LabItemMethodKey
		End Get
		Set
			If (Me._LabItemMethodKey.Equals(value) = false) Then
				Me.OnLabItemMethodKeyChanging(value)
				Me.SendPropertyChanging
				Me._LabItemMethodKey = value
				Me.SendPropertyChanged("LabItemMethodKey")
				Me.OnLabItemMethodKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemKey", DbType:="Int")>  _
	Public Property ItemKey() As System.Nullable(Of Integer)
		Get
			Return Me._ItemKey
		End Get
		Set
			If (Me._ItemKey.Equals(value) = false) Then
				Me.OnItemKeyChanging(value)
				Me.SendPropertyChanging
				Me._ItemKey = value
				Me.SendPropertyChanged("ItemKey")
				Me.OnItemKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabMethodKey", DbType:="Int")>  _
	Public Property LabMethodKey() As System.Nullable(Of Integer)
		Get
			Return Me._LabMethodKey
		End Get
		Set
			If (Me._LabMethodKey.Equals(value) = false) Then
				Me.OnLabMethodKeyChanging(value)
				Me.SendPropertyChanging
				Me._LabMethodKey = value
				Me.SendPropertyChanged("LabMethodKey")
				Me.OnLabMethodKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDefaultMethod", DbType:="Int")>  _
	Public Property IsDefaultMethod() As System.Nullable(Of Integer)
		Get
			Return Me._IsDefaultMethod
		End Get
		Set
			If (Me._IsDefaultMethod.Equals(value) = false) Then
				Me.OnIsDefaultMethodChanging(value)
				Me.SendPropertyChanging
				Me._IsDefaultMethod = value
				Me.SendPropertyChanged("IsDefaultMethod")
				Me.OnIsDefaultMethodChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_LEVELUSE_BACTERIA")>  _
Partial Public Class MAS_LAB_LEVELUSE_BACTERIA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_LEVELUSE_BACTERIA_ID As Integer
	
	Private _LAB_LEVELUSE_BACTERIA_CODE As String
	
	Private _LAB_LEVELUSE_BACTERIA_NAME As String
	
	Private _LAB_LEVELUSE_BACTERIA_OTHERNAME As String
	
	Private _LAB_LEVELUSE_BACTERIA_REMARK As String
	
	Private _LAB_LEVELUSE_BACTERIA_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_IDChanged()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_OTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_OTHERNAMEChanged()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_LEVELUSE_BACTERIA_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_LEVELUSE_BACTERIA_ID() As Integer
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_ID
		End Get
		Set
			If ((Me._LAB_LEVELUSE_BACTERIA_ID = value)  _
						= false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_ID = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_ID")
				Me.OnLAB_LEVELUSE_BACTERIA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LEVELUSE_BACTERIA_CODE() As String
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_LEVELUSE_BACTERIA_CODE, value) = false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_CODE = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_CODE")
				Me.OnLAB_LEVELUSE_BACTERIA_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LEVELUSE_BACTERIA_NAME() As String
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LEVELUSE_BACTERIA_NAME, value) = false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_NAME = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_NAME")
				Me.OnLAB_LEVELUSE_BACTERIA_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_OTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LEVELUSE_BACTERIA_OTHERNAME() As String
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_OTHERNAME
		End Get
		Set
			If (String.Equals(Me._LAB_LEVELUSE_BACTERIA_OTHERNAME, value) = false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_OTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_OTHERNAME = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_OTHERNAME")
				Me.OnLAB_LEVELUSE_BACTERIA_OTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LEVELUSE_BACTERIA_REMARK() As String
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_LEVELUSE_BACTERIA_REMARK, value) = false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_REMARK = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_REMARK")
				Me.OnLAB_LEVELUSE_BACTERIA_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LEVELUSE_BACTERIA_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_LEVELUSE_BACTERIA_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_LEVELUSE_BACTERIA_USEORNOT
		End Get
		Set
			If (Me._LAB_LEVELUSE_BACTERIA_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_LEVELUSE_BACTERIA_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LEVELUSE_BACTERIA_USEORNOT = value
				Me.SendPropertyChanged("LAB_LEVELUSE_BACTERIA_USEORNOT")
				Me.OnLAB_LEVELUSE_BACTERIA_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_LIS")>  _
Partial Public Class MAS_LAB_LI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_LIS_ID As Integer
	
	Private _LAB_LIS_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_LIS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_LIS_IDChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_LIS_ID() As Integer
		Get
			Return Me._LAB_LIS_ID
		End Get
		Set
			If ((Me._LAB_LIS_ID = value)  _
						= false) Then
				Me.OnLAB_LIS_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_ID = value
				Me.SendPropertyChanged("LAB_LIS_ID")
				Me.OnLAB_LIS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_NAME() As String
		Get
			Return Me._LAB_LIS_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_NAME, value) = false) Then
				Me.OnLAB_LIS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_NAME = value
				Me.SendPropertyChanged("LAB_LIS_NAME")
				Me.OnLAB_LIS_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_LIS_COMMENT")>  _
Partial Public Class MAS_LAB_LIS_COMMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_LIS_COMMENT_ID As Integer
	
	Private _LAB_LIS_COMMENT_CODE As String
	
	Private _LAB_LIS_COMMENT_SEQUENCE As System.Nullable(Of Integer)
	
	Private _LAB_LIS_COMMENT_NAME As String
	
	Private _LAB_FK_LIS_ID As System.Nullable(Of Integer)
	
	Private _LAB_LIS_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_IDChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_SEQUENCEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_SEQUENCEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_COMMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_FK_LIS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_FK_LIS_IDChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_COMMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_LIS_COMMENT_ID() As Integer
		Get
			Return Me._LAB_LIS_COMMENT_ID
		End Get
		Set
			If ((Me._LAB_LIS_COMMENT_ID = value)  _
						= false) Then
				Me.OnLAB_LIS_COMMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_COMMENT_ID = value
				Me.SendPropertyChanged("LAB_LIS_COMMENT_ID")
				Me.OnLAB_LIS_COMMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_COMMENT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_COMMENT_CODE() As String
		Get
			Return Me._LAB_LIS_COMMENT_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_COMMENT_CODE, value) = false) Then
				Me.OnLAB_LIS_COMMENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_COMMENT_CODE = value
				Me.SendPropertyChanged("LAB_LIS_COMMENT_CODE")
				Me.OnLAB_LIS_COMMENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_COMMENT_SEQUENCE", DbType:="Int")>  _
	Public Property LAB_LIS_COMMENT_SEQUENCE() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_LIS_COMMENT_SEQUENCE
		End Get
		Set
			If (Me._LAB_LIS_COMMENT_SEQUENCE.Equals(value) = false) Then
				Me.OnLAB_LIS_COMMENT_SEQUENCEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_COMMENT_SEQUENCE = value
				Me.SendPropertyChanged("LAB_LIS_COMMENT_SEQUENCE")
				Me.OnLAB_LIS_COMMENT_SEQUENCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_COMMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_COMMENT_NAME() As String
		Get
			Return Me._LAB_LIS_COMMENT_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_COMMENT_NAME, value) = false) Then
				Me.OnLAB_LIS_COMMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_COMMENT_NAME = value
				Me.SendPropertyChanged("LAB_LIS_COMMENT_NAME")
				Me.OnLAB_LIS_COMMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_FK_LIS_ID", DbType:="Int")>  _
	Public Property LAB_FK_LIS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_FK_LIS_ID
		End Get
		Set
			If (Me._LAB_FK_LIS_ID.Equals(value) = false) Then
				Me.OnLAB_FK_LIS_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_FK_LIS_ID = value
				Me.SendPropertyChanged("LAB_FK_LIS_ID")
				Me.OnLAB_FK_LIS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_NAME() As String
		Get
			Return Me._LAB_LIS_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_NAME, value) = false) Then
				Me.OnLAB_LIS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_NAME = value
				Me.SendPropertyChanged("LAB_LIS_NAME")
				Me.OnLAB_LIS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_LIS_TESTCODE")>  _
Partial Public Class MAS_LAB_LIS_TESTCODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_LIS_TESTCODE_ID As Integer
	
	Private _LAB_LIS_TESTCODE_CODE As String
	
	Private _LAB_LIS_TESTCODE_NAME As String
	
	Private _LAB_LIS_FK As System.Nullable(Of Integer)
	
	Private _LAB_LIS_NAME As String
	
	Private _LAB_LIS_TYPE_NAME As String
	
	Private _LAB_LIS_MAPPINGCODE As String
	
	Private _LAB_LIS_REMARK As String
	
	Private _LAB_LIS_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_IDChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_TESTCODE_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_LIS_FKChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_MAPPINGCODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_MAPPINGCODEChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_LIS_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_LIS_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_LIS_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_TESTCODE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_LIS_TESTCODE_ID() As Integer
		Get
			Return Me._LAB_LIS_TESTCODE_ID
		End Get
		Set
			If ((Me._LAB_LIS_TESTCODE_ID = value)  _
						= false) Then
				Me.OnLAB_LIS_TESTCODE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_TESTCODE_ID = value
				Me.SendPropertyChanged("LAB_LIS_TESTCODE_ID")
				Me.OnLAB_LIS_TESTCODE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_TESTCODE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_TESTCODE_CODE() As String
		Get
			Return Me._LAB_LIS_TESTCODE_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_TESTCODE_CODE, value) = false) Then
				Me.OnLAB_LIS_TESTCODE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_TESTCODE_CODE = value
				Me.SendPropertyChanged("LAB_LIS_TESTCODE_CODE")
				Me.OnLAB_LIS_TESTCODE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_TESTCODE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_TESTCODE_NAME() As String
		Get
			Return Me._LAB_LIS_TESTCODE_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_TESTCODE_NAME, value) = false) Then
				Me.OnLAB_LIS_TESTCODE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_TESTCODE_NAME = value
				Me.SendPropertyChanged("LAB_LIS_TESTCODE_NAME")
				Me.OnLAB_LIS_TESTCODE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_FK", DbType:="Int")>  _
	Public Property LAB_LIS_FK() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_LIS_FK
		End Get
		Set
			If (Me._LAB_LIS_FK.Equals(value) = false) Then
				Me.OnLAB_LIS_FKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_FK = value
				Me.SendPropertyChanged("LAB_LIS_FK")
				Me.OnLAB_LIS_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_NAME() As String
		Get
			Return Me._LAB_LIS_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_NAME, value) = false) Then
				Me.OnLAB_LIS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_NAME = value
				Me.SendPropertyChanged("LAB_LIS_NAME")
				Me.OnLAB_LIS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_TYPE_NAME() As String
		Get
			Return Me._LAB_LIS_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_TYPE_NAME, value) = false) Then
				Me.OnLAB_LIS_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_TYPE_NAME = value
				Me.SendPropertyChanged("LAB_LIS_TYPE_NAME")
				Me.OnLAB_LIS_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_MAPPINGCODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_MAPPINGCODE() As String
		Get
			Return Me._LAB_LIS_MAPPINGCODE
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_MAPPINGCODE, value) = false) Then
				Me.OnLAB_LIS_MAPPINGCODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_MAPPINGCODE = value
				Me.SendPropertyChanged("LAB_LIS_MAPPINGCODE")
				Me.OnLAB_LIS_MAPPINGCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_LIS_REMARK() As String
		Get
			Return Me._LAB_LIS_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_LIS_REMARK, value) = false) Then
				Me.OnLAB_LIS_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_REMARK = value
				Me.SendPropertyChanged("LAB_LIS_REMARK")
				Me.OnLAB_LIS_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_LIS_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_LIS_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_LIS_USEORNOT
		End Get
		Set
			If (Me._LAB_LIS_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_LIS_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_LIS_USEORNOT = value
				Me.SendPropertyChanged("LAB_LIS_USEORNOT")
				Me.OnLAB_LIS_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_PHYSIOLOGY")>  _
Partial Public Class MAS_LAB_PHYSIOLOGY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_PHYSIOLOGY_ID As Integer
	
	Private _LAB_PHYSIOLOGY_CODE As String
	
	Private _LAB_PHYSIOLOGY_NAME As String
	
	Private _LAB_PHYSIOLOGY_OTHERNAME As String
	
	Private _LAB_PHYSIOLOGY_REMARK As String
	
	Private _LAB_PHYSIOLOGY_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_IDChanged()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_OTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_OTHERNAMEChanged()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_PHYSIOLOGY_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As Boolean)
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_PHYSIOLOGY_ID() As Integer
		Get
			Return Me._LAB_PHYSIOLOGY_ID
		End Get
		Set
			If ((Me._LAB_PHYSIOLOGY_ID = value)  _
						= false) Then
				Me.OnLAB_PHYSIOLOGY_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_ID = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_ID")
				Me.OnLAB_PHYSIOLOGY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_PHYSIOLOGY_CODE() As String
		Get
			Return Me._LAB_PHYSIOLOGY_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_PHYSIOLOGY_CODE, value) = false) Then
				Me.OnLAB_PHYSIOLOGY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_CODE = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_CODE")
				Me.OnLAB_PHYSIOLOGY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_PHYSIOLOGY_NAME() As String
		Get
			Return Me._LAB_PHYSIOLOGY_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_PHYSIOLOGY_NAME, value) = false) Then
				Me.OnLAB_PHYSIOLOGY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_NAME = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_NAME")
				Me.OnLAB_PHYSIOLOGY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_OTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_PHYSIOLOGY_OTHERNAME() As String
		Get
			Return Me._LAB_PHYSIOLOGY_OTHERNAME
		End Get
		Set
			If (String.Equals(Me._LAB_PHYSIOLOGY_OTHERNAME, value) = false) Then
				Me.OnLAB_PHYSIOLOGY_OTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_OTHERNAME = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_OTHERNAME")
				Me.OnLAB_PHYSIOLOGY_OTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_PHYSIOLOGY_REMARK() As String
		Get
			Return Me._LAB_PHYSIOLOGY_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_PHYSIOLOGY_REMARK, value) = false) Then
				Me.OnLAB_PHYSIOLOGY_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_REMARK = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_REMARK")
				Me.OnLAB_PHYSIOLOGY_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_PHYSIOLOGY_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_PHYSIOLOGY_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_PHYSIOLOGY_USEORNOT
		End Get
		Set
			If (Me._LAB_PHYSIOLOGY_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_PHYSIOLOGY_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_PHYSIOLOGY_USEORNOT = value
				Me.SendPropertyChanged("LAB_PHYSIOLOGY_USEORNOT")
				Me.OnLAB_PHYSIOLOGY_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit NOT NULL")>  _
	Public Property ACTIVEFLAG() As Boolean
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If ((Me._ACTIVEFLAG = value)  _
						= false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_SENSITIVE_BACTERIA")>  _
Partial Public Class MAS_LAB_SENSITIVE_BACTERIA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_SENSITIVE_BACTERIA_ID As Integer
	
	Private _LAB_SENSITIVE_BACTERIA_CODE As String
	
	Private _LAB_SENSITIVE_BACTERIA_NAME As String
	
	Private _LAB_SENSITIVE_BACTERIA_OTHERNAME As String
	
	Private _LAB_SENSITIVE_BACTERIA_REMARK As String
	
	Private _LAB_SENSITIVE_BACTERIA_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_OTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_OTHERNAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_SENSITIVE_BACTERIA_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_SENSITIVE_BACTERIA_ID() As Integer
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_ID
		End Get
		Set
			If ((Me._LAB_SENSITIVE_BACTERIA_ID = value)  _
						= false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_ID = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_ID")
				Me.OnLAB_SENSITIVE_BACTERIA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SENSITIVE_BACTERIA_CODE() As String
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_SENSITIVE_BACTERIA_CODE, value) = false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_CODE = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_CODE")
				Me.OnLAB_SENSITIVE_BACTERIA_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SENSITIVE_BACTERIA_NAME() As String
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SENSITIVE_BACTERIA_NAME, value) = false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_NAME = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_NAME")
				Me.OnLAB_SENSITIVE_BACTERIA_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_OTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SENSITIVE_BACTERIA_OTHERNAME() As String
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_OTHERNAME
		End Get
		Set
			If (String.Equals(Me._LAB_SENSITIVE_BACTERIA_OTHERNAME, value) = false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_OTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_OTHERNAME = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_OTHERNAME")
				Me.OnLAB_SENSITIVE_BACTERIA_OTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SENSITIVE_BACTERIA_REMARK() As String
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_SENSITIVE_BACTERIA_REMARK, value) = false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_REMARK = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_REMARK")
				Me.OnLAB_SENSITIVE_BACTERIA_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SENSITIVE_BACTERIA_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_SENSITIVE_BACTERIA_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_SENSITIVE_BACTERIA_USEORNOT
		End Get
		Set
			If (Me._LAB_SENSITIVE_BACTERIA_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_SENSITIVE_BACTERIA_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SENSITIVE_BACTERIA_USEORNOT = value
				Me.SendPropertyChanged("LAB_SENSITIVE_BACTERIA_USEORNOT")
				Me.OnLAB_SENSITIVE_BACTERIA_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_SETDETAIL")>  _
Partial Public Class MAS_LAB_SETDETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_SETDETAIL_ID As Integer
	
	Private _LAB_SETDETAIL_FK As System.Nullable(Of Integer)
	
	Private _LAB_SETDETAIL_LAB_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETDETAIL_LAB_NAME As String
	
	Private _LAB_SETDETAIL_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETDETAIL_STATUSUSE_NAME As String
	
	Private _LAB_SETDETAIL_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETDETAIL_CDGITEMTOPIC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _LAB_SETDETAIL_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_FKChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_LAB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_LAB_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_LAB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_LAB_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETDETAIL_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_SETDETAIL_ID() As Integer
		Get
			Return Me._LAB_SETDETAIL_ID
		End Get
		Set
			If ((Me._LAB_SETDETAIL_ID = value)  _
						= false) Then
				Me.OnLAB_SETDETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_ID = value
				Me.SendPropertyChanged("LAB_SETDETAIL_ID")
				Me.OnLAB_SETDETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_FK", DbType:="Int")>  _
	Public Property LAB_SETDETAIL_FK() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETDETAIL_FK
		End Get
		Set
			If (Me._LAB_SETDETAIL_FK.Equals(value) = false) Then
				Me.OnLAB_SETDETAIL_FKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_FK = value
				Me.SendPropertyChanged("LAB_SETDETAIL_FK")
				Me.OnLAB_SETDETAIL_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_LAB_ID", DbType:="Int")>  _
	Public Property LAB_SETDETAIL_LAB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETDETAIL_LAB_ID
		End Get
		Set
			If (Me._LAB_SETDETAIL_LAB_ID.Equals(value) = false) Then
				Me.OnLAB_SETDETAIL_LAB_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_LAB_ID = value
				Me.SendPropertyChanged("LAB_SETDETAIL_LAB_ID")
				Me.OnLAB_SETDETAIL_LAB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_LAB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETDETAIL_LAB_NAME() As String
		Get
			Return Me._LAB_SETDETAIL_LAB_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETDETAIL_LAB_NAME, value) = false) Then
				Me.OnLAB_SETDETAIL_LAB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_LAB_NAME = value
				Me.SendPropertyChanged("LAB_SETDETAIL_LAB_NAME")
				Me.OnLAB_SETDETAIL_LAB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_STATUSUSE_ID", DbType:="Int")>  _
	Public Property LAB_SETDETAIL_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETDETAIL_STATUSUSE_ID
		End Get
		Set
			If (Me._LAB_SETDETAIL_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnLAB_SETDETAIL_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_STATUSUSE_ID = value
				Me.SendPropertyChanged("LAB_SETDETAIL_STATUSUSE_ID")
				Me.OnLAB_SETDETAIL_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETDETAIL_STATUSUSE_NAME() As String
		Get
			Return Me._LAB_SETDETAIL_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETDETAIL_STATUSUSE_NAME, value) = false) Then
				Me.OnLAB_SETDETAIL_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_STATUSUSE_NAME = value
				Me.SendPropertyChanged("LAB_SETDETAIL_STATUSUSE_NAME")
				Me.OnLAB_SETDETAIL_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property LAB_SETDETAIL_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETDETAIL_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._LAB_SETDETAIL_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnLAB_SETDETAIL_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("LAB_SETDETAIL_CDGITEMTOPIC_ID")
				Me.OnLAB_SETDETAIL_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETDETAIL_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._LAB_SETDETAIL_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETDETAIL_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnLAB_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("LAB_SETDETAIL_CDGITEMTOPIC_NAME")
				Me.OnLAB_SETDETAIL_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETDETAIL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETDETAIL_NAME() As String
		Get
			Return Me._LAB_SETDETAIL_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETDETAIL_NAME, value) = false) Then
				Me.OnLAB_SETDETAIL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETDETAIL_NAME = value
				Me.SendPropertyChanged("LAB_SETDETAIL_NAME")
				Me.OnLAB_SETDETAIL_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_SETMAIN")>  _
Partial Public Class MAS_LAB_SETMAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_SET_ID As Integer
	
	Private _LAB_SET_NAME As String
	
	Private _LAB_SET_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _LAB_SET_STATUSUSE_NAME As String
	
	Private _LAB_SET_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _LAB_SET_CDGITEMTOPIC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_SET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_SET_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SET_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SET_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SET_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SET_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SET_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SET_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SET_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SET_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SET_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SET_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_SET_ID() As Integer
		Get
			Return Me._LAB_SET_ID
		End Get
		Set
			If ((Me._LAB_SET_ID = value)  _
						= false) Then
				Me.OnLAB_SET_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_ID = value
				Me.SendPropertyChanged("LAB_SET_ID")
				Me.OnLAB_SET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SET_NAME() As String
		Get
			Return Me._LAB_SET_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SET_NAME, value) = false) Then
				Me.OnLAB_SET_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_NAME = value
				Me.SendPropertyChanged("LAB_SET_NAME")
				Me.OnLAB_SET_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_STATUSUSE_ID", DbType:="Int")>  _
	Public Property LAB_SET_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SET_STATUSUSE_ID
		End Get
		Set
			If (Me._LAB_SET_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnLAB_SET_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_STATUSUSE_ID = value
				Me.SendPropertyChanged("LAB_SET_STATUSUSE_ID")
				Me.OnLAB_SET_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SET_STATUSUSE_NAME() As String
		Get
			Return Me._LAB_SET_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SET_STATUSUSE_NAME, value) = false) Then
				Me.OnLAB_SET_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_STATUSUSE_NAME = value
				Me.SendPropertyChanged("LAB_SET_STATUSUSE_NAME")
				Me.OnLAB_SET_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property LAB_SET_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SET_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._LAB_SET_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnLAB_SET_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("LAB_SET_CDGITEMTOPIC_ID")
				Me.OnLAB_SET_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SET_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SET_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._LAB_SET_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SET_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnLAB_SET_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SET_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("LAB_SET_CDGITEMTOPIC_NAME")
				Me.OnLAB_SET_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_SETTRANSMISSION")>  _
Partial Public Class MAS_LAB_SETTRANSMISSION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_SETTRANSMISSION_ID As Integer
	
	Private _LAB_SETTRANSMISSION_FK As System.Nullable(Of Integer)
	
	Private _LAB_SETTRANSMISSION_NAME As String
	
	Private _LAB_SETTRANSMISSION_LAB_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETTRANSMISSION_LAB_NAME As String
	
	Private _LAB_SETTRANSMISSION_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETTRANSMISSION_STATUSUSE_NAME As String
	
	Private _LAB_SETTRANSMISSION_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME As String
	
	Private _LAB_SETTRANMISSION_UNIT As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As System.Nullable(Of Date)
	
	Private _LAB_SETTRANSMISSION_VOLUME As String
	
	Private _LAB_SETTRANSMISSION_FK_SETDETAIL As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_FKChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_LAB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_LAB_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_LAB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_LAB_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANMISSION_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANMISSION_UNITChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_VOLUMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_VOLUMEChanged()
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_FK_SETDETAILChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_SETTRANSMISSION_FK_SETDETAILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_SETTRANSMISSION_ID() As Integer
		Get
			Return Me._LAB_SETTRANSMISSION_ID
		End Get
		Set
			If ((Me._LAB_SETTRANSMISSION_ID = value)  _
						= false) Then
				Me.OnLAB_SETTRANSMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_ID = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_ID")
				Me.OnLAB_SETTRANSMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_FK", DbType:="Int")>  _
	Public Property LAB_SETTRANSMISSION_FK() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETTRANSMISSION_FK
		End Get
		Set
			If (Me._LAB_SETTRANSMISSION_FK.Equals(value) = false) Then
				Me.OnLAB_SETTRANSMISSION_FKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_FK = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_FK")
				Me.OnLAB_SETTRANSMISSION_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANSMISSION_NAME() As String
		Get
			Return Me._LAB_SETTRANSMISSION_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANSMISSION_NAME, value) = false) Then
				Me.OnLAB_SETTRANSMISSION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_NAME = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_NAME")
				Me.OnLAB_SETTRANSMISSION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_LAB_ID", DbType:="Int")>  _
	Public Property LAB_SETTRANSMISSION_LAB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETTRANSMISSION_LAB_ID
		End Get
		Set
			If (Me._LAB_SETTRANSMISSION_LAB_ID.Equals(value) = false) Then
				Me.OnLAB_SETTRANSMISSION_LAB_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_LAB_ID = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_LAB_ID")
				Me.OnLAB_SETTRANSMISSION_LAB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_LAB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANSMISSION_LAB_NAME() As String
		Get
			Return Me._LAB_SETTRANSMISSION_LAB_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANSMISSION_LAB_NAME, value) = false) Then
				Me.OnLAB_SETTRANSMISSION_LAB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_LAB_NAME = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_LAB_NAME")
				Me.OnLAB_SETTRANSMISSION_LAB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_STATUSUSE_ID", DbType:="Int")>  _
	Public Property LAB_SETTRANSMISSION_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETTRANSMISSION_STATUSUSE_ID
		End Get
		Set
			If (Me._LAB_SETTRANSMISSION_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnLAB_SETTRANSMISSION_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_STATUSUSE_ID = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_STATUSUSE_ID")
				Me.OnLAB_SETTRANSMISSION_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANSMISSION_STATUSUSE_NAME() As String
		Get
			Return Me._LAB_SETTRANSMISSION_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANSMISSION_STATUSUSE_NAME, value) = false) Then
				Me.OnLAB_SETTRANSMISSION_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_STATUSUSE_NAME = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_STATUSUSE_NAME")
				Me.OnLAB_SETTRANSMISSION_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property LAB_SETTRANSMISSION_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnLAB_SETTRANSMISSION_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_CDGITEMTOPIC_ID")
				Me.OnLAB_SETTRANSMISSION_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnLAB_SETTRANSMISSION_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_CDGITEMTOPIC_NAME")
				Me.OnLAB_SETTRANSMISSION_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANMISSION_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANMISSION_UNIT() As String
		Get
			Return Me._LAB_SETTRANMISSION_UNIT
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANMISSION_UNIT, value) = false) Then
				Me.OnLAB_SETTRANMISSION_UNITChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANMISSION_UNIT = value
				Me.SendPropertyChanged("LAB_SETTRANMISSION_UNIT")
				Me.OnLAB_SETTRANMISSION_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="DateTime")>  _
	Public Property UPDATE_BY() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (Me._UPDATE_BY.Equals(value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_VOLUME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_SETTRANSMISSION_VOLUME() As String
		Get
			Return Me._LAB_SETTRANSMISSION_VOLUME
		End Get
		Set
			If (String.Equals(Me._LAB_SETTRANSMISSION_VOLUME, value) = false) Then
				Me.OnLAB_SETTRANSMISSION_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_VOLUME = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_VOLUME")
				Me.OnLAB_SETTRANSMISSION_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_SETTRANSMISSION_FK_SETDETAIL", DbType:="Int")>  _
	Public Property LAB_SETTRANSMISSION_FK_SETDETAIL() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_SETTRANSMISSION_FK_SETDETAIL
		End Get
		Set
			If (Me._LAB_SETTRANSMISSION_FK_SETDETAIL.Equals(value) = false) Then
				Me.OnLAB_SETTRANSMISSION_FK_SETDETAILChanging(value)
				Me.SendPropertyChanging
				Me._LAB_SETTRANSMISSION_FK_SETDETAIL = value
				Me.SendPropertyChanged("LAB_SETTRANSMISSION_FK_SETDETAIL")
				Me.OnLAB_SETTRANSMISSION_FK_SETDETAILChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LAB_TYPE_Pathology")>  _
Partial Public Class MAS_LAB_TYPE_Pathology
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LAB_TYPE_Pathology_ID As Integer
	
	Private _LAB_TYPE_Pathology_CODE As String
	
	Private _LAB_TYPE_Pathology_NAME As String
	
	Private _LAB_TYPE_Pathology_OTHERNAME As String
	
	Private _LAB_TYPE_Pathology_REMARK As String
	
	Private _LAB_TYPE_Pathology_USEORNOT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_IDChanged()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_NAMEChanged()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_OTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_OTHERNAMEChanged()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_REMARKChanged()
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_USEORNOTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLAB_TYPE_Pathology_USEORNOTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LAB_TYPE_Pathology_ID() As Integer
		Get
			Return Me._LAB_TYPE_Pathology_ID
		End Get
		Set
			If ((Me._LAB_TYPE_Pathology_ID = value)  _
						= false) Then
				Me.OnLAB_TYPE_Pathology_IDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_ID = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_ID")
				Me.OnLAB_TYPE_Pathology_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_TYPE_Pathology_CODE() As String
		Get
			Return Me._LAB_TYPE_Pathology_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_TYPE_Pathology_CODE, value) = false) Then
				Me.OnLAB_TYPE_Pathology_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_CODE = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_CODE")
				Me.OnLAB_TYPE_Pathology_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_TYPE_Pathology_NAME() As String
		Get
			Return Me._LAB_TYPE_Pathology_NAME
		End Get
		Set
			If (String.Equals(Me._LAB_TYPE_Pathology_NAME, value) = false) Then
				Me.OnLAB_TYPE_Pathology_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_NAME = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_NAME")
				Me.OnLAB_TYPE_Pathology_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_OTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_TYPE_Pathology_OTHERNAME() As String
		Get
			Return Me._LAB_TYPE_Pathology_OTHERNAME
		End Get
		Set
			If (String.Equals(Me._LAB_TYPE_Pathology_OTHERNAME, value) = false) Then
				Me.OnLAB_TYPE_Pathology_OTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_OTHERNAME = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_OTHERNAME")
				Me.OnLAB_TYPE_Pathology_OTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_TYPE_Pathology_REMARK() As String
		Get
			Return Me._LAB_TYPE_Pathology_REMARK
		End Get
		Set
			If (String.Equals(Me._LAB_TYPE_Pathology_REMARK, value) = false) Then
				Me.OnLAB_TYPE_Pathology_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_REMARK = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_REMARK")
				Me.OnLAB_TYPE_Pathology_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_TYPE_Pathology_USEORNOT", DbType:="Bit")>  _
	Public Property LAB_TYPE_Pathology_USEORNOT() As System.Nullable(Of Boolean)
		Get
			Return Me._LAB_TYPE_Pathology_USEORNOT
		End Get
		Set
			If (Me._LAB_TYPE_Pathology_USEORNOT.Equals(value) = false) Then
				Me.OnLAB_TYPE_Pathology_USEORNOTChanging(value)
				Me.SendPropertyChanging
				Me._LAB_TYPE_Pathology_USEORNOT = value
				Me.SendPropertyChanged("LAB_TYPE_Pathology_USEORNOT")
				Me.OnLAB_TYPE_Pathology_USEORNOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABITEM")>  _
Partial Public Class MAS_LABITEM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LABITEM_ID As Integer
	
	Private _LABITEM_ITEMKEY As String
	
	Private _LABITEM_CATEGORYKEY As String
	
	Private _LABITEM_INTERVAL As String
	
	Private _LABITEM_ISSENSITIVITYTEST As System.Nullable(Of Boolean)
	
	Private _LABITEM_ISAUTOMATED As System.Nullable(Of Boolean)
	
	Private _LABITEM_NOTE As String
	
	Private _LABITEM_ISONETIME As System.Nullable(Of Boolean)
	
	Private _LABITEM_ISCONFIDENTIAL As System.Nullable(Of Boolean)
	
	Private _LABITEM_ISEXTERNALALLOWED As System.Nullable(Of Boolean)
	
	Private _LABITEM_ORDERNUM As String
	
	Private _LABITEM_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_BY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLABITEM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLABITEM_IDChanged()
    End Sub
    Partial Private Sub OnLABITEM_ITEMKEYChanging(value As String)
    End Sub
    Partial Private Sub OnLABITEM_ITEMKEYChanged()
    End Sub
    Partial Private Sub OnLABITEM_CATEGORYKEYChanging(value As String)
    End Sub
    Partial Private Sub OnLABITEM_CATEGORYKEYChanged()
    End Sub
    Partial Private Sub OnLABITEM_INTERVALChanging(value As String)
    End Sub
    Partial Private Sub OnLABITEM_INTERVALChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISSENSITIVITYTESTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLABITEM_ISSENSITIVITYTESTChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISAUTOMATEDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLABITEM_ISAUTOMATEDChanged()
    End Sub
    Partial Private Sub OnLABITEM_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnLABITEM_NOTEChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISONETIMEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLABITEM_ISONETIMEChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISCONFIDENTIALChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLABITEM_ISCONFIDENTIALChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISEXTERNALALLOWEDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLABITEM_ISEXTERNALALLOWEDChanged()
    End Sub
    Partial Private Sub OnLABITEM_ORDERNUMChanging(value As String)
    End Sub
    Partial Private Sub OnLABITEM_ORDERNUMChanged()
    End Sub
    Partial Private Sub OnLABITEM_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABITEM_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LABITEM_ID() As Integer
		Get
			Return Me._LABITEM_ID
		End Get
		Set
			If ((Me._LABITEM_ID = value)  _
						= false) Then
				Me.OnLABITEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ID = value
				Me.SendPropertyChanged("LABITEM_ID")
				Me.OnLABITEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ITEMKEY", DbType:="NVarChar(MAX)")>  _
	Public Property LABITEM_ITEMKEY() As String
		Get
			Return Me._LABITEM_ITEMKEY
		End Get
		Set
			If (String.Equals(Me._LABITEM_ITEMKEY, value) = false) Then
				Me.OnLABITEM_ITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ITEMKEY = value
				Me.SendPropertyChanged("LABITEM_ITEMKEY")
				Me.OnLABITEM_ITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_CATEGORYKEY", DbType:="NVarChar(MAX)")>  _
	Public Property LABITEM_CATEGORYKEY() As String
		Get
			Return Me._LABITEM_CATEGORYKEY
		End Get
		Set
			If (String.Equals(Me._LABITEM_CATEGORYKEY, value) = false) Then
				Me.OnLABITEM_CATEGORYKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_CATEGORYKEY = value
				Me.SendPropertyChanged("LABITEM_CATEGORYKEY")
				Me.OnLABITEM_CATEGORYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_INTERVAL", DbType:="NVarChar(MAX)")>  _
	Public Property LABITEM_INTERVAL() As String
		Get
			Return Me._LABITEM_INTERVAL
		End Get
		Set
			If (String.Equals(Me._LABITEM_INTERVAL, value) = false) Then
				Me.OnLABITEM_INTERVALChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_INTERVAL = value
				Me.SendPropertyChanged("LABITEM_INTERVAL")
				Me.OnLABITEM_INTERVALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISSENSITIVITYTEST", DbType:="Bit")>  _
	Public Property LABITEM_ISSENSITIVITYTEST() As System.Nullable(Of Boolean)
		Get
			Return Me._LABITEM_ISSENSITIVITYTEST
		End Get
		Set
			If (Me._LABITEM_ISSENSITIVITYTEST.Equals(value) = false) Then
				Me.OnLABITEM_ISSENSITIVITYTESTChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISSENSITIVITYTEST = value
				Me.SendPropertyChanged("LABITEM_ISSENSITIVITYTEST")
				Me.OnLABITEM_ISSENSITIVITYTESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISAUTOMATED", DbType:="Bit")>  _
	Public Property LABITEM_ISAUTOMATED() As System.Nullable(Of Boolean)
		Get
			Return Me._LABITEM_ISAUTOMATED
		End Get
		Set
			If (Me._LABITEM_ISAUTOMATED.Equals(value) = false) Then
				Me.OnLABITEM_ISAUTOMATEDChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISAUTOMATED = value
				Me.SendPropertyChanged("LABITEM_ISAUTOMATED")
				Me.OnLABITEM_ISAUTOMATEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property LABITEM_NOTE() As String
		Get
			Return Me._LABITEM_NOTE
		End Get
		Set
			If (String.Equals(Me._LABITEM_NOTE, value) = false) Then
				Me.OnLABITEM_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_NOTE = value
				Me.SendPropertyChanged("LABITEM_NOTE")
				Me.OnLABITEM_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISONETIME", DbType:="Bit")>  _
	Public Property LABITEM_ISONETIME() As System.Nullable(Of Boolean)
		Get
			Return Me._LABITEM_ISONETIME
		End Get
		Set
			If (Me._LABITEM_ISONETIME.Equals(value) = false) Then
				Me.OnLABITEM_ISONETIMEChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISONETIME = value
				Me.SendPropertyChanged("LABITEM_ISONETIME")
				Me.OnLABITEM_ISONETIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISCONFIDENTIAL", DbType:="Bit")>  _
	Public Property LABITEM_ISCONFIDENTIAL() As System.Nullable(Of Boolean)
		Get
			Return Me._LABITEM_ISCONFIDENTIAL
		End Get
		Set
			If (Me._LABITEM_ISCONFIDENTIAL.Equals(value) = false) Then
				Me.OnLABITEM_ISCONFIDENTIALChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISCONFIDENTIAL = value
				Me.SendPropertyChanged("LABITEM_ISCONFIDENTIAL")
				Me.OnLABITEM_ISCONFIDENTIALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISEXTERNALALLOWED", DbType:="Bit")>  _
	Public Property LABITEM_ISEXTERNALALLOWED() As System.Nullable(Of Boolean)
		Get
			Return Me._LABITEM_ISEXTERNALALLOWED
		End Get
		Set
			If (Me._LABITEM_ISEXTERNALALLOWED.Equals(value) = false) Then
				Me.OnLABITEM_ISEXTERNALALLOWEDChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISEXTERNALALLOWED = value
				Me.SendPropertyChanged("LABITEM_ISEXTERNALALLOWED")
				Me.OnLABITEM_ISEXTERNALALLOWEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ORDERNUM", DbType:="NVarChar(MAX)")>  _
	Public Property LABITEM_ORDERNUM() As String
		Get
			Return Me._LABITEM_ORDERNUM
		End Get
		Set
			If (String.Equals(Me._LABITEM_ORDERNUM, value) = false) Then
				Me.OnLABITEM_ORDERNUMChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ORDERNUM = value
				Me.SendPropertyChanged("LABITEM_ORDERNUM")
				Me.OnLABITEM_ORDERNUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABITEM_ISDISABLED", DbType:="Int")>  _
	Public Property LABITEM_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LABITEM_ISDISABLED
		End Get
		Set
			If (Me._LABITEM_ISDISABLED.Equals(value) = false) Then
				Me.OnLABITEM_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LABITEM_ISDISABLED = value
				Me.SendPropertyChanged("LABITEM_ISDISABLED")
				Me.OnLABITEM_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABMETHOD")>  _
Partial Public Class MAS_LABMETHOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LABMETHOD_ID As Integer
	
	Private _LABMETHOD_CODE As String
	
	Private _LABMETHOD_NAME As String
	
	Private _LABMETHOD_ENNAME As String
	
	Private _LABMETHOD_NOTE As String
	
	Private _LABMETHOD_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLABMETHOD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLABMETHOD_IDChanged()
    End Sub
    Partial Private Sub OnLABMETHOD_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLABMETHOD_CODEChanged()
    End Sub
    Partial Private Sub OnLABMETHOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABMETHOD_NAMEChanged()
    End Sub
    Partial Private Sub OnLABMETHOD_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABMETHOD_ENNAMEChanged()
    End Sub
    Partial Private Sub OnLABMETHOD_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnLABMETHOD_NOTEChanged()
    End Sub
    Partial Private Sub OnLABMETHOD_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABMETHOD_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LABMETHOD_ID() As Integer
		Get
			Return Me._LABMETHOD_ID
		End Get
		Set
			If ((Me._LABMETHOD_ID = value)  _
						= false) Then
				Me.OnLABMETHOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_ID = value
				Me.SendPropertyChanged("LABMETHOD_ID")
				Me.OnLABMETHOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_CODE", DbType:="NVarChar(50)")>  _
	Public Property LABMETHOD_CODE() As String
		Get
			Return Me._LABMETHOD_CODE
		End Get
		Set
			If (String.Equals(Me._LABMETHOD_CODE, value) = false) Then
				Me.OnLABMETHOD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_CODE = value
				Me.SendPropertyChanged("LABMETHOD_CODE")
				Me.OnLABMETHOD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABMETHOD_NAME() As String
		Get
			Return Me._LABMETHOD_NAME
		End Get
		Set
			If (String.Equals(Me._LABMETHOD_NAME, value) = false) Then
				Me.OnLABMETHOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_NAME = value
				Me.SendPropertyChanged("LABMETHOD_NAME")
				Me.OnLABMETHOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABMETHOD_ENNAME() As String
		Get
			Return Me._LABMETHOD_ENNAME
		End Get
		Set
			If (String.Equals(Me._LABMETHOD_ENNAME, value) = false) Then
				Me.OnLABMETHOD_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_ENNAME = value
				Me.SendPropertyChanged("LABMETHOD_ENNAME")
				Me.OnLABMETHOD_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property LABMETHOD_NOTE() As String
		Get
			Return Me._LABMETHOD_NOTE
		End Get
		Set
			If (String.Equals(Me._LABMETHOD_NOTE, value) = false) Then
				Me.OnLABMETHOD_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_NOTE = value
				Me.SendPropertyChanged("LABMETHOD_NOTE")
				Me.OnLABMETHOD_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABMETHOD_ISDISABLED", DbType:="Int")>  _
	Public Property LABMETHOD_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LABMETHOD_ISDISABLED
		End Get
		Set
			If (Me._LABMETHOD_ISDISABLED.Equals(value) = false) Then
				Me.OnLABMETHOD_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LABMETHOD_ISDISABLED = value
				Me.SendPropertyChanged("LABMETHOD_ISDISABLED")
				Me.OnLABMETHOD_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABOR")>  _
Partial Public Class MAS_LABOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ABOR_ID As Integer
	
	Private _ABOR_CODE As System.Nullable(Of Integer)
	
	Private _ABOR_DEScription As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnABOR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnABOR_IDChanged()
    End Sub
    Partial Private Sub OnABOR_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnABOR_CODEChanged()
    End Sub
    Partial Private Sub OnABOR_DEScriptionChanging(value As String)
    End Sub
    Partial Private Sub OnABOR_DEScriptionChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOR_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ABOR_ID() As Integer
		Get
			Return Me._ABOR_ID
		End Get
		Set
			If ((Me._ABOR_ID = value)  _
						= false) Then
				Me.OnABOR_IDChanging(value)
				Me.SendPropertyChanging
				Me._ABOR_ID = value
				Me.SendPropertyChanged("ABOR_ID")
				Me.OnABOR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOR_CODE", DbType:="Int")>  _
	Public Property ABOR_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._ABOR_CODE
		End Get
		Set
			If (Me._ABOR_CODE.Equals(value) = false) Then
				Me.OnABOR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ABOR_CODE = value
				Me.SendPropertyChanged("ABOR_CODE")
				Me.OnABOR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABOR_DEScription", DbType:="VarChar(MAX)")>  _
	Public Property ABOR_DEScription() As String
		Get
			Return Me._ABOR_DEScription
		End Get
		Set
			If (String.Equals(Me._ABOR_DEScription, value) = false) Then
				Me.OnABOR_DEScriptionChanging(value)
				Me.SendPropertyChanging
				Me._ABOR_DEScription = value
				Me.SendPropertyChanged("ABOR_DEScription")
				Me.OnABOR_DEScriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABOUTPUT")>  _
Partial Public Class MAS_LABOUTPUT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LABOUTPUT_ID As Integer
	
	Private _LABOUTPUT_CODE As String
	
	Private _LABOUTPUT_ITEMKEY As String
	
	Private _LABOUTPUT_LINENUM As String
	
	Private _LABOUTPUT_NAME As String
	
	Private _LABOUTPUT_ENNAME As String
	
	Private _LABOUTPUT_LABLISTEAT As String
	
	Private _LABOUTPUT_NOTE As String
	
	Private _LABOUTPUT_UNIT As String
	
	Private _LABOUTPUT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _LABOUTPUT_HASGENDER As String
	
	Private _LABOUTPUT_HASPHY As String
	
	Private _LABOUTPUT_HASAGE As String
	
	Private _LABOUTPUT_DFTVALUE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _FK_LAB_METHOD As System.Nullable(Of Integer)
	
	Private _LABOUTPUT_HIGH As System.Nullable(Of Decimal)
	
	Private _LABOUTPUT_LOW As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLABOUTPUT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLABOUTPUT_IDChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_CODEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_ITEMKEYChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_ITEMKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_LINENUMChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_LINENUMChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_NAMEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_LABLISTEATChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_LABLISTEATChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_NOTEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_UNITChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_HASGENDERChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_HASGENDERChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_HASPHYChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_HASPHYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_HASAGEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_HASAGEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_DFTVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUT_DFTVALUEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnFK_LAB_METHODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LAB_METHODChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_HIGHChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLABOUTPUT_HIGHChanged()
    End Sub
    Partial Private Sub OnLABOUTPUT_LOWChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLABOUTPUT_LOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LABOUTPUT_ID() As Integer
		Get
			Return Me._LABOUTPUT_ID
		End Get
		Set
			If ((Me._LABOUTPUT_ID = value)  _
						= false) Then
				Me.OnLABOUTPUT_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_ID = value
				Me.SendPropertyChanged("LABOUTPUT_ID")
				Me.OnLABOUTPUT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_CODE", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_CODE() As String
		Get
			Return Me._LABOUTPUT_CODE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_CODE, value) = false) Then
				Me.OnLABOUTPUT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_CODE = value
				Me.SendPropertyChanged("LABOUTPUT_CODE")
				Me.OnLABOUTPUT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_ITEMKEY", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_ITEMKEY() As String
		Get
			Return Me._LABOUTPUT_ITEMKEY
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_ITEMKEY, value) = false) Then
				Me.OnLABOUTPUT_ITEMKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_ITEMKEY = value
				Me.SendPropertyChanged("LABOUTPUT_ITEMKEY")
				Me.OnLABOUTPUT_ITEMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_LINENUM", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_LINENUM() As String
		Get
			Return Me._LABOUTPUT_LINENUM
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_LINENUM, value) = false) Then
				Me.OnLABOUTPUT_LINENUMChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_LINENUM = value
				Me.SendPropertyChanged("LABOUTPUT_LINENUM")
				Me.OnLABOUTPUT_LINENUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUT_NAME() As String
		Get
			Return Me._LABOUTPUT_NAME
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_NAME, value) = false) Then
				Me.OnLABOUTPUT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_NAME = value
				Me.SendPropertyChanged("LABOUTPUT_NAME")
				Me.OnLABOUTPUT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUT_ENNAME() As String
		Get
			Return Me._LABOUTPUT_ENNAME
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_ENNAME, value) = false) Then
				Me.OnLABOUTPUT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_ENNAME = value
				Me.SendPropertyChanged("LABOUTPUT_ENNAME")
				Me.OnLABOUTPUT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_LABLISTEAT", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUT_LABLISTEAT() As String
		Get
			Return Me._LABOUTPUT_LABLISTEAT
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_LABLISTEAT, value) = false) Then
				Me.OnLABOUTPUT_LABLISTEATChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_LABLISTEAT = value
				Me.SendPropertyChanged("LABOUTPUT_LABLISTEAT")
				Me.OnLABOUTPUT_LABLISTEATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUT_NOTE() As String
		Get
			Return Me._LABOUTPUT_NOTE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_NOTE, value) = false) Then
				Me.OnLABOUTPUT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_NOTE = value
				Me.SendPropertyChanged("LABOUTPUT_NOTE")
				Me.OnLABOUTPUT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_UNIT", DbType:="NVarChar(200)")>  _
	Public Property LABOUTPUT_UNIT() As String
		Get
			Return Me._LABOUTPUT_UNIT
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_UNIT, value) = false) Then
				Me.OnLABOUTPUT_UNITChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_UNIT = value
				Me.SendPropertyChanged("LABOUTPUT_UNIT")
				Me.OnLABOUTPUT_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_ISDISABLED", DbType:="Int")>  _
	Public Property LABOUTPUT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUT_ISDISABLED
		End Get
		Set
			If (Me._LABOUTPUT_ISDISABLED.Equals(value) = false) Then
				Me.OnLABOUTPUT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_ISDISABLED = value
				Me.SendPropertyChanged("LABOUTPUT_ISDISABLED")
				Me.OnLABOUTPUT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_HASGENDER", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_HASGENDER() As String
		Get
			Return Me._LABOUTPUT_HASGENDER
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_HASGENDER, value) = false) Then
				Me.OnLABOUTPUT_HASGENDERChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_HASGENDER = value
				Me.SendPropertyChanged("LABOUTPUT_HASGENDER")
				Me.OnLABOUTPUT_HASGENDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_HASPHY", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_HASPHY() As String
		Get
			Return Me._LABOUTPUT_HASPHY
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_HASPHY, value) = false) Then
				Me.OnLABOUTPUT_HASPHYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_HASPHY = value
				Me.SendPropertyChanged("LABOUTPUT_HASPHY")
				Me.OnLABOUTPUT_HASPHYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_HASAGE", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_HASAGE() As String
		Get
			Return Me._LABOUTPUT_HASAGE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_HASAGE, value) = false) Then
				Me.OnLABOUTPUT_HASAGEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_HASAGE = value
				Me.SendPropertyChanged("LABOUTPUT_HASAGE")
				Me.OnLABOUTPUT_HASAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_DFTVALUE", DbType:="NVarChar(50)")>  _
	Public Property LABOUTPUT_DFTVALUE() As String
		Get
			Return Me._LABOUTPUT_DFTVALUE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUT_DFTVALUE, value) = false) Then
				Me.OnLABOUTPUT_DFTVALUEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_DFTVALUE = value
				Me.SendPropertyChanged("LABOUTPUT_DFTVALUE")
				Me.OnLABOUTPUT_DFTVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LAB_METHOD", DbType:="Int")>  _
	Public Property FK_LAB_METHOD() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LAB_METHOD
		End Get
		Set
			If (Me._FK_LAB_METHOD.Equals(value) = false) Then
				Me.OnFK_LAB_METHODChanging(value)
				Me.SendPropertyChanging
				Me._FK_LAB_METHOD = value
				Me.SendPropertyChanged("FK_LAB_METHOD")
				Me.OnFK_LAB_METHODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_HIGH", DbType:="Decimal(18,0)")>  _
	Public Property LABOUTPUT_HIGH() As System.Nullable(Of Decimal)
		Get
			Return Me._LABOUTPUT_HIGH
		End Get
		Set
			If (Me._LABOUTPUT_HIGH.Equals(value) = false) Then
				Me.OnLABOUTPUT_HIGHChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_HIGH = value
				Me.SendPropertyChanged("LABOUTPUT_HIGH")
				Me.OnLABOUTPUT_HIGHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUT_LOW", DbType:="Decimal(18,0)")>  _
	Public Property LABOUTPUT_LOW() As System.Nullable(Of Decimal)
		Get
			Return Me._LABOUTPUT_LOW
		End Get
		Set
			If (Me._LABOUTPUT_LOW.Equals(value) = false) Then
				Me.OnLABOUTPUT_LOWChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUT_LOW = value
				Me.SendPropertyChanged("LABOUTPUT_LOW")
				Me.OnLABOUTPUT_LOWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABOUTPUTREF")>  _
Partial Public Class MAS_LABOUTPUTREF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LABOUTPUTREF_ID As Integer
	
	Private _LABOUTPUTREF_KEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_LABOUTPUTKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_SPECIMENKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_GENDERKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_SPHYSIOLOGICKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_FROMAGE As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_FROMAGEUNITKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_TOAGEUNITKEY As System.Nullable(Of Integer)
	
	Private _LABOUTPUTREF_MAXREFVALUE As String
	
	Private _LABOUTPUTREF_MINREFVALUE As String
	
	Private _LABOUTPUTREF_HPANICVALUE As String
	
	Private _LABOUTPUTREF_LPANICVALUE As String
	
	Private _LABOUTPUTREF_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_BY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLABOUTPUTREF_IDChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_KEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_LABOUTPUTKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_LABOUTPUTKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_SPECIMENKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_SPECIMENKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_GENDERKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_GENDERKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_SPHYSIOLOGICKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_SPHYSIOLOGICKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_FROMAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_FROMAGEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_FROMAGEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_FROMAGEUNITKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_TOAGEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_TOAGEUNITKEYChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_MAXREFVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUTREF_MAXREFVALUEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_MINREFVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUTREF_MINREFVALUEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_HPANICVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUTREF_HPANICVALUEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_LPANICVALUEChanging(value As String)
    End Sub
    Partial Private Sub OnLABOUTPUTREF_LPANICVALUEChanged()
    End Sub
    Partial Private Sub OnLABOUTPUTREF_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABOUTPUTREF_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LABOUTPUTREF_ID() As Integer
		Get
			Return Me._LABOUTPUTREF_ID
		End Get
		Set
			If ((Me._LABOUTPUTREF_ID = value)  _
						= false) Then
				Me.OnLABOUTPUTREF_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_ID = value
				Me.SendPropertyChanged("LABOUTPUTREF_ID")
				Me.OnLABOUTPUTREF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_KEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_KEY
		End Get
		Set
			If (Me._LABOUTPUTREF_KEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_KEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_KEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_KEY")
				Me.OnLABOUTPUTREF_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_LABOUTPUTKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_LABOUTPUTKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_LABOUTPUTKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_LABOUTPUTKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_LABOUTPUTKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_LABOUTPUTKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_LABOUTPUTKEY")
				Me.OnLABOUTPUTREF_LABOUTPUTKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_SPECIMENKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_SPECIMENKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_SPECIMENKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_SPECIMENKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_SPECIMENKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_SPECIMENKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_SPECIMENKEY")
				Me.OnLABOUTPUTREF_SPECIMENKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_GENDERKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_GENDERKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_GENDERKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_GENDERKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_GENDERKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_GENDERKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_GENDERKEY")
				Me.OnLABOUTPUTREF_GENDERKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_SPHYSIOLOGICKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_SPHYSIOLOGICKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_SPHYSIOLOGICKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_SPHYSIOLOGICKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_SPHYSIOLOGICKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_SPHYSIOLOGICKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_SPHYSIOLOGICKEY")
				Me.OnLABOUTPUTREF_SPHYSIOLOGICKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_FROMAGE", DbType:="Int")>  _
	Public Property LABOUTPUTREF_FROMAGE() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_FROMAGE
		End Get
		Set
			If (Me._LABOUTPUTREF_FROMAGE.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_FROMAGEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_FROMAGE = value
				Me.SendPropertyChanged("LABOUTPUTREF_FROMAGE")
				Me.OnLABOUTPUTREF_FROMAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_FROMAGEUNITKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_FROMAGEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_FROMAGEUNITKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_FROMAGEUNITKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_FROMAGEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_FROMAGEUNITKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_FROMAGEUNITKEY")
				Me.OnLABOUTPUTREF_FROMAGEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_TOAGEUNITKEY", DbType:="Int")>  _
	Public Property LABOUTPUTREF_TOAGEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_TOAGEUNITKEY
		End Get
		Set
			If (Me._LABOUTPUTREF_TOAGEUNITKEY.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_TOAGEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_TOAGEUNITKEY = value
				Me.SendPropertyChanged("LABOUTPUTREF_TOAGEUNITKEY")
				Me.OnLABOUTPUTREF_TOAGEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_MAXREFVALUE", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUTREF_MAXREFVALUE() As String
		Get
			Return Me._LABOUTPUTREF_MAXREFVALUE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUTREF_MAXREFVALUE, value) = false) Then
				Me.OnLABOUTPUTREF_MAXREFVALUEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_MAXREFVALUE = value
				Me.SendPropertyChanged("LABOUTPUTREF_MAXREFVALUE")
				Me.OnLABOUTPUTREF_MAXREFVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_MINREFVALUE", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUTREF_MINREFVALUE() As String
		Get
			Return Me._LABOUTPUTREF_MINREFVALUE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUTREF_MINREFVALUE, value) = false) Then
				Me.OnLABOUTPUTREF_MINREFVALUEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_MINREFVALUE = value
				Me.SendPropertyChanged("LABOUTPUTREF_MINREFVALUE")
				Me.OnLABOUTPUTREF_MINREFVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_HPANICVALUE", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUTREF_HPANICVALUE() As String
		Get
			Return Me._LABOUTPUTREF_HPANICVALUE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUTREF_HPANICVALUE, value) = false) Then
				Me.OnLABOUTPUTREF_HPANICVALUEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_HPANICVALUE = value
				Me.SendPropertyChanged("LABOUTPUTREF_HPANICVALUE")
				Me.OnLABOUTPUTREF_HPANICVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_LPANICVALUE", DbType:="NVarChar(MAX)")>  _
	Public Property LABOUTPUTREF_LPANICVALUE() As String
		Get
			Return Me._LABOUTPUTREF_LPANICVALUE
		End Get
		Set
			If (String.Equals(Me._LABOUTPUTREF_LPANICVALUE, value) = false) Then
				Me.OnLABOUTPUTREF_LPANICVALUEChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_LPANICVALUE = value
				Me.SendPropertyChanged("LABOUTPUTREF_LPANICVALUE")
				Me.OnLABOUTPUTREF_LPANICVALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABOUTPUTREF_ISDISABLED", DbType:="Int")>  _
	Public Property LABOUTPUTREF_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LABOUTPUTREF_ISDISABLED
		End Get
		Set
			If (Me._LABOUTPUTREF_ISDISABLED.Equals(value) = false) Then
				Me.OnLABOUTPUTREF_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LABOUTPUTREF_ISDISABLED = value
				Me.SendPropertyChanged("LABOUTPUTREF_ISDISABLED")
				Me.OnLABOUTPUTREF_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LABPHYSIOLOGIC")>  _
Partial Public Class MAS_LABPHYSIOLOGIC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LABPHYSIOLOGIC_ID As Integer
	
	Private _LABPHYSIOLOGIC_CODE As String
	
	Private _LABPHYSIOLOGIC_NAME As String
	
	Private _LABPHYSIOLOGIC_ENNAME As String
	
	Private _LABPHYSIOLOGIC_NOTE As String
	
	Private _LABPHYSIOLOGIC_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_IDChanged()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_CODEChanged()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_NAMEChanged()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_ENNAMEChanged()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_NOTEChanged()
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABPHYSIOLOGIC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LABPHYSIOLOGIC_ID() As Integer
		Get
			Return Me._LABPHYSIOLOGIC_ID
		End Get
		Set
			If ((Me._LABPHYSIOLOGIC_ID = value)  _
						= false) Then
				Me.OnLABPHYSIOLOGIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_ID = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_ID")
				Me.OnLABPHYSIOLOGIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_CODE", DbType:="NVarChar(50)")>  _
	Public Property LABPHYSIOLOGIC_CODE() As String
		Get
			Return Me._LABPHYSIOLOGIC_CODE
		End Get
		Set
			If (String.Equals(Me._LABPHYSIOLOGIC_CODE, value) = false) Then
				Me.OnLABPHYSIOLOGIC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_CODE = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_CODE")
				Me.OnLABPHYSIOLOGIC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABPHYSIOLOGIC_NAME() As String
		Get
			Return Me._LABPHYSIOLOGIC_NAME
		End Get
		Set
			If (String.Equals(Me._LABPHYSIOLOGIC_NAME, value) = false) Then
				Me.OnLABPHYSIOLOGIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_NAME = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_NAME")
				Me.OnLABPHYSIOLOGIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LABPHYSIOLOGIC_ENNAME() As String
		Get
			Return Me._LABPHYSIOLOGIC_ENNAME
		End Get
		Set
			If (String.Equals(Me._LABPHYSIOLOGIC_ENNAME, value) = false) Then
				Me.OnLABPHYSIOLOGIC_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_ENNAME = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_ENNAME")
				Me.OnLABPHYSIOLOGIC_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property LABPHYSIOLOGIC_NOTE() As String
		Get
			Return Me._LABPHYSIOLOGIC_NOTE
		End Get
		Set
			If (String.Equals(Me._LABPHYSIOLOGIC_NOTE, value) = false) Then
				Me.OnLABPHYSIOLOGIC_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_NOTE = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_NOTE")
				Me.OnLABPHYSIOLOGIC_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABPHYSIOLOGIC_ISDISABLED", DbType:="Int")>  _
	Public Property LABPHYSIOLOGIC_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LABPHYSIOLOGIC_ISDISABLED
		End Get
		Set
			If (Me._LABPHYSIOLOGIC_ISDISABLED.Equals(value) = false) Then
				Me.OnLABPHYSIOLOGIC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LABPHYSIOLOGIC_ISDISABLED = value
				Me.SendPropertyChanged("LABPHYSIOLOGIC_ISDISABLED")
				Me.OnLABPHYSIOLOGIC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LabSenseDisc")>  _
Partial Public Class MAS_LabSenseDisc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LabSenseDisc_ID As Integer
	
	Private _LabSenseDisc_Code As String
	
	Private _LabSenseDisc_Name As String
	
	Private _LabSenseDisc_OtherName As String
	
	Private _LabSenseDisc_UseorNot As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
	Private _LabSenseDisc_Remark As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLabSenseDisc_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLabSenseDisc_IDChanged()
    End Sub
    Partial Private Sub OnLabSenseDisc_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnLabSenseDisc_CodeChanged()
    End Sub
    Partial Private Sub OnLabSenseDisc_NameChanging(value As String)
    End Sub
    Partial Private Sub OnLabSenseDisc_NameChanged()
    End Sub
    Partial Private Sub OnLabSenseDisc_OtherNameChanging(value As String)
    End Sub
    Partial Private Sub OnLabSenseDisc_OtherNameChanged()
    End Sub
    Partial Private Sub OnLabSenseDisc_UseorNotChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLabSenseDisc_UseorNotChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnLabSenseDisc_RemarkChanging(value As String)
    End Sub
    Partial Private Sub OnLabSenseDisc_RemarkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LabSenseDisc_ID() As Integer
		Get
			Return Me._LabSenseDisc_ID
		End Get
		Set
			If ((Me._LabSenseDisc_ID = value)  _
						= false) Then
				Me.OnLabSenseDisc_IDChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_ID = value
				Me.SendPropertyChanged("LabSenseDisc_ID")
				Me.OnLabSenseDisc_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_Code", DbType:="NVarChar(MAX)")>  _
	Public Property LabSenseDisc_Code() As String
		Get
			Return Me._LabSenseDisc_Code
		End Get
		Set
			If (String.Equals(Me._LabSenseDisc_Code, value) = false) Then
				Me.OnLabSenseDisc_CodeChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_Code = value
				Me.SendPropertyChanged("LabSenseDisc_Code")
				Me.OnLabSenseDisc_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_Name", DbType:="NVarChar(MAX)")>  _
	Public Property LabSenseDisc_Name() As String
		Get
			Return Me._LabSenseDisc_Name
		End Get
		Set
			If (String.Equals(Me._LabSenseDisc_Name, value) = false) Then
				Me.OnLabSenseDisc_NameChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_Name = value
				Me.SendPropertyChanged("LabSenseDisc_Name")
				Me.OnLabSenseDisc_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_OtherName", DbType:="NVarChar(MAX)")>  _
	Public Property LabSenseDisc_OtherName() As String
		Get
			Return Me._LabSenseDisc_OtherName
		End Get
		Set
			If (String.Equals(Me._LabSenseDisc_OtherName, value) = false) Then
				Me.OnLabSenseDisc_OtherNameChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_OtherName = value
				Me.SendPropertyChanged("LabSenseDisc_OtherName")
				Me.OnLabSenseDisc_OtherNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_UseorNot", DbType:="Bit")>  _
	Public Property LabSenseDisc_UseorNot() As System.Nullable(Of Boolean)
		Get
			Return Me._LabSenseDisc_UseorNot
		End Get
		Set
			If (Me._LabSenseDisc_UseorNot.Equals(value) = false) Then
				Me.OnLabSenseDisc_UseorNotChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_UseorNot = value
				Me.SendPropertyChanged("LabSenseDisc_UseorNot")
				Me.OnLabSenseDisc_UseorNotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabSenseDisc_Remark", DbType:="NVarChar(MAX)")>  _
	Public Property LabSenseDisc_Remark() As String
		Get
			Return Me._LabSenseDisc_Remark
		End Get
		Set
			If (String.Equals(Me._LabSenseDisc_Remark, value) = false) Then
				Me.OnLabSenseDisc_RemarkChanging(value)
				Me.SendPropertyChanging
				Me._LabSenseDisc_Remark = value
				Me.SendPropertyChanged("LabSenseDisc_Remark")
				Me.OnLabSenseDisc_RemarkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LEVELSEVERITY")>  _
Partial Public Class MAS_LEVELSEVERITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LEVELSEVERITY_ID As Integer
	
	Private _LEVELSEVERITY_CODE As String
	
	Private _LEVELSEVERITY_SIGNIFICANCERATINGNAME As String
	
	Private _LEVELSEVERITY_ENNAME As String
	
	Private _LEVELSEVERITY_NOTE As String
	
	Private _LEVELSEVERITY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLEVELSEVERITY_IDChanged()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLEVELSEVERITY_CODEChanged()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_SIGNIFICANCERATINGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLEVELSEVERITY_SIGNIFICANCERATINGNAMEChanged()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLEVELSEVERITY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnLEVELSEVERITY_NOTEChanged()
    End Sub
    Partial Private Sub OnLEVELSEVERITY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEVELSEVERITY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LEVELSEVERITY_ID() As Integer
		Get
			Return Me._LEVELSEVERITY_ID
		End Get
		Set
			If ((Me._LEVELSEVERITY_ID = value)  _
						= false) Then
				Me.OnLEVELSEVERITY_IDChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_ID = value
				Me.SendPropertyChanged("LEVELSEVERITY_ID")
				Me.OnLEVELSEVERITY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_CODE", DbType:="NVarChar(50)")>  _
	Public Property LEVELSEVERITY_CODE() As String
		Get
			Return Me._LEVELSEVERITY_CODE
		End Get
		Set
			If (String.Equals(Me._LEVELSEVERITY_CODE, value) = false) Then
				Me.OnLEVELSEVERITY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_CODE = value
				Me.SendPropertyChanged("LEVELSEVERITY_CODE")
				Me.OnLEVELSEVERITY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_SIGNIFICANCERATINGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LEVELSEVERITY_SIGNIFICANCERATINGNAME() As String
		Get
			Return Me._LEVELSEVERITY_SIGNIFICANCERATINGNAME
		End Get
		Set
			If (String.Equals(Me._LEVELSEVERITY_SIGNIFICANCERATINGNAME, value) = false) Then
				Me.OnLEVELSEVERITY_SIGNIFICANCERATINGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_SIGNIFICANCERATINGNAME = value
				Me.SendPropertyChanged("LEVELSEVERITY_SIGNIFICANCERATINGNAME")
				Me.OnLEVELSEVERITY_SIGNIFICANCERATINGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LEVELSEVERITY_ENNAME() As String
		Get
			Return Me._LEVELSEVERITY_ENNAME
		End Get
		Set
			If (String.Equals(Me._LEVELSEVERITY_ENNAME, value) = false) Then
				Me.OnLEVELSEVERITY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_ENNAME = value
				Me.SendPropertyChanged("LEVELSEVERITY_ENNAME")
				Me.OnLEVELSEVERITY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property LEVELSEVERITY_NOTE() As String
		Get
			Return Me._LEVELSEVERITY_NOTE
		End Get
		Set
			If (String.Equals(Me._LEVELSEVERITY_NOTE, value) = false) Then
				Me.OnLEVELSEVERITY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_NOTE = value
				Me.SendPropertyChanged("LEVELSEVERITY_NOTE")
				Me.OnLEVELSEVERITY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVELSEVERITY_ISDISABLED", DbType:="Int")>  _
	Public Property LEVELSEVERITY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._LEVELSEVERITY_ISDISABLED
		End Get
		Set
			If (Me._LEVELSEVERITY_ISDISABLED.Equals(value) = false) Then
				Me.OnLEVELSEVERITY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._LEVELSEVERITY_ISDISABLED = value
				Me.SendPropertyChanged("LEVELSEVERITY_ISDISABLED")
				Me.OnLEVELSEVERITY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LIGHT")>  _
Partial Public Class MAS_LIGHT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LIGHT_ID As Integer
	
	Private _LIGHT_CODE As System.Nullable(Of Integer)
	
	Private _LIGHT_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLIGHT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLIGHT_IDChanged()
    End Sub
    Partial Private Sub OnLIGHT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLIGHT_CODEChanged()
    End Sub
    Partial Private Sub OnLIGHT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnLIGHT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIGHT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LIGHT_ID() As Integer
		Get
			Return Me._LIGHT_ID
		End Get
		Set
			If ((Me._LIGHT_ID = value)  _
						= false) Then
				Me.OnLIGHT_IDChanging(value)
				Me.SendPropertyChanging
				Me._LIGHT_ID = value
				Me.SendPropertyChanged("LIGHT_ID")
				Me.OnLIGHT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIGHT_CODE", DbType:="Int")>  _
	Public Property LIGHT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._LIGHT_CODE
		End Get
		Set
			If (Me._LIGHT_CODE.Equals(value) = false) Then
				Me.OnLIGHT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LIGHT_CODE = value
				Me.SendPropertyChanged("LIGHT_CODE")
				Me.OnLIGHT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIGHT_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property LIGHT_DESCRIPTION() As String
		Get
			Return Me._LIGHT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._LIGHT_DESCRIPTION, value) = false) Then
				Me.OnLIGHT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._LIGHT_DESCRIPTION = value
				Me.SendPropertyChanged("LIGHT_DESCRIPTION")
				Me.OnLIGHT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LOCATION")>  _
Partial Public Class MAS_LOCATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LOCATION_ID As Integer
	
	Private _LOCATION_CODE As System.Nullable(Of Integer)
	
	Private _LOCATION_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLOCATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLOCATION_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_CODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LOCATION_ID() As Integer
		Get
			Return Me._LOCATION_ID
		End Get
		Set
			If ((Me._LOCATION_ID = value)  _
						= false) Then
				Me.OnLOCATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ID = value
				Me.SendPropertyChanged("LOCATION_ID")
				Me.OnLOCATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_CODE", DbType:="Int")>  _
	Public Property LOCATION_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_CODE
		End Get
		Set
			If (Me._LOCATION_CODE.Equals(value) = false) Then
				Me.OnLOCATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_CODE = value
				Me.SendPropertyChanged("LOCATION_CODE")
				Me.OnLOCATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property LOCATION_DESCRIPTION() As String
		Get
			Return Me._LOCATION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._LOCATION_DESCRIPTION, value) = false) Then
				Me.OnLOCATION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_DESCRIPTION = value
				Me.SendPropertyChanged("LOCATION_DESCRIPTION")
				Me.OnLOCATION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LOCATYPE")>  _
Partial Public Class MAS_LOCATYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LOCATYPE_ID As Integer
	
	Private _LOCATYPE_CODE As System.Nullable(Of Integer)
	
	Private _LOCATYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLOCATYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLOCATYPE_IDChanged()
    End Sub
    Partial Private Sub OnLOCATYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATYPE_CODEChanged()
    End Sub
    Partial Private Sub OnLOCATYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LOCATYPE_ID() As Integer
		Get
			Return Me._LOCATYPE_ID
		End Get
		Set
			If ((Me._LOCATYPE_ID = value)  _
						= false) Then
				Me.OnLOCATYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATYPE_ID = value
				Me.SendPropertyChanged("LOCATYPE_ID")
				Me.OnLOCATYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATYPE_CODE", DbType:="Int")>  _
	Public Property LOCATYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATYPE_CODE
		End Get
		Set
			If (Me._LOCATYPE_CODE.Equals(value) = false) Then
				Me.OnLOCATYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATYPE_CODE = value
				Me.SendPropertyChanged("LOCATYPE_CODE")
				Me.OnLOCATYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property LOCATYPE_DESCRIPTION() As String
		Get
			Return Me._LOCATYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._LOCATYPE_DESCRIPTION, value) = false) Then
				Me.OnLOCATYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATYPE_DESCRIPTION = value
				Me.SendPropertyChanged("LOCATYPE_DESCRIPTION")
				Me.OnLOCATYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Major")>  _
Partial Public Class MAS_Major
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Major As String
	
	Private _Major_ID As System.Nullable(Of Integer)
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMajorChanging(value As String)
    End Sub
    Partial Private Sub OnMajorChanged()
    End Sub
    Partial Private Sub OnMajor_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMajor_IDChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Major", DbType:="NVarChar(MAX)")>  _
	Public Property Major() As String
		Get
			Return Me._Major
		End Get
		Set
			If (String.Equals(Me._Major, value) = false) Then
				Me.OnMajorChanging(value)
				Me.SendPropertyChanging
				Me._Major = value
				Me.SendPropertyChanged("Major")
				Me.OnMajorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Major_ID", DbType:="Int")>  _
	Public Property Major_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Major_ID
		End Get
		Set
			If (Me._Major_ID.Equals(value) = false) Then
				Me.OnMajor_IDChanging(value)
				Me.SendPropertyChanging
				Me._Major_ID = value
				Me.SendPropertyChanged("Major_ID")
				Me.OnMajor_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Major_Check")>  _
Partial Public Class MAS_Major_Check
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Major As System.Nullable(Of Integer)
	
	Private _Major_Check As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_MajorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_MajorChanged()
    End Sub
    Partial Private Sub OnMajor_CheckChanging(value As String)
    End Sub
    Partial Private Sub OnMajor_CheckChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Major", DbType:="Int")>  _
	Public Property ID_Major() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Major
		End Get
		Set
			If (Me._ID_Major.Equals(value) = false) Then
				Me.OnID_MajorChanging(value)
				Me.SendPropertyChanging
				Me._ID_Major = value
				Me.SendPropertyChanged("ID_Major")
				Me.OnID_MajorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Major_Check", DbType:="NVarChar(MAX)")>  _
	Public Property Major_Check() As String
		Get
			Return Me._Major_Check
		End Get
		Set
			If (String.Equals(Me._Major_Check, value) = false) Then
				Me.OnMajor_CheckChanging(value)
				Me.SendPropertyChanging
				Me._Major_Check = value
				Me.SendPropertyChanged("Major_Check")
				Me.OnMajor_CheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MANUFACTRER_DRUG")>  _
Partial Public Class MAS_MANUFACTRER_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MANUFACTRER_DRUG_ID As Integer
	
	Private _MANUFACTRER_DRUG_MANUFACTRER As System.Nullable(Of Integer)
	
	Private _MANUFACTRER_DRUG_CODE As String
	
	Private _MANUFACTRER_DRUG_NOTE As String
	
	Private _MANUFACTRER_DRUG_DISABLED As System.Nullable(Of Integer)
	
	Private _MANUFACTRER_DRUG_DRUGSTDCODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_MANUFACTRERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_MANUFACTRERChanged()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_DISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_DISABLEDChanged()
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_DRUGSTDCODEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTRER_DRUG_DRUGSTDCODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MANUFACTRER_DRUG_ID() As Integer
		Get
			Return Me._MANUFACTRER_DRUG_ID
		End Get
		Set
			If ((Me._MANUFACTRER_DRUG_ID = value)  _
						= false) Then
				Me.OnMANUFACTRER_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_ID = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_ID")
				Me.OnMANUFACTRER_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_MANUFACTRER", DbType:="Int")>  _
	Public Property MANUFACTRER_DRUG_MANUFACTRER() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFACTRER_DRUG_MANUFACTRER
		End Get
		Set
			If (Me._MANUFACTRER_DRUG_MANUFACTRER.Equals(value) = false) Then
				Me.OnMANUFACTRER_DRUG_MANUFACTRERChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_MANUFACTRER = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_MANUFACTRER")
				Me.OnMANUFACTRER_DRUG_MANUFACTRERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property MANUFACTRER_DRUG_CODE() As String
		Get
			Return Me._MANUFACTRER_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._MANUFACTRER_DRUG_CODE, value) = false) Then
				Me.OnMANUFACTRER_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_CODE = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_CODE")
				Me.OnMANUFACTRER_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTRER_DRUG_NOTE() As String
		Get
			Return Me._MANUFACTRER_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._MANUFACTRER_DRUG_NOTE, value) = false) Then
				Me.OnMANUFACTRER_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_NOTE = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_NOTE")
				Me.OnMANUFACTRER_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_DISABLED", DbType:="Int")>  _
	Public Property MANUFACTRER_DRUG_DISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFACTRER_DRUG_DISABLED
		End Get
		Set
			If (Me._MANUFACTRER_DRUG_DISABLED.Equals(value) = false) Then
				Me.OnMANUFACTRER_DRUG_DISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_DISABLED = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_DISABLED")
				Me.OnMANUFACTRER_DRUG_DISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTRER_DRUG_DRUGSTDCODE", DbType:="NVarChar(50)")>  _
	Public Property MANUFACTRER_DRUG_DRUGSTDCODE() As String
		Get
			Return Me._MANUFACTRER_DRUG_DRUGSTDCODE
		End Get
		Set
			If (String.Equals(Me._MANUFACTRER_DRUG_DRUGSTDCODE, value) = false) Then
				Me.OnMANUFACTRER_DRUG_DRUGSTDCODEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTRER_DRUG_DRUGSTDCODE = value
				Me.SendPropertyChanged("MANUFACTRER_DRUG_DRUGSTDCODE")
				Me.OnMANUFACTRER_DRUG_DRUGSTDCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MASSAGEPOSITION")>  _
Partial Public Class MAS_MASSAGEPOSITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASSAGEPOSITION_ID As Integer
	
	Private _MASSAGEPOSITION_CODE As String
	
	Private _MASSAGEPOSITION_MASSAGEPOSITIONNAME As String
	
	Private _MASSAGEPOSITION_ENNAME As String
	
	Private _MASSAGEPOSITION_NOTE As String
	
	Private _ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_CODEChanged()
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_MASSAGEPOSITIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_MASSAGEPOSITIONNAMEChanged()
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMASSAGEPOSITION_NOTEChanged()
    End Sub
    Partial Private Sub OnISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSAGEPOSITION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MASSAGEPOSITION_ID() As Integer
		Get
			Return Me._MASSAGEPOSITION_ID
		End Get
		Set
			If ((Me._MASSAGEPOSITION_ID = value)  _
						= false) Then
				Me.OnMASSAGEPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._MASSAGEPOSITION_ID = value
				Me.SendPropertyChanged("MASSAGEPOSITION_ID")
				Me.OnMASSAGEPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSAGEPOSITION_CODE", DbType:="NVarChar(50)")>  _
	Public Property MASSAGEPOSITION_CODE() As String
		Get
			Return Me._MASSAGEPOSITION_CODE
		End Get
		Set
			If (String.Equals(Me._MASSAGEPOSITION_CODE, value) = false) Then
				Me.OnMASSAGEPOSITION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MASSAGEPOSITION_CODE = value
				Me.SendPropertyChanged("MASSAGEPOSITION_CODE")
				Me.OnMASSAGEPOSITION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSAGEPOSITION_MASSAGEPOSITIONNAME", DbType:="NVarChar(200)")>  _
	Public Property MASSAGEPOSITION_MASSAGEPOSITIONNAME() As String
		Get
			Return Me._MASSAGEPOSITION_MASSAGEPOSITIONNAME
		End Get
		Set
			If (String.Equals(Me._MASSAGEPOSITION_MASSAGEPOSITIONNAME, value) = false) Then
				Me.OnMASSAGEPOSITION_MASSAGEPOSITIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MASSAGEPOSITION_MASSAGEPOSITIONNAME = value
				Me.SendPropertyChanged("MASSAGEPOSITION_MASSAGEPOSITIONNAME")
				Me.OnMASSAGEPOSITION_MASSAGEPOSITIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSAGEPOSITION_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property MASSAGEPOSITION_ENNAME() As String
		Get
			Return Me._MASSAGEPOSITION_ENNAME
		End Get
		Set
			If (String.Equals(Me._MASSAGEPOSITION_ENNAME, value) = false) Then
				Me.OnMASSAGEPOSITION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MASSAGEPOSITION_ENNAME = value
				Me.SendPropertyChanged("MASSAGEPOSITION_ENNAME")
				Me.OnMASSAGEPOSITION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSAGEPOSITION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MASSAGEPOSITION_NOTE() As String
		Get
			Return Me._MASSAGEPOSITION_NOTE
		End Get
		Set
			If (String.Equals(Me._MASSAGEPOSITION_NOTE, value) = false) Then
				Me.OnMASSAGEPOSITION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MASSAGEPOSITION_NOTE = value
				Me.SendPropertyChanged("MASSAGEPOSITION_NOTE")
				Me.OnMASSAGEPOSITION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISDISABLED", DbType:="Int")>  _
	Public Property ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ISDISABLED
		End Get
		Set
			If (Me._ISDISABLED.Equals(value) = false) Then
				Me.OnISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ISDISABLED = value
				Me.SendPropertyChanged("ISDISABLED")
				Me.OnISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MC")>  _
Partial Public Class MAS_MC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MCKey As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _AbbrName As String
	
	Private _Note As String
	
	Private _MCItemGroupKey As System.Nullable(Of Integer)
	
	Private _IsAutoAssigned As System.Nullable(Of Boolean)
	
	Private _IsForVisit As System.Nullable(Of Boolean)
	
	Private _DefMCPayerKey As System.Nullable(Of Integer)
	
	Private _IsDisabled As System.Nullable(Of Boolean)
	
	Private _MaxAmt As System.Nullable(Of Decimal)
	
	Private _PaidByHospital As System.Nullable(Of Boolean)
	
	Private _IsCgd As System.Nullable(Of Boolean)
	
	Private _IsMain As System.Nullable(Of Boolean)
	
	Private _DrgBaseRate As System.Nullable(Of Decimal)
	
	Private _F12PTTypeKey As System.Nullable(Of Integer)
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMCKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCKeyChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAbbrNameChanging(value As String)
    End Sub
    Partial Private Sub OnAbbrNameChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnMCItemGroupKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMCItemGroupKeyChanged()
    End Sub
    Partial Private Sub OnIsAutoAssignedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsAutoAssignedChanged()
    End Sub
    Partial Private Sub OnIsForVisitChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsForVisitChanged()
    End Sub
    Partial Private Sub OnDefMCPayerKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDefMCPayerKeyChanged()
    End Sub
    Partial Private Sub OnIsDisabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDisabledChanged()
    End Sub
    Partial Private Sub OnMaxAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaxAmtChanged()
    End Sub
    Partial Private Sub OnPaidByHospitalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPaidByHospitalChanged()
    End Sub
    Partial Private Sub OnIsCgdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCgdChanged()
    End Sub
    Partial Private Sub OnIsMainChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsMainChanged()
    End Sub
    Partial Private Sub OnDrgBaseRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDrgBaseRateChanged()
    End Sub
    Partial Private Sub OnF12PTTypeKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnF12PTTypeKeyChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCKey", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MCKey() As Integer
		Get
			Return Me._MCKey
		End Get
		Set
			If ((Me._MCKey = value)  _
						= false) Then
				Me.OnMCKeyChanging(value)
				Me.SendPropertyChanging
				Me._MCKey = value
				Me.SendPropertyChanged("MCKey")
				Me.OnMCKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NChar(10)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AbbrName", DbType:="NVarChar(20)")>  _
	Public Property AbbrName() As String
		Get
			Return Me._AbbrName
		End Get
		Set
			If (String.Equals(Me._AbbrName, value) = false) Then
				Me.OnAbbrNameChanging(value)
				Me.SendPropertyChanging
				Me._AbbrName = value
				Me.SendPropertyChanged("AbbrName")
				Me.OnAbbrNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="NVarChar(MAX)")>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCItemGroupKey", DbType:="Int")>  _
	Public Property MCItemGroupKey() As System.Nullable(Of Integer)
		Get
			Return Me._MCItemGroupKey
		End Get
		Set
			If (Me._MCItemGroupKey.Equals(value) = false) Then
				Me.OnMCItemGroupKeyChanging(value)
				Me.SendPropertyChanging
				Me._MCItemGroupKey = value
				Me.SendPropertyChanged("MCItemGroupKey")
				Me.OnMCItemGroupKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsAutoAssigned", DbType:="Bit")>  _
	Public Property IsAutoAssigned() As System.Nullable(Of Boolean)
		Get
			Return Me._IsAutoAssigned
		End Get
		Set
			If (Me._IsAutoAssigned.Equals(value) = false) Then
				Me.OnIsAutoAssignedChanging(value)
				Me.SendPropertyChanging
				Me._IsAutoAssigned = value
				Me.SendPropertyChanged("IsAutoAssigned")
				Me.OnIsAutoAssignedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsForVisit", DbType:="Bit")>  _
	Public Property IsForVisit() As System.Nullable(Of Boolean)
		Get
			Return Me._IsForVisit
		End Get
		Set
			If (Me._IsForVisit.Equals(value) = false) Then
				Me.OnIsForVisitChanging(value)
				Me.SendPropertyChanging
				Me._IsForVisit = value
				Me.SendPropertyChanged("IsForVisit")
				Me.OnIsForVisitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefMCPayerKey", DbType:="Int")>  _
	Public Property DefMCPayerKey() As System.Nullable(Of Integer)
		Get
			Return Me._DefMCPayerKey
		End Get
		Set
			If (Me._DefMCPayerKey.Equals(value) = false) Then
				Me.OnDefMCPayerKeyChanging(value)
				Me.SendPropertyChanging
				Me._DefMCPayerKey = value
				Me.SendPropertyChanged("DefMCPayerKey")
				Me.OnDefMCPayerKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisabled", DbType:="Bit")>  _
	Public Property IsDisabled() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDisabled
		End Get
		Set
			If (Me._IsDisabled.Equals(value) = false) Then
				Me.OnIsDisabledChanging(value)
				Me.SendPropertyChanging
				Me._IsDisabled = value
				Me.SendPropertyChanged("IsDisabled")
				Me.OnIsDisabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxAmt", DbType:="Decimal(19,2)")>  _
	Public Property MaxAmt() As System.Nullable(Of Decimal)
		Get
			Return Me._MaxAmt
		End Get
		Set
			If (Me._MaxAmt.Equals(value) = false) Then
				Me.OnMaxAmtChanging(value)
				Me.SendPropertyChanging
				Me._MaxAmt = value
				Me.SendPropertyChanged("MaxAmt")
				Me.OnMaxAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaidByHospital", DbType:="Bit")>  _
	Public Property PaidByHospital() As System.Nullable(Of Boolean)
		Get
			Return Me._PaidByHospital
		End Get
		Set
			If (Me._PaidByHospital.Equals(value) = false) Then
				Me.OnPaidByHospitalChanging(value)
				Me.SendPropertyChanging
				Me._PaidByHospital = value
				Me.SendPropertyChanged("PaidByHospital")
				Me.OnPaidByHospitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsCgd", DbType:="Bit")>  _
	Public Property IsCgd() As System.Nullable(Of Boolean)
		Get
			Return Me._IsCgd
		End Get
		Set
			If (Me._IsCgd.Equals(value) = false) Then
				Me.OnIsCgdChanging(value)
				Me.SendPropertyChanging
				Me._IsCgd = value
				Me.SendPropertyChanged("IsCgd")
				Me.OnIsCgdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsMain", DbType:="Bit")>  _
	Public Property IsMain() As System.Nullable(Of Boolean)
		Get
			Return Me._IsMain
		End Get
		Set
			If (Me._IsMain.Equals(value) = false) Then
				Me.OnIsMainChanging(value)
				Me.SendPropertyChanging
				Me._IsMain = value
				Me.SendPropertyChanged("IsMain")
				Me.OnIsMainChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrgBaseRate", DbType:="Decimal(19,2)")>  _
	Public Property DrgBaseRate() As System.Nullable(Of Decimal)
		Get
			Return Me._DrgBaseRate
		End Get
		Set
			If (Me._DrgBaseRate.Equals(value) = false) Then
				Me.OnDrgBaseRateChanging(value)
				Me.SendPropertyChanging
				Me._DrgBaseRate = value
				Me.SendPropertyChanged("DrgBaseRate")
				Me.OnDrgBaseRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F12PTTypeKey", DbType:="Int")>  _
	Public Property F12PTTypeKey() As System.Nullable(Of Integer)
		Get
			Return Me._F12PTTypeKey
		End Get
		Set
			If (Me._F12PTTypeKey.Equals(value) = false) Then
				Me.OnF12PTTypeKeyChanging(value)
				Me.SendPropertyChanging
				Me._F12PTTypeKey = value
				Me.SendPropertyChanged("F12PTTypeKey")
				Me.OnF12PTTypeKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MC_MCPAYERNAME")>  _
Partial Public Class MAS_MC_MCPAYERNAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MC_MCPAYERNAMEID As Integer
	
	Private _MD_MCMCPAYERNAME_CODE As String
	
	Private _FK_MCPAYERNAME_ID As System.Nullable(Of Integer)
	
	Private _MC_MCPAYERNAME_MCPAYERNAME As String
	
	Private _MC_MCPAYERNAME_ISDISABLED As System.Nullable(Of Integer)
	
	Private _MC_ACTIVEFLAG As Boolean
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _MCPatientGroupKey As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMC_MCPAYERNAMEIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMC_MCPAYERNAMEIDChanged()
    End Sub
    Partial Private Sub OnMD_MCMCPAYERNAME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMD_MCMCPAYERNAME_CODEChanged()
    End Sub
    Partial Private Sub OnFK_MCPAYERNAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MCPAYERNAME_IDChanged()
    End Sub
    Partial Private Sub OnMC_MCPAYERNAME_MCPAYERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_MCPAYERNAME_MCPAYERNAMEChanged()
    End Sub
    Partial Private Sub OnMC_MCPAYERNAME_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMC_MCPAYERNAME_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnMC_ACTIVEFLAGChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMC_ACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnMCPatientGroupKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCPatientGroupKeyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_MCPAYERNAMEID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MC_MCPAYERNAMEID() As Integer
		Get
			Return Me._MC_MCPAYERNAMEID
		End Get
		Set
			If ((Me._MC_MCPAYERNAMEID = value)  _
						= false) Then
				Me.OnMC_MCPAYERNAMEIDChanging(value)
				Me.SendPropertyChanging
				Me._MC_MCPAYERNAMEID = value
				Me.SendPropertyChanged("MC_MCPAYERNAMEID")
				Me.OnMC_MCPAYERNAMEIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MD_MCMCPAYERNAME_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MD_MCMCPAYERNAME_CODE() As String
		Get
			Return Me._MD_MCMCPAYERNAME_CODE
		End Get
		Set
			If (String.Equals(Me._MD_MCMCPAYERNAME_CODE, value) = false) Then
				Me.OnMD_MCMCPAYERNAME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MD_MCMCPAYERNAME_CODE = value
				Me.SendPropertyChanged("MD_MCMCPAYERNAME_CODE")
				Me.OnMD_MCMCPAYERNAME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MCPAYERNAME_ID", DbType:="Int")>  _
	Public Property FK_MCPAYERNAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MCPAYERNAME_ID
		End Get
		Set
			If (Me._FK_MCPAYERNAME_ID.Equals(value) = false) Then
				Me.OnFK_MCPAYERNAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MCPAYERNAME_ID = value
				Me.SendPropertyChanged("FK_MCPAYERNAME_ID")
				Me.OnFK_MCPAYERNAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_MCPAYERNAME_MCPAYERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MC_MCPAYERNAME_MCPAYERNAME() As String
		Get
			Return Me._MC_MCPAYERNAME_MCPAYERNAME
		End Get
		Set
			If (String.Equals(Me._MC_MCPAYERNAME_MCPAYERNAME, value) = false) Then
				Me.OnMC_MCPAYERNAME_MCPAYERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_MCPAYERNAME_MCPAYERNAME = value
				Me.SendPropertyChanged("MC_MCPAYERNAME_MCPAYERNAME")
				Me.OnMC_MCPAYERNAME_MCPAYERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_MCPAYERNAME_ISDISABLED", DbType:="Int")>  _
	Public Property MC_MCPAYERNAME_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MC_MCPAYERNAME_ISDISABLED
		End Get
		Set
			If (Me._MC_MCPAYERNAME_ISDISABLED.Equals(value) = false) Then
				Me.OnMC_MCPAYERNAME_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MC_MCPAYERNAME_ISDISABLED = value
				Me.SendPropertyChanged("MC_MCPAYERNAME_ISDISABLED")
				Me.OnMC_MCPAYERNAME_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_ACTIVEFLAG", DbType:="Bit NOT NULL")>  _
	Public Property MC_ACTIVEFLAG() As Boolean
		Get
			Return Me._MC_ACTIVEFLAG
		End Get
		Set
			If ((Me._MC_ACTIVEFLAG = value)  _
						= false) Then
				Me.OnMC_ACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._MC_ACTIVEFLAG = value
				Me.SendPropertyChanged("MC_ACTIVEFLAG")
				Me.OnMC_ACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPatientGroupKey", DbType:="Int NOT NULL")>  _
	Public Property MCPatientGroupKey() As Integer
		Get
			Return Me._MCPatientGroupKey
		End Get
		Set
			If ((Me._MCPatientGroupKey = value)  _
						= false) Then
				Me.OnMCPatientGroupKeyChanging(value)
				Me.SendPropertyChanging
				Me._MCPatientGroupKey = value
				Me.SendPropertyChanged("MCPatientGroupKey")
				Me.OnMCPatientGroupKeyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MCPatientGroup")>  _
Partial Public Class MAS_MCPatientGroup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MCPatientID As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _ENName As String
	
	Private _AbbrName As String
	
	Private _Note As String
	
	Private _IsDisabled As System.Nullable(Of Boolean)
	
	Private _FK_MCPAYER As Integer
	
	Private _MCPatientGroupKey As Integer
	
	Private _ActiveFlag As Boolean
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMCPatientIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCPatientIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnENNameChanging(value As String)
    End Sub
    Partial Private Sub OnENNameChanged()
    End Sub
    Partial Private Sub OnAbbrNameChanging(value As String)
    End Sub
    Partial Private Sub OnAbbrNameChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnIsDisabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDisabledChanged()
    End Sub
    Partial Private Sub OnFK_MCPAYERChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_MCPAYERChanged()
    End Sub
    Partial Private Sub OnMCPatientGroupKeyChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCPatientGroupKeyChanged()
    End Sub
    Partial Private Sub OnActiveFlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveFlagChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPatientID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MCPatientID() As Integer
		Get
			Return Me._MCPatientID
		End Get
		Set
			If ((Me._MCPatientID = value)  _
						= false) Then
				Me.OnMCPatientIDChanging(value)
				Me.SendPropertyChanging
				Me._MCPatientID = value
				Me.SendPropertyChanged("MCPatientID")
				Me.OnMCPatientIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(10)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENName", DbType:="NVarChar(100)")>  _
	Public Property ENName() As String
		Get
			Return Me._ENName
		End Get
		Set
			If (String.Equals(Me._ENName, value) = false) Then
				Me.OnENNameChanging(value)
				Me.SendPropertyChanging
				Me._ENName = value
				Me.SendPropertyChanged("ENName")
				Me.OnENNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AbbrName", DbType:="NVarChar(25)")>  _
	Public Property AbbrName() As String
		Get
			Return Me._AbbrName
		End Get
		Set
			If (String.Equals(Me._AbbrName, value) = false) Then
				Me.OnAbbrNameChanging(value)
				Me.SendPropertyChanging
				Me._AbbrName = value
				Me.SendPropertyChanged("AbbrName")
				Me.OnAbbrNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="NVarChar(MAX)")>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDisabled", DbType:="Bit")>  _
	Public Property IsDisabled() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDisabled
		End Get
		Set
			If (Me._IsDisabled.Equals(value) = false) Then
				Me.OnIsDisabledChanging(value)
				Me.SendPropertyChanging
				Me._IsDisabled = value
				Me.SendPropertyChanged("IsDisabled")
				Me.OnIsDisabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MCPAYER", DbType:="Int NOT NULL")>  _
	Public Property FK_MCPAYER() As Integer
		Get
			Return Me._FK_MCPAYER
		End Get
		Set
			If ((Me._FK_MCPAYER = value)  _
						= false) Then
				Me.OnFK_MCPAYERChanging(value)
				Me.SendPropertyChanging
				Me._FK_MCPAYER = value
				Me.SendPropertyChanged("FK_MCPAYER")
				Me.OnFK_MCPAYERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPatientGroupKey", DbType:="Int NOT NULL")>  _
	Public Property MCPatientGroupKey() As Integer
		Get
			Return Me._MCPatientGroupKey
		End Get
		Set
			If ((Me._MCPatientGroupKey = value)  _
						= false) Then
				Me.OnMCPatientGroupKeyChanging(value)
				Me.SendPropertyChanging
				Me._MCPatientGroupKey = value
				Me.SendPropertyChanged("MCPatientGroupKey")
				Me.OnMCPatientGroupKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActiveFlag", DbType:="Bit NOT NULL")>  _
	Public Property ActiveFlag() As Boolean
		Get
			Return Me._ActiveFlag
		End Get
		Set
			If ((Me._ActiveFlag = value)  _
						= false) Then
				Me.OnActiveFlagChanging(value)
				Me.SendPropertyChanging
				Me._ActiveFlag = value
				Me.SendPropertyChanged("ActiveFlag")
				Me.OnActiveFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MCPAYER")>  _
Partial Public Class MAS_MCPAYER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MCPAYER_ID As Integer
	
	Private _MCPAYER_CODE As String
	
	Private _MCPAYER_MCPAYERNAME As String
	
	Private _MCPAYER_ENNAME As String
	
	Private _MCPAYER_ABBRNAME As String
	
	Private _MCPAYER_LEGALENTITY As String
	
	Private _MCPAYER_NOTE As String
	
	Private _MCPAYER_ISDISABLED As System.Nullable(Of Integer)
	
	Private _MCPAYER_MCPAYERTYPEKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _MCPAYER_COMPANY As System.Nullable(Of Integer)
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMCPAYER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCPAYER_IDChanged()
    End Sub
    Partial Private Sub OnMCPAYER_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_CODEChanged()
    End Sub
    Partial Private Sub OnMCPAYER_MCPAYERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_MCPAYERNAMEChanged()
    End Sub
    Partial Private Sub OnMCPAYER_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMCPAYER_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnMCPAYER_LEGALENTITYChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_LEGALENTITYChanged()
    End Sub
    Partial Private Sub OnMCPAYER_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYER_NOTEChanged()
    End Sub
    Partial Private Sub OnMCPAYER_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMCPAYER_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnMCPAYER_MCPAYERTYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMCPAYER_MCPAYERTYPEKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnMCPAYER_COMPANYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMCPAYER_COMPANYChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MCPAYER_ID() As Integer
		Get
			Return Me._MCPAYER_ID
		End Get
		Set
			If ((Me._MCPAYER_ID = value)  _
						= false) Then
				Me.OnMCPAYER_IDChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_ID = value
				Me.SendPropertyChanged("MCPAYER_ID")
				Me.OnMCPAYER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_CODE() As String
		Get
			Return Me._MCPAYER_CODE
		End Get
		Set
			If (String.Equals(Me._MCPAYER_CODE, value) = false) Then
				Me.OnMCPAYER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_CODE = value
				Me.SendPropertyChanged("MCPAYER_CODE")
				Me.OnMCPAYER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_MCPAYERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_MCPAYERNAME() As String
		Get
			Return Me._MCPAYER_MCPAYERNAME
		End Get
		Set
			If (String.Equals(Me._MCPAYER_MCPAYERNAME, value) = false) Then
				Me.OnMCPAYER_MCPAYERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_MCPAYERNAME = value
				Me.SendPropertyChanged("MCPAYER_MCPAYERNAME")
				Me.OnMCPAYER_MCPAYERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_ENNAME() As String
		Get
			Return Me._MCPAYER_ENNAME
		End Get
		Set
			If (String.Equals(Me._MCPAYER_ENNAME, value) = false) Then
				Me.OnMCPAYER_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_ENNAME = value
				Me.SendPropertyChanged("MCPAYER_ENNAME")
				Me.OnMCPAYER_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_ABBRNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_ABBRNAME() As String
		Get
			Return Me._MCPAYER_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._MCPAYER_ABBRNAME, value) = false) Then
				Me.OnMCPAYER_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_ABBRNAME = value
				Me.SendPropertyChanged("MCPAYER_ABBRNAME")
				Me.OnMCPAYER_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_LEGALENTITY", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_LEGALENTITY() As String
		Get
			Return Me._MCPAYER_LEGALENTITY
		End Get
		Set
			If (String.Equals(Me._MCPAYER_LEGALENTITY, value) = false) Then
				Me.OnMCPAYER_LEGALENTITYChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_LEGALENTITY = value
				Me.SendPropertyChanged("MCPAYER_LEGALENTITY")
				Me.OnMCPAYER_LEGALENTITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYER_NOTE() As String
		Get
			Return Me._MCPAYER_NOTE
		End Get
		Set
			If (String.Equals(Me._MCPAYER_NOTE, value) = false) Then
				Me.OnMCPAYER_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_NOTE = value
				Me.SendPropertyChanged("MCPAYER_NOTE")
				Me.OnMCPAYER_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_ISDISABLED", DbType:="Int")>  _
	Public Property MCPAYER_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MCPAYER_ISDISABLED
		End Get
		Set
			If (Me._MCPAYER_ISDISABLED.Equals(value) = false) Then
				Me.OnMCPAYER_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_ISDISABLED = value
				Me.SendPropertyChanged("MCPAYER_ISDISABLED")
				Me.OnMCPAYER_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_MCPAYERTYPEKEY", DbType:="Int")>  _
	Public Property MCPAYER_MCPAYERTYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._MCPAYER_MCPAYERTYPEKEY
		End Get
		Set
			If (Me._MCPAYER_MCPAYERTYPEKEY.Equals(value) = false) Then
				Me.OnMCPAYER_MCPAYERTYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_MCPAYERTYPEKEY = value
				Me.SendPropertyChanged("MCPAYER_MCPAYERTYPEKEY")
				Me.OnMCPAYER_MCPAYERTYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYER_COMPANY", DbType:="Int")>  _
	Public Property MCPAYER_COMPANY() As System.Nullable(Of Integer)
		Get
			Return Me._MCPAYER_COMPANY
		End Get
		Set
			If (Me._MCPAYER_COMPANY.Equals(value) = false) Then
				Me.OnMCPAYER_COMPANYChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYER_COMPANY = value
				Me.SendPropertyChanged("MCPAYER_COMPANY")
				Me.OnMCPAYER_COMPANYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MCPAYERNAME")>  _
Partial Public Class MAS_MCPAYERNAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MCPAYERNAME_ID As Integer
	
	Private _MCPAYERNAME_CODE As String
	
	Private _MCPAYERNAME_MCPAYERNAME As String
	
	Private _MCPAYERNAME_ENNAME As String
	
	Private _MCPAYERNAME_NOTE As String
	
	Private _MCPAYERNAME_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMCPAYERNAME_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMCPAYERNAME_IDChanged()
    End Sub
    Partial Private Sub OnMCPAYERNAME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYERNAME_CODEChanged()
    End Sub
    Partial Private Sub OnMCPAYERNAME_MCPAYERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYERNAME_MCPAYERNAMEChanged()
    End Sub
    Partial Private Sub OnMCPAYERNAME_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYERNAME_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMCPAYERNAME_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMCPAYERNAME_NOTEChanged()
    End Sub
    Partial Private Sub OnMCPAYERNAME_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMCPAYERNAME_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MCPAYERNAME_ID() As Integer
		Get
			Return Me._MCPAYERNAME_ID
		End Get
		Set
			If ((Me._MCPAYERNAME_ID = value)  _
						= false) Then
				Me.OnMCPAYERNAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_ID = value
				Me.SendPropertyChanged("MCPAYERNAME_ID")
				Me.OnMCPAYERNAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYERNAME_CODE() As String
		Get
			Return Me._MCPAYERNAME_CODE
		End Get
		Set
			If (String.Equals(Me._MCPAYERNAME_CODE, value) = false) Then
				Me.OnMCPAYERNAME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_CODE = value
				Me.SendPropertyChanged("MCPAYERNAME_CODE")
				Me.OnMCPAYERNAME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_MCPAYERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYERNAME_MCPAYERNAME() As String
		Get
			Return Me._MCPAYERNAME_MCPAYERNAME
		End Get
		Set
			If (String.Equals(Me._MCPAYERNAME_MCPAYERNAME, value) = false) Then
				Me.OnMCPAYERNAME_MCPAYERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_MCPAYERNAME = value
				Me.SendPropertyChanged("MCPAYERNAME_MCPAYERNAME")
				Me.OnMCPAYERNAME_MCPAYERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYERNAME_ENNAME() As String
		Get
			Return Me._MCPAYERNAME_ENNAME
		End Get
		Set
			If (String.Equals(Me._MCPAYERNAME_ENNAME, value) = false) Then
				Me.OnMCPAYERNAME_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_ENNAME = value
				Me.SendPropertyChanged("MCPAYERNAME_ENNAME")
				Me.OnMCPAYERNAME_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MCPAYERNAME_NOTE() As String
		Get
			Return Me._MCPAYERNAME_NOTE
		End Get
		Set
			If (String.Equals(Me._MCPAYERNAME_NOTE, value) = false) Then
				Me.OnMCPAYERNAME_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_NOTE = value
				Me.SendPropertyChanged("MCPAYERNAME_NOTE")
				Me.OnMCPAYERNAME_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCPAYERNAME_ISDISABLED", DbType:="Int")>  _
	Public Property MCPAYERNAME_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MCPAYERNAME_ISDISABLED
		End Get
		Set
			If (Me._MCPAYERNAME_ISDISABLED.Equals(value) = false) Then
				Me.OnMCPAYERNAME_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MCPAYERNAME_ISDISABLED = value
				Me.SendPropertyChanged("MCPAYERNAME_ISDISABLED")
				Me.OnMCPAYERNAME_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MED_MAIN")>  _
Partial Public Class MAS_MED_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MED_MAIN_ID As Integer
	
	Private _MED_MAIN_CODE As String
	
	Private _MED_MAIN_NAME As String
	
	Private _MED_MAIN_NAME_CODE As String
	
	Private _MED_MAIN_OTHER_NAME As String
	
	Private _MED_MAIN_TYPE_GROUPITEM_MAIN_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_TYPE_GROUPITEM_MAIN_NAME As String
	
	Private _MED_MAIN_GROUP_SERVICE_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_GROUP_SERVICE_NAME As String
	
	Private _MED_MAIN_MAS_UNITDRUG_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_UNITDRUG_NAME As String
	
	Private _MED_MAIN_MAS_CHARGEITEM_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_CHARGEITEM_NAME As String
	
	Private _MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME As String
	
	Private _MED_MAIN_MAS_DRUG_USE_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_DRUG_USE_NAME As String
	
	Private _MED_MAIN_CHKUSE_PATIENT As System.Nullable(Of Integer)
	
	Private _MED_MAIN_CHKTOOL As System.Nullable(Of Integer)
	
	Private _MED_MAIN_ICD9_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_ICD9_NAME As String
	
	Private _MED_MAIN_CHKREPORT As System.Nullable(Of Integer)
	
	Private _MED_MAIN_TYPE_VACCINE_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_TYPE_VACCINE_NAME As String
	
	Private _MED_MAIN_REMARK As String
	
	Private _MED_MAIN_PRICESERVICE2548 As System.Nullable(Of Integer)
	
	Private _MED_MAIN_CGDPRICEMETHOD_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_CGDPRICEMETHOD_NAME As String
	
	Private _MED_MAIN_CHKWIDEN As System.Nullable(Of Integer)
	
	Private _MED_MAIN_CHKNOWIDEN As System.Nullable(Of Integer)
	
	Private _MED_MAIN_WIDEN As System.Nullable(Of Double)
	
	Private _MED_MAIN_NOWIDEN As System.Nullable(Of Double)
	
	Private _MED_MAIN_RES_HOSPITAL As System.Nullable(Of Integer)
	
	Private _MED_MAIN_CHKUSE As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_DISABLEREASON_ID As System.Nullable(Of Integer)
	
	Private _MED_MAIN_MAS_DISABLEREASON_NAME As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
	Private _MED_MAIN_WITHDRAW As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMED_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMED_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_NAME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_NAME_CODEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_OTHER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_OTHER_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_GROUPITEM_MAIN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_GROUPITEM_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_GROUPITEM_MAIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_GROUPITEM_MAIN_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_GROUP_SERVICE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_GROUP_SERVICE_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_GROUP_SERVICE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_GROUP_SERVICE_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_UNITDRUG_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_UNITDRUG_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_UNITDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_UNITDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHARGEITEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHARGEITEM_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHARGEITEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHARGEITEM_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DRUG_USE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DRUG_USE_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DRUG_USE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DRUG_USE_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKUSE_PATIENTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKUSE_PATIENTChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKTOOLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKTOOLChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_ICD9_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_ICD9_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_ICD9_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_ICD9_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKREPORTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKREPORTChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_VACCINE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_VACCINE_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_VACCINE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_TYPE_VACCINE_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_REMARKChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_PRICESERVICE2548Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_PRICESERVICE2548Changed()
    End Sub
    Partial Private Sub OnMED_MAIN_CGDPRICEMETHOD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CGDPRICEMETHOD_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CGDPRICEMETHOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_CGDPRICEMETHOD_NAMEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKWIDENChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKWIDENChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKNOWIDENChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKNOWIDENChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_WIDENChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMED_MAIN_WIDENChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_NOWIDENChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMED_MAIN_NOWIDENChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_RES_HOSPITALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_RES_HOSPITALChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_CHKUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_CHKUSEChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DISABLEREASON_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DISABLEREASON_IDChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DISABLEREASON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMED_MAIN_MAS_DISABLEREASON_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnMED_MAIN_WITHDRAWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_MAIN_WITHDRAWChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MED_MAIN_ID() As Integer
		Get
			Return Me._MED_MAIN_ID
		End Get
		Set
			If ((Me._MED_MAIN_ID = value)  _
						= false) Then
				Me.OnMED_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_ID = value
				Me.SendPropertyChanged("MED_MAIN_ID")
				Me.OnMED_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_CODE() As String
		Get
			Return Me._MED_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_CODE, value) = false) Then
				Me.OnMED_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CODE = value
				Me.SendPropertyChanged("MED_MAIN_CODE")
				Me.OnMED_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_NAME() As String
		Get
			Return Me._MED_MAIN_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_NAME, value) = false) Then
				Me.OnMED_MAIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_NAME = value
				Me.SendPropertyChanged("MED_MAIN_NAME")
				Me.OnMED_MAIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_NAME_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_NAME_CODE() As String
		Get
			Return Me._MED_MAIN_NAME_CODE
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_NAME_CODE, value) = false) Then
				Me.OnMED_MAIN_NAME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_NAME_CODE = value
				Me.SendPropertyChanged("MED_MAIN_NAME_CODE")
				Me.OnMED_MAIN_NAME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_OTHER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_OTHER_NAME() As String
		Get
			Return Me._MED_MAIN_OTHER_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_OTHER_NAME, value) = false) Then
				Me.OnMED_MAIN_OTHER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_OTHER_NAME = value
				Me.SendPropertyChanged("MED_MAIN_OTHER_NAME")
				Me.OnMED_MAIN_OTHER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_TYPE_GROUPITEM_MAIN_ID", DbType:="Int")>  _
	Public Property MED_MAIN_TYPE_GROUPITEM_MAIN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_TYPE_GROUPITEM_MAIN_ID
		End Get
		Set
			If (Me._MED_MAIN_TYPE_GROUPITEM_MAIN_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_TYPE_GROUPITEM_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_TYPE_GROUPITEM_MAIN_ID = value
				Me.SendPropertyChanged("MED_MAIN_TYPE_GROUPITEM_MAIN_ID")
				Me.OnMED_MAIN_TYPE_GROUPITEM_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_TYPE_GROUPITEM_MAIN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_TYPE_GROUPITEM_MAIN_NAME() As String
		Get
			Return Me._MED_MAIN_TYPE_GROUPITEM_MAIN_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_TYPE_GROUPITEM_MAIN_NAME, value) = false) Then
				Me.OnMED_MAIN_TYPE_GROUPITEM_MAIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_TYPE_GROUPITEM_MAIN_NAME = value
				Me.SendPropertyChanged("MED_MAIN_TYPE_GROUPITEM_MAIN_NAME")
				Me.OnMED_MAIN_TYPE_GROUPITEM_MAIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_GROUP_SERVICE_ID", DbType:="Int")>  _
	Public Property MED_MAIN_GROUP_SERVICE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_GROUP_SERVICE_ID
		End Get
		Set
			If (Me._MED_MAIN_GROUP_SERVICE_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_GROUP_SERVICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_GROUP_SERVICE_ID = value
				Me.SendPropertyChanged("MED_MAIN_GROUP_SERVICE_ID")
				Me.OnMED_MAIN_GROUP_SERVICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_GROUP_SERVICE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_GROUP_SERVICE_NAME() As String
		Get
			Return Me._MED_MAIN_GROUP_SERVICE_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_GROUP_SERVICE_NAME, value) = false) Then
				Me.OnMED_MAIN_GROUP_SERVICE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_GROUP_SERVICE_NAME = value
				Me.SendPropertyChanged("MED_MAIN_GROUP_SERVICE_NAME")
				Me.OnMED_MAIN_GROUP_SERVICE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_UNITDRUG_ID", DbType:="Int")>  _
	Public Property MED_MAIN_MAS_UNITDRUG_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_MAS_UNITDRUG_ID
		End Get
		Set
			If (Me._MED_MAIN_MAS_UNITDRUG_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_MAS_UNITDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_UNITDRUG_ID = value
				Me.SendPropertyChanged("MED_MAIN_MAS_UNITDRUG_ID")
				Me.OnMED_MAIN_MAS_UNITDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_UNITDRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_MAS_UNITDRUG_NAME() As String
		Get
			Return Me._MED_MAIN_MAS_UNITDRUG_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_MAS_UNITDRUG_NAME, value) = false) Then
				Me.OnMED_MAIN_MAS_UNITDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_UNITDRUG_NAME = value
				Me.SendPropertyChanged("MED_MAIN_MAS_UNITDRUG_NAME")
				Me.OnMED_MAIN_MAS_UNITDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_CHARGEITEM_ID", DbType:="Int")>  _
	Public Property MED_MAIN_MAS_CHARGEITEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_MAS_CHARGEITEM_ID
		End Get
		Set
			If (Me._MED_MAIN_MAS_CHARGEITEM_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_MAS_CHARGEITEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_CHARGEITEM_ID = value
				Me.SendPropertyChanged("MED_MAIN_MAS_CHARGEITEM_ID")
				Me.OnMED_MAIN_MAS_CHARGEITEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_CHARGEITEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_MAS_CHARGEITEM_NAME() As String
		Get
			Return Me._MED_MAIN_MAS_CHARGEITEM_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_MAS_CHARGEITEM_NAME, value) = false) Then
				Me.OnMED_MAIN_MAS_CHARGEITEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_CHARGEITEM_NAME = value
				Me.SendPropertyChanged("MED_MAIN_MAS_CHARGEITEM_NAME")
				Me.OnMED_MAIN_MAS_CHARGEITEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID", DbType:="Int")>  _
	Public Property MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID
		End Get
		Set
			If (Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID = value
				Me.SendPropertyChanged("MED_MAIN_MAS_CHAREGEITEM_SERVICE_ID")
				Me.OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME() As String
		Get
			Return Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME, value) = false) Then
				Me.OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME = value
				Me.SendPropertyChanged("MED_MAIN_MAS_CHAREGEITEM_SERVICE_NAME")
				Me.OnMED_MAIN_MAS_CHAREGEITEM_SERVICE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_DRUG_USE_ID", DbType:="Int")>  _
	Public Property MED_MAIN_MAS_DRUG_USE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_MAS_DRUG_USE_ID
		End Get
		Set
			If (Me._MED_MAIN_MAS_DRUG_USE_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_MAS_DRUG_USE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_DRUG_USE_ID = value
				Me.SendPropertyChanged("MED_MAIN_MAS_DRUG_USE_ID")
				Me.OnMED_MAIN_MAS_DRUG_USE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_DRUG_USE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_MAS_DRUG_USE_NAME() As String
		Get
			Return Me._MED_MAIN_MAS_DRUG_USE_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_MAS_DRUG_USE_NAME, value) = false) Then
				Me.OnMED_MAIN_MAS_DRUG_USE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_DRUG_USE_NAME = value
				Me.SendPropertyChanged("MED_MAIN_MAS_DRUG_USE_NAME")
				Me.OnMED_MAIN_MAS_DRUG_USE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKUSE_PATIENT", DbType:="Int")>  _
	Public Property MED_MAIN_CHKUSE_PATIENT() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKUSE_PATIENT
		End Get
		Set
			If (Me._MED_MAIN_CHKUSE_PATIENT.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKUSE_PATIENTChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKUSE_PATIENT = value
				Me.SendPropertyChanged("MED_MAIN_CHKUSE_PATIENT")
				Me.OnMED_MAIN_CHKUSE_PATIENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKTOOL", DbType:="Int")>  _
	Public Property MED_MAIN_CHKTOOL() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKTOOL
		End Get
		Set
			If (Me._MED_MAIN_CHKTOOL.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKTOOLChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKTOOL = value
				Me.SendPropertyChanged("MED_MAIN_CHKTOOL")
				Me.OnMED_MAIN_CHKTOOLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_ICD9_ID", DbType:="Int")>  _
	Public Property MED_MAIN_ICD9_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_ICD9_ID
		End Get
		Set
			If (Me._MED_MAIN_ICD9_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_ICD9_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_ICD9_ID = value
				Me.SendPropertyChanged("MED_MAIN_ICD9_ID")
				Me.OnMED_MAIN_ICD9_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_ICD9_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_ICD9_NAME() As String
		Get
			Return Me._MED_MAIN_ICD9_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_ICD9_NAME, value) = false) Then
				Me.OnMED_MAIN_ICD9_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_ICD9_NAME = value
				Me.SendPropertyChanged("MED_MAIN_ICD9_NAME")
				Me.OnMED_MAIN_ICD9_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKREPORT", DbType:="Int")>  _
	Public Property MED_MAIN_CHKREPORT() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKREPORT
		End Get
		Set
			If (Me._MED_MAIN_CHKREPORT.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKREPORTChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKREPORT = value
				Me.SendPropertyChanged("MED_MAIN_CHKREPORT")
				Me.OnMED_MAIN_CHKREPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_TYPE_VACCINE_ID", DbType:="Int")>  _
	Public Property MED_MAIN_TYPE_VACCINE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_TYPE_VACCINE_ID
		End Get
		Set
			If (Me._MED_MAIN_TYPE_VACCINE_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_TYPE_VACCINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_TYPE_VACCINE_ID = value
				Me.SendPropertyChanged("MED_MAIN_TYPE_VACCINE_ID")
				Me.OnMED_MAIN_TYPE_VACCINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_TYPE_VACCINE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_TYPE_VACCINE_NAME() As String
		Get
			Return Me._MED_MAIN_TYPE_VACCINE_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_TYPE_VACCINE_NAME, value) = false) Then
				Me.OnMED_MAIN_TYPE_VACCINE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_TYPE_VACCINE_NAME = value
				Me.SendPropertyChanged("MED_MAIN_TYPE_VACCINE_NAME")
				Me.OnMED_MAIN_TYPE_VACCINE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_REMARK() As String
		Get
			Return Me._MED_MAIN_REMARK
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_REMARK, value) = false) Then
				Me.OnMED_MAIN_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_REMARK = value
				Me.SendPropertyChanged("MED_MAIN_REMARK")
				Me.OnMED_MAIN_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_PRICESERVICE2548", DbType:="Int")>  _
	Public Property MED_MAIN_PRICESERVICE2548() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_PRICESERVICE2548
		End Get
		Set
			If (Me._MED_MAIN_PRICESERVICE2548.Equals(value) = false) Then
				Me.OnMED_MAIN_PRICESERVICE2548Changing(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_PRICESERVICE2548 = value
				Me.SendPropertyChanged("MED_MAIN_PRICESERVICE2548")
				Me.OnMED_MAIN_PRICESERVICE2548Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CGDPRICEMETHOD_ID", DbType:="Int")>  _
	Public Property MED_MAIN_CGDPRICEMETHOD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CGDPRICEMETHOD_ID
		End Get
		Set
			If (Me._MED_MAIN_CGDPRICEMETHOD_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_CGDPRICEMETHOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CGDPRICEMETHOD_ID = value
				Me.SendPropertyChanged("MED_MAIN_CGDPRICEMETHOD_ID")
				Me.OnMED_MAIN_CGDPRICEMETHOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CGDPRICEMETHOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_CGDPRICEMETHOD_NAME() As String
		Get
			Return Me._MED_MAIN_CGDPRICEMETHOD_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_CGDPRICEMETHOD_NAME, value) = false) Then
				Me.OnMED_MAIN_CGDPRICEMETHOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CGDPRICEMETHOD_NAME = value
				Me.SendPropertyChanged("MED_MAIN_CGDPRICEMETHOD_NAME")
				Me.OnMED_MAIN_CGDPRICEMETHOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKWIDEN", DbType:="Int")>  _
	Public Property MED_MAIN_CHKWIDEN() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKWIDEN
		End Get
		Set
			If (Me._MED_MAIN_CHKWIDEN.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKWIDENChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKWIDEN = value
				Me.SendPropertyChanged("MED_MAIN_CHKWIDEN")
				Me.OnMED_MAIN_CHKWIDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKNOWIDEN", DbType:="Int")>  _
	Public Property MED_MAIN_CHKNOWIDEN() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKNOWIDEN
		End Get
		Set
			If (Me._MED_MAIN_CHKNOWIDEN.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKNOWIDENChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKNOWIDEN = value
				Me.SendPropertyChanged("MED_MAIN_CHKNOWIDEN")
				Me.OnMED_MAIN_CHKNOWIDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_WIDEN", DbType:="Float")>  _
	Public Property MED_MAIN_WIDEN() As System.Nullable(Of Double)
		Get
			Return Me._MED_MAIN_WIDEN
		End Get
		Set
			If (Me._MED_MAIN_WIDEN.Equals(value) = false) Then
				Me.OnMED_MAIN_WIDENChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_WIDEN = value
				Me.SendPropertyChanged("MED_MAIN_WIDEN")
				Me.OnMED_MAIN_WIDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_NOWIDEN", DbType:="Float")>  _
	Public Property MED_MAIN_NOWIDEN() As System.Nullable(Of Double)
		Get
			Return Me._MED_MAIN_NOWIDEN
		End Get
		Set
			If (Me._MED_MAIN_NOWIDEN.Equals(value) = false) Then
				Me.OnMED_MAIN_NOWIDENChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_NOWIDEN = value
				Me.SendPropertyChanged("MED_MAIN_NOWIDEN")
				Me.OnMED_MAIN_NOWIDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_RES_HOSPITAL", DbType:="Int")>  _
	Public Property MED_MAIN_RES_HOSPITAL() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_RES_HOSPITAL
		End Get
		Set
			If (Me._MED_MAIN_RES_HOSPITAL.Equals(value) = false) Then
				Me.OnMED_MAIN_RES_HOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_RES_HOSPITAL = value
				Me.SendPropertyChanged("MED_MAIN_RES_HOSPITAL")
				Me.OnMED_MAIN_RES_HOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_CHKUSE", DbType:="Int")>  _
	Public Property MED_MAIN_CHKUSE() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_CHKUSE
		End Get
		Set
			If (Me._MED_MAIN_CHKUSE.Equals(value) = false) Then
				Me.OnMED_MAIN_CHKUSEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_CHKUSE = value
				Me.SendPropertyChanged("MED_MAIN_CHKUSE")
				Me.OnMED_MAIN_CHKUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_DISABLEREASON_ID", DbType:="Int")>  _
	Public Property MED_MAIN_MAS_DISABLEREASON_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_MAS_DISABLEREASON_ID
		End Get
		Set
			If (Me._MED_MAIN_MAS_DISABLEREASON_ID.Equals(value) = false) Then
				Me.OnMED_MAIN_MAS_DISABLEREASON_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_DISABLEREASON_ID = value
				Me.SendPropertyChanged("MED_MAIN_MAS_DISABLEREASON_ID")
				Me.OnMED_MAIN_MAS_DISABLEREASON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_MAS_DISABLEREASON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MED_MAIN_MAS_DISABLEREASON_NAME() As String
		Get
			Return Me._MED_MAIN_MAS_DISABLEREASON_NAME
		End Get
		Set
			If (String.Equals(Me._MED_MAIN_MAS_DISABLEREASON_NAME, value) = false) Then
				Me.OnMED_MAIN_MAS_DISABLEREASON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_MAS_DISABLEREASON_NAME = value
				Me.SendPropertyChanged("MED_MAIN_MAS_DISABLEREASON_NAME")
				Me.OnMED_MAIN_MAS_DISABLEREASON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_MAIN_WITHDRAW", DbType:="Int")>  _
	Public Property MED_MAIN_WITHDRAW() As System.Nullable(Of Integer)
		Get
			Return Me._MED_MAIN_WITHDRAW
		End Get
		Set
			If (Me._MED_MAIN_WITHDRAW.Equals(value) = false) Then
				Me.OnMED_MAIN_WITHDRAWChanging(value)
				Me.SendPropertyChanging
				Me._MED_MAIN_WITHDRAW = value
				Me.SendPropertyChanged("MED_MAIN_WITHDRAW")
				Me.OnMED_MAIN_WITHDRAWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MED_PRICESELL")>  _
Partial Public Class MAS_MED_PRICESELL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MED_PRICESELL_ID As Integer
	
	Private _FK_MED_MAIN_ID As System.Nullable(Of Integer)
	
	Private _MED_PRICESELL_FROMDATE As System.Nullable(Of Date)
	
	Private _MED_PRICESELL_UNTILDATE As System.Nullable(Of Date)
	
	Private _MED_PRICESELL_PRICE As System.Nullable(Of Double)
	
	Private _MED_PRICESELL_RETURNVENDER As System.Nullable(Of Double)
	
	Private _MED_PRICESELL_REFERENCE_NUMBER As String
	
	Private _MED_PRICESELL_CHKMAX As System.Nullable(Of Integer)
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMED_PRICESELL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMED_PRICESELL_IDChanged()
    End Sub
    Partial Private Sub OnFK_MED_MAIN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MED_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_FROMDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMED_PRICESELL_FROMDATEChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_UNTILDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMED_PRICESELL_UNTILDATEChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_PRICEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMED_PRICESELL_PRICEChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_RETURNVENDERChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMED_PRICESELL_RETURNVENDERChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_REFERENCE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMED_PRICESELL_REFERENCE_NUMBERChanged()
    End Sub
    Partial Private Sub OnMED_PRICESELL_CHKMAXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMED_PRICESELL_CHKMAXChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MED_PRICESELL_ID() As Integer
		Get
			Return Me._MED_PRICESELL_ID
		End Get
		Set
			If ((Me._MED_PRICESELL_ID = value)  _
						= false) Then
				Me.OnMED_PRICESELL_IDChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_ID = value
				Me.SendPropertyChanged("MED_PRICESELL_ID")
				Me.OnMED_PRICESELL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MED_MAIN_ID", DbType:="Int")>  _
	Public Property FK_MED_MAIN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MED_MAIN_ID
		End Get
		Set
			If (Me._FK_MED_MAIN_ID.Equals(value) = false) Then
				Me.OnFK_MED_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MED_MAIN_ID = value
				Me.SendPropertyChanged("FK_MED_MAIN_ID")
				Me.OnFK_MED_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_FROMDATE", DbType:="DateTime")>  _
	Public Property MED_PRICESELL_FROMDATE() As System.Nullable(Of Date)
		Get
			Return Me._MED_PRICESELL_FROMDATE
		End Get
		Set
			If (Me._MED_PRICESELL_FROMDATE.Equals(value) = false) Then
				Me.OnMED_PRICESELL_FROMDATEChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_FROMDATE = value
				Me.SendPropertyChanged("MED_PRICESELL_FROMDATE")
				Me.OnMED_PRICESELL_FROMDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_UNTILDATE", DbType:="DateTime")>  _
	Public Property MED_PRICESELL_UNTILDATE() As System.Nullable(Of Date)
		Get
			Return Me._MED_PRICESELL_UNTILDATE
		End Get
		Set
			If (Me._MED_PRICESELL_UNTILDATE.Equals(value) = false) Then
				Me.OnMED_PRICESELL_UNTILDATEChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_UNTILDATE = value
				Me.SendPropertyChanged("MED_PRICESELL_UNTILDATE")
				Me.OnMED_PRICESELL_UNTILDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_PRICE", DbType:="Float")>  _
	Public Property MED_PRICESELL_PRICE() As System.Nullable(Of Double)
		Get
			Return Me._MED_PRICESELL_PRICE
		End Get
		Set
			If (Me._MED_PRICESELL_PRICE.Equals(value) = false) Then
				Me.OnMED_PRICESELL_PRICEChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_PRICE = value
				Me.SendPropertyChanged("MED_PRICESELL_PRICE")
				Me.OnMED_PRICESELL_PRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_RETURNVENDER", DbType:="Float")>  _
	Public Property MED_PRICESELL_RETURNVENDER() As System.Nullable(Of Double)
		Get
			Return Me._MED_PRICESELL_RETURNVENDER
		End Get
		Set
			If (Me._MED_PRICESELL_RETURNVENDER.Equals(value) = false) Then
				Me.OnMED_PRICESELL_RETURNVENDERChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_RETURNVENDER = value
				Me.SendPropertyChanged("MED_PRICESELL_RETURNVENDER")
				Me.OnMED_PRICESELL_RETURNVENDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_REFERENCE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property MED_PRICESELL_REFERENCE_NUMBER() As String
		Get
			Return Me._MED_PRICESELL_REFERENCE_NUMBER
		End Get
		Set
			If (String.Equals(Me._MED_PRICESELL_REFERENCE_NUMBER, value) = false) Then
				Me.OnMED_PRICESELL_REFERENCE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_REFERENCE_NUMBER = value
				Me.SendPropertyChanged("MED_PRICESELL_REFERENCE_NUMBER")
				Me.OnMED_PRICESELL_REFERENCE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MED_PRICESELL_CHKMAX", DbType:="Int")>  _
	Public Property MED_PRICESELL_CHKMAX() As System.Nullable(Of Integer)
		Get
			Return Me._MED_PRICESELL_CHKMAX
		End Get
		Set
			If (Me._MED_PRICESELL_CHKMAX.Equals(value) = false) Then
				Me.OnMED_PRICESELL_CHKMAXChanging(value)
				Me.SendPropertyChanging
				Me._MED_PRICESELL_CHKMAX = value
				Me.SendPropertyChanged("MED_PRICESELL_CHKMAX")
				Me.OnMED_PRICESELL_CHKMAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MEDICAL_SUPPLIES")>  _
Partial Public Class MAS_MEDICAL_SUPPLy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MEDICAL_SUPPLIES_ID As Integer
	
	Private _MEDICAL_SUPPLIES_CGDITEMTOPIC As System.Nullable(Of Integer)
	
	Private _MEDICAL_SUPPLIES_CODE As System.Nullable(Of Integer)
	
	Private _MEDICAL_SUPPLIES_SEQ As String
	
	Private _MEDICAL_SUPPLIES_MEDICALNAME As String
	
	Private _MEDICAL_SUPPLIES_ENNAME As String
	
	Private _MEDICAL_SUPPLIES_UNITNAME As String
	
	Private _MEDICAL_SUPPLIES_NOTE As String
	
	Private _MEDICAL_SUPPLIES_ISDISABLED As System.Nullable(Of Integer)
	
	Private _MEDICAL_SUPPLIES_CURRENTPRICE As String
	
	Private _MEDICAL_SUPPLIES_LASTPRICE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_IDChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CGDITEMTOPICChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CGDITEMTOPICChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CODEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_SEQChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_SEQChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_MEDICALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_MEDICALNAMEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_UNITNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_UNITNAMEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_NOTEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CURRENTPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_CURRENTPRICEChanged()
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_LASTPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDICAL_SUPPLIES_LASTPRICEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MEDICAL_SUPPLIES_ID() As Integer
		Get
			Return Me._MEDICAL_SUPPLIES_ID
		End Get
		Set
			If ((Me._MEDICAL_SUPPLIES_ID = value)  _
						= false) Then
				Me.OnMEDICAL_SUPPLIES_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_ID = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_ID")
				Me.OnMEDICAL_SUPPLIES_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_CGDITEMTOPIC", DbType:="Int")>  _
	Public Property MEDICAL_SUPPLIES_CGDITEMTOPIC() As System.Nullable(Of Integer)
		Get
			Return Me._MEDICAL_SUPPLIES_CGDITEMTOPIC
		End Get
		Set
			If (Me._MEDICAL_SUPPLIES_CGDITEMTOPIC.Equals(value) = false) Then
				Me.OnMEDICAL_SUPPLIES_CGDITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_CGDITEMTOPIC = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_CGDITEMTOPIC")
				Me.OnMEDICAL_SUPPLIES_CGDITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_CODE", DbType:="Int")>  _
	Public Property MEDICAL_SUPPLIES_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._MEDICAL_SUPPLIES_CODE
		End Get
		Set
			If (Me._MEDICAL_SUPPLIES_CODE.Equals(value) = false) Then
				Me.OnMEDICAL_SUPPLIES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_CODE = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_CODE")
				Me.OnMEDICAL_SUPPLIES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_SEQ", DbType:="NVarChar(50)")>  _
	Public Property MEDICAL_SUPPLIES_SEQ() As String
		Get
			Return Me._MEDICAL_SUPPLIES_SEQ
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_SEQ, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_SEQChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_SEQ = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_SEQ")
				Me.OnMEDICAL_SUPPLIES_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_MEDICALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDICAL_SUPPLIES_MEDICALNAME() As String
		Get
			Return Me._MEDICAL_SUPPLIES_MEDICALNAME
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_MEDICALNAME, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_MEDICALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_MEDICALNAME = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_MEDICALNAME")
				Me.OnMEDICAL_SUPPLIES_MEDICALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDICAL_SUPPLIES_ENNAME() As String
		Get
			Return Me._MEDICAL_SUPPLIES_ENNAME
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_ENNAME, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_ENNAME = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_ENNAME")
				Me.OnMEDICAL_SUPPLIES_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_UNITNAME", DbType:="NVarChar(50)")>  _
	Public Property MEDICAL_SUPPLIES_UNITNAME() As String
		Get
			Return Me._MEDICAL_SUPPLIES_UNITNAME
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_UNITNAME, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_UNITNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_UNITNAME = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_UNITNAME")
				Me.OnMEDICAL_SUPPLIES_UNITNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MEDICAL_SUPPLIES_NOTE() As String
		Get
			Return Me._MEDICAL_SUPPLIES_NOTE
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_NOTE, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_NOTE = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_NOTE")
				Me.OnMEDICAL_SUPPLIES_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_ISDISABLED", DbType:="Int")>  _
	Public Property MEDICAL_SUPPLIES_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MEDICAL_SUPPLIES_ISDISABLED
		End Get
		Set
			If (Me._MEDICAL_SUPPLIES_ISDISABLED.Equals(value) = false) Then
				Me.OnMEDICAL_SUPPLIES_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_ISDISABLED = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_ISDISABLED")
				Me.OnMEDICAL_SUPPLIES_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_CURRENTPRICE", DbType:="NVarChar(50)")>  _
	Public Property MEDICAL_SUPPLIES_CURRENTPRICE() As String
		Get
			Return Me._MEDICAL_SUPPLIES_CURRENTPRICE
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_CURRENTPRICE, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_CURRENTPRICE = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_CURRENTPRICE")
				Me.OnMEDICAL_SUPPLIES_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDICAL_SUPPLIES_LASTPRICE", DbType:="NVarChar(50)")>  _
	Public Property MEDICAL_SUPPLIES_LASTPRICE() As String
		Get
			Return Me._MEDICAL_SUPPLIES_LASTPRICE
		End Get
		Set
			If (String.Equals(Me._MEDICAL_SUPPLIES_LASTPRICE, value) = false) Then
				Me.OnMEDICAL_SUPPLIES_LASTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._MEDICAL_SUPPLIES_LASTPRICE = value
				Me.SendPropertyChanged("MEDICAL_SUPPLIES_LASTPRICE")
				Me.OnMEDICAL_SUPPLIES_LASTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MEDICINE_COST")>  _
Partial Public Class MAS_MEDICINE_COST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MEDI_COST_ID As Integer
	
	Private _MEDI_COST_UNITMAIN_ID As System.Nullable(Of Integer)
	
	Private _MEDI_COST_UNITMAIN_NAME As String
	
	Private _MEDI_COST_PACK As System.Nullable(Of Integer)
	
	Private _MEDI_COST_UNIT_ID As System.Nullable(Of Integer)
	
	Private _MEDI_COST_UNIT_NAME As String
	
	Private _MEDI_COST_PERUNITMAIN As System.Nullable(Of Double)
	
	Private _MEDI_COST_PERUNIT As System.Nullable(Of Double)
	
	Private _MEDI_COST_DEALER_ID As System.Nullable(Of Integer)
	
	Private _MEDI_COST_DEALER_NAME As String
	
	Private _MEDI_COST_MANUFACTUR_ID As System.Nullable(Of Integer)
	
	Private _MEDI_COST_MANUFACTUR_NAME As String
	
	Private _MEDI_COST_CHKSTOCK As System.Nullable(Of Integer)
	
	Private _FK_MEDICINE_MAIN As System.Nullable(Of Integer)
	
	Private _FK_MEDICINE As System.Nullable(Of Integer)
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMEDI_COST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMEDI_COST_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_UNITMAIN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_UNITMAIN_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_UNITMAIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_COST_UNITMAIN_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_PACKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_PACKChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_COST_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_PERUNITMAINChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDI_COST_PERUNITMAINChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_PERUNITChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDI_COST_PERUNITChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_DEALER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_DEALER_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_DEALER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_COST_DEALER_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_MANUFACTUR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_MANUFACTUR_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_MANUFACTUR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_COST_MANUFACTUR_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_COST_CHKSTOCKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_COST_CHKSTOCKChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MEDI_COST_ID() As Integer
		Get
			Return Me._MEDI_COST_ID
		End Get
		Set
			If ((Me._MEDI_COST_ID = value)  _
						= false) Then
				Me.OnMEDI_COST_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_ID = value
				Me.SendPropertyChanged("MEDI_COST_ID")
				Me.OnMEDI_COST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_UNITMAIN_ID", DbType:="Int")>  _
	Public Property MEDI_COST_UNITMAIN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_UNITMAIN_ID
		End Get
		Set
			If (Me._MEDI_COST_UNITMAIN_ID.Equals(value) = false) Then
				Me.OnMEDI_COST_UNITMAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_UNITMAIN_ID = value
				Me.SendPropertyChanged("MEDI_COST_UNITMAIN_ID")
				Me.OnMEDI_COST_UNITMAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_UNITMAIN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_COST_UNITMAIN_NAME() As String
		Get
			Return Me._MEDI_COST_UNITMAIN_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_COST_UNITMAIN_NAME, value) = false) Then
				Me.OnMEDI_COST_UNITMAIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_UNITMAIN_NAME = value
				Me.SendPropertyChanged("MEDI_COST_UNITMAIN_NAME")
				Me.OnMEDI_COST_UNITMAIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_PACK", DbType:="Int")>  _
	Public Property MEDI_COST_PACK() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_PACK
		End Get
		Set
			If (Me._MEDI_COST_PACK.Equals(value) = false) Then
				Me.OnMEDI_COST_PACKChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_PACK = value
				Me.SendPropertyChanged("MEDI_COST_PACK")
				Me.OnMEDI_COST_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_UNIT_ID", DbType:="Int")>  _
	Public Property MEDI_COST_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_UNIT_ID
		End Get
		Set
			If (Me._MEDI_COST_UNIT_ID.Equals(value) = false) Then
				Me.OnMEDI_COST_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_UNIT_ID = value
				Me.SendPropertyChanged("MEDI_COST_UNIT_ID")
				Me.OnMEDI_COST_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_COST_UNIT_NAME() As String
		Get
			Return Me._MEDI_COST_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_COST_UNIT_NAME, value) = false) Then
				Me.OnMEDI_COST_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_UNIT_NAME = value
				Me.SendPropertyChanged("MEDI_COST_UNIT_NAME")
				Me.OnMEDI_COST_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_PERUNITMAIN", DbType:="Float")>  _
	Public Property MEDI_COST_PERUNITMAIN() As System.Nullable(Of Double)
		Get
			Return Me._MEDI_COST_PERUNITMAIN
		End Get
		Set
			If (Me._MEDI_COST_PERUNITMAIN.Equals(value) = false) Then
				Me.OnMEDI_COST_PERUNITMAINChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_PERUNITMAIN = value
				Me.SendPropertyChanged("MEDI_COST_PERUNITMAIN")
				Me.OnMEDI_COST_PERUNITMAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_PERUNIT", DbType:="Float")>  _
	Public Property MEDI_COST_PERUNIT() As System.Nullable(Of Double)
		Get
			Return Me._MEDI_COST_PERUNIT
		End Get
		Set
			If (Me._MEDI_COST_PERUNIT.Equals(value) = false) Then
				Me.OnMEDI_COST_PERUNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_PERUNIT = value
				Me.SendPropertyChanged("MEDI_COST_PERUNIT")
				Me.OnMEDI_COST_PERUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_DEALER_ID", DbType:="Int")>  _
	Public Property MEDI_COST_DEALER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_DEALER_ID
		End Get
		Set
			If (Me._MEDI_COST_DEALER_ID.Equals(value) = false) Then
				Me.OnMEDI_COST_DEALER_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_DEALER_ID = value
				Me.SendPropertyChanged("MEDI_COST_DEALER_ID")
				Me.OnMEDI_COST_DEALER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_DEALER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_COST_DEALER_NAME() As String
		Get
			Return Me._MEDI_COST_DEALER_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_COST_DEALER_NAME, value) = false) Then
				Me.OnMEDI_COST_DEALER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_DEALER_NAME = value
				Me.SendPropertyChanged("MEDI_COST_DEALER_NAME")
				Me.OnMEDI_COST_DEALER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_MANUFACTUR_ID", DbType:="Int")>  _
	Public Property MEDI_COST_MANUFACTUR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_MANUFACTUR_ID
		End Get
		Set
			If (Me._MEDI_COST_MANUFACTUR_ID.Equals(value) = false) Then
				Me.OnMEDI_COST_MANUFACTUR_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_MANUFACTUR_ID = value
				Me.SendPropertyChanged("MEDI_COST_MANUFACTUR_ID")
				Me.OnMEDI_COST_MANUFACTUR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_MANUFACTUR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_COST_MANUFACTUR_NAME() As String
		Get
			Return Me._MEDI_COST_MANUFACTUR_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_COST_MANUFACTUR_NAME, value) = false) Then
				Me.OnMEDI_COST_MANUFACTUR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_MANUFACTUR_NAME = value
				Me.SendPropertyChanged("MEDI_COST_MANUFACTUR_NAME")
				Me.OnMEDI_COST_MANUFACTUR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_COST_CHKSTOCK", DbType:="Int")>  _
	Public Property MEDI_COST_CHKSTOCK() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_COST_CHKSTOCK
		End Get
		Set
			If (Me._MEDI_COST_CHKSTOCK.Equals(value) = false) Then
				Me.OnMEDI_COST_CHKSTOCKChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_COST_CHKSTOCK = value
				Me.SendPropertyChanged("MEDI_COST_CHKSTOCK")
				Me.OnMEDI_COST_CHKSTOCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE_MAIN", DbType:="Int")>  _
	Public Property FK_MEDICINE_MAIN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE_MAIN
		End Get
		Set
			If (Me._FK_MEDICINE_MAIN.Equals(value) = false) Then
				Me.OnFK_MEDICINE_MAINChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE_MAIN = value
				Me.SendPropertyChanged("FK_MEDICINE_MAIN")
				Me.OnFK_MEDICINE_MAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE", DbType:="Int")>  _
	Public Property FK_MEDICINE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE
		End Get
		Set
			If (Me._FK_MEDICINE.Equals(value) = false) Then
				Me.OnFK_MEDICINEChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE = value
				Me.SendPropertyChanged("FK_MEDICINE")
				Me.OnFK_MEDICINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MEDICINE_DUE")>  _
Partial Public Class MAS_MEDICINE_DUE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DUE_ID As Integer
	
	Private _FK_MEDICINE_MAIN As System.Nullable(Of Integer)
	
	Private _DUE_MEDICINE_ID As System.Nullable(Of Integer)
	
	Private _DUE_MEDICINE_NAME As String
	
	Private _DUE_STATUS As System.Nullable(Of Boolean)
	
	Private _DUE_DETAIL As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDUE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDUE_IDChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanged()
    End Sub
    Partial Private Sub OnDUE_MEDICINE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDUE_MEDICINE_IDChanged()
    End Sub
    Partial Private Sub OnDUE_MEDICINE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDUE_MEDICINE_NAMEChanged()
    End Sub
    Partial Private Sub OnDUE_STATUSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDUE_STATUSChanged()
    End Sub
    Partial Private Sub OnDUE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDUE_DETAILChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DUE_ID() As Integer
		Get
			Return Me._DUE_ID
		End Get
		Set
			If ((Me._DUE_ID = value)  _
						= false) Then
				Me.OnDUE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DUE_ID = value
				Me.SendPropertyChanged("DUE_ID")
				Me.OnDUE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE_MAIN", DbType:="Int")>  _
	Public Property FK_MEDICINE_MAIN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE_MAIN
		End Get
		Set
			If (Me._FK_MEDICINE_MAIN.Equals(value) = false) Then
				Me.OnFK_MEDICINE_MAINChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE_MAIN = value
				Me.SendPropertyChanged("FK_MEDICINE_MAIN")
				Me.OnFK_MEDICINE_MAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_MEDICINE_ID", DbType:="Int")>  _
	Public Property DUE_MEDICINE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DUE_MEDICINE_ID
		End Get
		Set
			If (Me._DUE_MEDICINE_ID.Equals(value) = false) Then
				Me.OnDUE_MEDICINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DUE_MEDICINE_ID = value
				Me.SendPropertyChanged("DUE_MEDICINE_ID")
				Me.OnDUE_MEDICINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_MEDICINE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DUE_MEDICINE_NAME() As String
		Get
			Return Me._DUE_MEDICINE_NAME
		End Get
		Set
			If (String.Equals(Me._DUE_MEDICINE_NAME, value) = false) Then
				Me.OnDUE_MEDICINE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DUE_MEDICINE_NAME = value
				Me.SendPropertyChanged("DUE_MEDICINE_NAME")
				Me.OnDUE_MEDICINE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_STATUS", DbType:="Bit")>  _
	Public Property DUE_STATUS() As System.Nullable(Of Boolean)
		Get
			Return Me._DUE_STATUS
		End Get
		Set
			If (Me._DUE_STATUS.Equals(value) = false) Then
				Me.OnDUE_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._DUE_STATUS = value
				Me.SendPropertyChanged("DUE_STATUS")
				Me.OnDUE_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DUE_DETAIL() As String
		Get
			Return Me._DUE_DETAIL
		End Get
		Set
			If (String.Equals(Me._DUE_DETAIL, value) = false) Then
				Me.OnDUE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DUE_DETAIL = value
				Me.SendPropertyChanged("DUE_DETAIL")
				Me.OnDUE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MEDICINE_INGREDENT")>  _
Partial Public Class MAS_MEDICINE_INGREDENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MEDI_DETAIL_ID As Integer
	
	Private _FK_MEDICINE As System.Nullable(Of Integer)
	
	Private _FK_MEDICINE_MAIN As System.Nullable(Of Integer)
	
	Private _MEDI_DETAIL_OFFICIALNAME_ID As System.Nullable(Of Integer)
	
	Private _MEDI_DETAIL_OFFICIALNAME As String
	
	Private _MEDI_DETAIL_GROUPMEDICINE As String
	
	Private _MEDI_DETAIL_STRENGTH As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMEDI_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMEDI_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINEChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINE_MAINChanged()
    End Sub
    Partial Private Sub OnMEDI_DETAIL_OFFICIALNAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_DETAIL_OFFICIALNAME_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_DETAIL_OFFICIALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DETAIL_OFFICIALNAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_DETAIL_GROUPMEDICINEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DETAIL_GROUPMEDICINEChanged()
    End Sub
    Partial Private Sub OnMEDI_DETAIL_STRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DETAIL_STRENGTHChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MEDI_DETAIL_ID() As Integer
		Get
			Return Me._MEDI_DETAIL_ID
		End Get
		Set
			If ((Me._MEDI_DETAIL_ID = value)  _
						= false) Then
				Me.OnMEDI_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DETAIL_ID = value
				Me.SendPropertyChanged("MEDI_DETAIL_ID")
				Me.OnMEDI_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE", DbType:="Int")>  _
	Public Property FK_MEDICINE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE
		End Get
		Set
			If (Me._FK_MEDICINE.Equals(value) = false) Then
				Me.OnFK_MEDICINEChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE = value
				Me.SendPropertyChanged("FK_MEDICINE")
				Me.OnFK_MEDICINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE_MAIN", DbType:="Int")>  _
	Public Property FK_MEDICINE_MAIN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE_MAIN
		End Get
		Set
			If (Me._FK_MEDICINE_MAIN.Equals(value) = false) Then
				Me.OnFK_MEDICINE_MAINChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE_MAIN = value
				Me.SendPropertyChanged("FK_MEDICINE_MAIN")
				Me.OnFK_MEDICINE_MAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DETAIL_OFFICIALNAME_ID", DbType:="Int")>  _
	Public Property MEDI_DETAIL_OFFICIALNAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_DETAIL_OFFICIALNAME_ID
		End Get
		Set
			If (Me._MEDI_DETAIL_OFFICIALNAME_ID.Equals(value) = false) Then
				Me.OnMEDI_DETAIL_OFFICIALNAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DETAIL_OFFICIALNAME_ID = value
				Me.SendPropertyChanged("MEDI_DETAIL_OFFICIALNAME_ID")
				Me.OnMEDI_DETAIL_OFFICIALNAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DETAIL_OFFICIALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DETAIL_OFFICIALNAME() As String
		Get
			Return Me._MEDI_DETAIL_OFFICIALNAME
		End Get
		Set
			If (String.Equals(Me._MEDI_DETAIL_OFFICIALNAME, value) = false) Then
				Me.OnMEDI_DETAIL_OFFICIALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DETAIL_OFFICIALNAME = value
				Me.SendPropertyChanged("MEDI_DETAIL_OFFICIALNAME")
				Me.OnMEDI_DETAIL_OFFICIALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DETAIL_GROUPMEDICINE", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DETAIL_GROUPMEDICINE() As String
		Get
			Return Me._MEDI_DETAIL_GROUPMEDICINE
		End Get
		Set
			If (String.Equals(Me._MEDI_DETAIL_GROUPMEDICINE, value) = false) Then
				Me.OnMEDI_DETAIL_GROUPMEDICINEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DETAIL_GROUPMEDICINE = value
				Me.SendPropertyChanged("MEDI_DETAIL_GROUPMEDICINE")
				Me.OnMEDI_DETAIL_GROUPMEDICINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DETAIL_STRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DETAIL_STRENGTH() As String
		Get
			Return Me._MEDI_DETAIL_STRENGTH
		End Get
		Set
			If (String.Equals(Me._MEDI_DETAIL_STRENGTH, value) = false) Then
				Me.OnMEDI_DETAIL_STRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DETAIL_STRENGTH = value
				Me.SendPropertyChanged("MEDI_DETAIL_STRENGTH")
				Me.OnMEDI_DETAIL_STRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MEDICINE_MAIN")>  _
Partial Public Class MAS_MEDICINE_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MEDI_ID As Integer
	
	Private _FK_MEDICINE As System.Nullable(Of Integer)
	
	Private _FK_MAS_NARCOTICTYPE As System.Nullable(Of Integer)
	
	Private _MAS_NARCOTICTYPE_NAME As String
	
	Private _MEDI_CODE_MINISTRY As String
	
	Private _MEDI_CODE_STANDARD As String
	
	Private _MEDI_CODE_FDA As String
	
	Private _MEDI_CODE_PHARMACY As String
	
	Private _MEDI_OFFICIAL_NAME As String
	
	Private _MEDI_STATUS_ORIGINAL As System.Nullable(Of Boolean)
	
	Private _MEDI_MIMS_ID As System.Nullable(Of Integer)
	
	Private _MEDI_MIMS_NAME As String
	
	Private _MEDI_STATUS_MAIN As System.Nullable(Of Boolean)
	
	Private _MEDI_STATUS_MAINDETAIL As String
	
	Private _MEDI_STATUS_MAINDETAIL_ID As System.Nullable(Of Integer)
	
	Private _MEDI_TYPE_ID As System.Nullable(Of Integer)
	
	Private _MEDI_TYPE_NAME As String
	
	Private _MEDI_TYPEUSE_ID As System.Nullable(Of Integer)
	
	Private _MEDI_TYPEUSE_NAME As String
	
	Private _MEDI_TYPESTYLE_ID As System.Nullable(Of Integer)
	
	Private _MEDI_TYPESTYLE_NAME As String
	
	Private _MEDI_DOSE_MAXONORDER As String
	
	Private _MEDI_DOSE_MAXONUSE As String
	
	Private _MEDI_DOSE_MAXONDAY As String
	
	Private _MEDI_STRENGTH As String
	
	Private _MEDI_UNITSTRENGTH_ID As System.Nullable(Of Integer)
	
	Private _MEDI_UNITSTRENGTH As String
	
	Private _MEDI_TYPETHAI_ID As System.Nullable(Of Integer)
	
	Private _MEDI_TYPETHAI_NAME As String
	
	Private _MEDI_UNIT_ONORDER_ID As System.Nullable(Of Integer)
	
	Private _MEDI_UNIT_ONORDER_NAME As String
	
	Private _MEDI_UNIT_ONORUSE_ID As System.Nullable(Of Integer)
	
	Private _MEDI_UNIT_ONORUSE_NAME As String
	
	Private _MEDI_UNIT_ONDAY_ID As System.Nullable(Of Integer)
	
	Private _MEDI_UNIT_ONDAY_NAME As String
	
	Private _MEDI_DUE_STATUS As System.Nullable(Of Boolean)
	
	Private _MEDI_DUE_REMARK As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMEDI_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMEDI_IDChanged()
    End Sub
    Partial Private Sub OnFK_MEDICINEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MEDICINEChanged()
    End Sub
    Partial Private Sub OnFK_MAS_NARCOTICTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MAS_NARCOTICTYPEChanged()
    End Sub
    Partial Private Sub OnMAS_NARCOTICTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAS_NARCOTICTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_CODE_MINISTRYChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_CODE_MINISTRYChanged()
    End Sub
    Partial Private Sub OnMEDI_CODE_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_CODE_STANDARDChanged()
    End Sub
    Partial Private Sub OnMEDI_CODE_FDAChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_CODE_FDAChanged()
    End Sub
    Partial Private Sub OnMEDI_CODE_PHARMACYChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_CODE_PHARMACYChanged()
    End Sub
    Partial Private Sub OnMEDI_OFFICIAL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_OFFICIAL_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_STATUS_ORIGINALChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMEDI_STATUS_ORIGINALChanged()
    End Sub
    Partial Private Sub OnMEDI_MIMS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_MIMS_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_MIMS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_MIMS_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINChanged()
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINDETAILChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINDETAILChanged()
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINDETAIL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_STATUS_MAINDETAIL_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPEUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_TYPEUSE_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPEUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_TYPEUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPESTYLE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_TYPESTYLE_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPESTYLE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_TYPESTYLE_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONORDERChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONORDERChanged()
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONUSEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONUSEChanged()
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONDAYChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DOSE_MAXONDAYChanged()
    End Sub
    Partial Private Sub OnMEDI_STRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_STRENGTHChanged()
    End Sub
    Partial Private Sub OnMEDI_UNITSTRENGTH_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_UNITSTRENGTH_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_UNITSTRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_UNITSTRENGTHChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPETHAI_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_TYPETHAI_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_TYPETHAI_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_TYPETHAI_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORDER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORDER_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORDER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORDER_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORUSE_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONORUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONDAY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONDAY_IDChanged()
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONDAY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_UNIT_ONDAY_NAMEChanged()
    End Sub
    Partial Private Sub OnMEDI_DUE_STATUSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMEDI_DUE_STATUSChanged()
    End Sub
    Partial Private Sub OnMEDI_DUE_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnMEDI_DUE_REMARKChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MEDI_ID() As Integer
		Get
			Return Me._MEDI_ID
		End Get
		Set
			If ((Me._MEDI_ID = value)  _
						= false) Then
				Me.OnMEDI_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_ID = value
				Me.SendPropertyChanged("MEDI_ID")
				Me.OnMEDI_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MEDICINE", DbType:="Int")>  _
	Public Property FK_MEDICINE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MEDICINE
		End Get
		Set
			If (Me._FK_MEDICINE.Equals(value) = false) Then
				Me.OnFK_MEDICINEChanging(value)
				Me.SendPropertyChanging
				Me._FK_MEDICINE = value
				Me.SendPropertyChanged("FK_MEDICINE")
				Me.OnFK_MEDICINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MAS_NARCOTICTYPE", DbType:="Int")>  _
	Public Property FK_MAS_NARCOTICTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MAS_NARCOTICTYPE
		End Get
		Set
			If (Me._FK_MAS_NARCOTICTYPE.Equals(value) = false) Then
				Me.OnFK_MAS_NARCOTICTYPEChanging(value)
				Me.SendPropertyChanging
				Me._FK_MAS_NARCOTICTYPE = value
				Me.SendPropertyChanged("FK_MAS_NARCOTICTYPE")
				Me.OnFK_MAS_NARCOTICTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_NARCOTICTYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAS_NARCOTICTYPE_NAME() As String
		Get
			Return Me._MAS_NARCOTICTYPE_NAME
		End Get
		Set
			If (String.Equals(Me._MAS_NARCOTICTYPE_NAME, value) = false) Then
				Me.OnMAS_NARCOTICTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_NARCOTICTYPE_NAME = value
				Me.SendPropertyChanged("MAS_NARCOTICTYPE_NAME")
				Me.OnMAS_NARCOTICTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_CODE_MINISTRY", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_CODE_MINISTRY() As String
		Get
			Return Me._MEDI_CODE_MINISTRY
		End Get
		Set
			If (String.Equals(Me._MEDI_CODE_MINISTRY, value) = false) Then
				Me.OnMEDI_CODE_MINISTRYChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_CODE_MINISTRY = value
				Me.SendPropertyChanged("MEDI_CODE_MINISTRY")
				Me.OnMEDI_CODE_MINISTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_CODE_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_CODE_STANDARD() As String
		Get
			Return Me._MEDI_CODE_STANDARD
		End Get
		Set
			If (String.Equals(Me._MEDI_CODE_STANDARD, value) = false) Then
				Me.OnMEDI_CODE_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_CODE_STANDARD = value
				Me.SendPropertyChanged("MEDI_CODE_STANDARD")
				Me.OnMEDI_CODE_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_CODE_FDA", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_CODE_FDA() As String
		Get
			Return Me._MEDI_CODE_FDA
		End Get
		Set
			If (String.Equals(Me._MEDI_CODE_FDA, value) = false) Then
				Me.OnMEDI_CODE_FDAChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_CODE_FDA = value
				Me.SendPropertyChanged("MEDI_CODE_FDA")
				Me.OnMEDI_CODE_FDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_CODE_PHARMACY", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_CODE_PHARMACY() As String
		Get
			Return Me._MEDI_CODE_PHARMACY
		End Get
		Set
			If (String.Equals(Me._MEDI_CODE_PHARMACY, value) = false) Then
				Me.OnMEDI_CODE_PHARMACYChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_CODE_PHARMACY = value
				Me.SendPropertyChanged("MEDI_CODE_PHARMACY")
				Me.OnMEDI_CODE_PHARMACYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_OFFICIAL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_OFFICIAL_NAME() As String
		Get
			Return Me._MEDI_OFFICIAL_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_OFFICIAL_NAME, value) = false) Then
				Me.OnMEDI_OFFICIAL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_OFFICIAL_NAME = value
				Me.SendPropertyChanged("MEDI_OFFICIAL_NAME")
				Me.OnMEDI_OFFICIAL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_STATUS_ORIGINAL", DbType:="Bit")>  _
	Public Property MEDI_STATUS_ORIGINAL() As System.Nullable(Of Boolean)
		Get
			Return Me._MEDI_STATUS_ORIGINAL
		End Get
		Set
			If (Me._MEDI_STATUS_ORIGINAL.Equals(value) = false) Then
				Me.OnMEDI_STATUS_ORIGINALChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_STATUS_ORIGINAL = value
				Me.SendPropertyChanged("MEDI_STATUS_ORIGINAL")
				Me.OnMEDI_STATUS_ORIGINALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_MIMS_ID", DbType:="Int")>  _
	Public Property MEDI_MIMS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_MIMS_ID
		End Get
		Set
			If (Me._MEDI_MIMS_ID.Equals(value) = false) Then
				Me.OnMEDI_MIMS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_MIMS_ID = value
				Me.SendPropertyChanged("MEDI_MIMS_ID")
				Me.OnMEDI_MIMS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_MIMS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_MIMS_NAME() As String
		Get
			Return Me._MEDI_MIMS_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_MIMS_NAME, value) = false) Then
				Me.OnMEDI_MIMS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_MIMS_NAME = value
				Me.SendPropertyChanged("MEDI_MIMS_NAME")
				Me.OnMEDI_MIMS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_STATUS_MAIN", DbType:="Bit")>  _
	Public Property MEDI_STATUS_MAIN() As System.Nullable(Of Boolean)
		Get
			Return Me._MEDI_STATUS_MAIN
		End Get
		Set
			If (Me._MEDI_STATUS_MAIN.Equals(value) = false) Then
				Me.OnMEDI_STATUS_MAINChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_STATUS_MAIN = value
				Me.SendPropertyChanged("MEDI_STATUS_MAIN")
				Me.OnMEDI_STATUS_MAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_STATUS_MAINDETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_STATUS_MAINDETAIL() As String
		Get
			Return Me._MEDI_STATUS_MAINDETAIL
		End Get
		Set
			If (String.Equals(Me._MEDI_STATUS_MAINDETAIL, value) = false) Then
				Me.OnMEDI_STATUS_MAINDETAILChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_STATUS_MAINDETAIL = value
				Me.SendPropertyChanged("MEDI_STATUS_MAINDETAIL")
				Me.OnMEDI_STATUS_MAINDETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_STATUS_MAINDETAIL_ID", DbType:="Int")>  _
	Public Property MEDI_STATUS_MAINDETAIL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_STATUS_MAINDETAIL_ID
		End Get
		Set
			If (Me._MEDI_STATUS_MAINDETAIL_ID.Equals(value) = false) Then
				Me.OnMEDI_STATUS_MAINDETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_STATUS_MAINDETAIL_ID = value
				Me.SendPropertyChanged("MEDI_STATUS_MAINDETAIL_ID")
				Me.OnMEDI_STATUS_MAINDETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPE_ID", DbType:="Int")>  _
	Public Property MEDI_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_TYPE_ID
		End Get
		Set
			If (Me._MEDI_TYPE_ID.Equals(value) = false) Then
				Me.OnMEDI_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPE_ID = value
				Me.SendPropertyChanged("MEDI_TYPE_ID")
				Me.OnMEDI_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_TYPE_NAME() As String
		Get
			Return Me._MEDI_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_TYPE_NAME, value) = false) Then
				Me.OnMEDI_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPE_NAME = value
				Me.SendPropertyChanged("MEDI_TYPE_NAME")
				Me.OnMEDI_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPEUSE_ID", DbType:="Int")>  _
	Public Property MEDI_TYPEUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_TYPEUSE_ID
		End Get
		Set
			If (Me._MEDI_TYPEUSE_ID.Equals(value) = false) Then
				Me.OnMEDI_TYPEUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPEUSE_ID = value
				Me.SendPropertyChanged("MEDI_TYPEUSE_ID")
				Me.OnMEDI_TYPEUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPEUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_TYPEUSE_NAME() As String
		Get
			Return Me._MEDI_TYPEUSE_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_TYPEUSE_NAME, value) = false) Then
				Me.OnMEDI_TYPEUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPEUSE_NAME = value
				Me.SendPropertyChanged("MEDI_TYPEUSE_NAME")
				Me.OnMEDI_TYPEUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPESTYLE_ID", DbType:="Int")>  _
	Public Property MEDI_TYPESTYLE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_TYPESTYLE_ID
		End Get
		Set
			If (Me._MEDI_TYPESTYLE_ID.Equals(value) = false) Then
				Me.OnMEDI_TYPESTYLE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPESTYLE_ID = value
				Me.SendPropertyChanged("MEDI_TYPESTYLE_ID")
				Me.OnMEDI_TYPESTYLE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPESTYLE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_TYPESTYLE_NAME() As String
		Get
			Return Me._MEDI_TYPESTYLE_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_TYPESTYLE_NAME, value) = false) Then
				Me.OnMEDI_TYPESTYLE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPESTYLE_NAME = value
				Me.SendPropertyChanged("MEDI_TYPESTYLE_NAME")
				Me.OnMEDI_TYPESTYLE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DOSE_MAXONORDER", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DOSE_MAXONORDER() As String
		Get
			Return Me._MEDI_DOSE_MAXONORDER
		End Get
		Set
			If (String.Equals(Me._MEDI_DOSE_MAXONORDER, value) = false) Then
				Me.OnMEDI_DOSE_MAXONORDERChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DOSE_MAXONORDER = value
				Me.SendPropertyChanged("MEDI_DOSE_MAXONORDER")
				Me.OnMEDI_DOSE_MAXONORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DOSE_MAXONUSE", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DOSE_MAXONUSE() As String
		Get
			Return Me._MEDI_DOSE_MAXONUSE
		End Get
		Set
			If (String.Equals(Me._MEDI_DOSE_MAXONUSE, value) = false) Then
				Me.OnMEDI_DOSE_MAXONUSEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DOSE_MAXONUSE = value
				Me.SendPropertyChanged("MEDI_DOSE_MAXONUSE")
				Me.OnMEDI_DOSE_MAXONUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DOSE_MAXONDAY", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DOSE_MAXONDAY() As String
		Get
			Return Me._MEDI_DOSE_MAXONDAY
		End Get
		Set
			If (String.Equals(Me._MEDI_DOSE_MAXONDAY, value) = false) Then
				Me.OnMEDI_DOSE_MAXONDAYChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DOSE_MAXONDAY = value
				Me.SendPropertyChanged("MEDI_DOSE_MAXONDAY")
				Me.OnMEDI_DOSE_MAXONDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_STRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_STRENGTH() As String
		Get
			Return Me._MEDI_STRENGTH
		End Get
		Set
			If (String.Equals(Me._MEDI_STRENGTH, value) = false) Then
				Me.OnMEDI_STRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_STRENGTH = value
				Me.SendPropertyChanged("MEDI_STRENGTH")
				Me.OnMEDI_STRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNITSTRENGTH_ID", DbType:="Int")>  _
	Public Property MEDI_UNITSTRENGTH_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_UNITSTRENGTH_ID
		End Get
		Set
			If (Me._MEDI_UNITSTRENGTH_ID.Equals(value) = false) Then
				Me.OnMEDI_UNITSTRENGTH_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNITSTRENGTH_ID = value
				Me.SendPropertyChanged("MEDI_UNITSTRENGTH_ID")
				Me.OnMEDI_UNITSTRENGTH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNITSTRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_UNITSTRENGTH() As String
		Get
			Return Me._MEDI_UNITSTRENGTH
		End Get
		Set
			If (String.Equals(Me._MEDI_UNITSTRENGTH, value) = false) Then
				Me.OnMEDI_UNITSTRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNITSTRENGTH = value
				Me.SendPropertyChanged("MEDI_UNITSTRENGTH")
				Me.OnMEDI_UNITSTRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPETHAI_ID", DbType:="Int")>  _
	Public Property MEDI_TYPETHAI_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_TYPETHAI_ID
		End Get
		Set
			If (Me._MEDI_TYPETHAI_ID.Equals(value) = false) Then
				Me.OnMEDI_TYPETHAI_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPETHAI_ID = value
				Me.SendPropertyChanged("MEDI_TYPETHAI_ID")
				Me.OnMEDI_TYPETHAI_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_TYPETHAI_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_TYPETHAI_NAME() As String
		Get
			Return Me._MEDI_TYPETHAI_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_TYPETHAI_NAME, value) = false) Then
				Me.OnMEDI_TYPETHAI_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_TYPETHAI_NAME = value
				Me.SendPropertyChanged("MEDI_TYPETHAI_NAME")
				Me.OnMEDI_TYPETHAI_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONORDER_ID", DbType:="Int")>  _
	Public Property MEDI_UNIT_ONORDER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_UNIT_ONORDER_ID
		End Get
		Set
			If (Me._MEDI_UNIT_ONORDER_ID.Equals(value) = false) Then
				Me.OnMEDI_UNIT_ONORDER_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONORDER_ID = value
				Me.SendPropertyChanged("MEDI_UNIT_ONORDER_ID")
				Me.OnMEDI_UNIT_ONORDER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONORDER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_UNIT_ONORDER_NAME() As String
		Get
			Return Me._MEDI_UNIT_ONORDER_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_UNIT_ONORDER_NAME, value) = false) Then
				Me.OnMEDI_UNIT_ONORDER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONORDER_NAME = value
				Me.SendPropertyChanged("MEDI_UNIT_ONORDER_NAME")
				Me.OnMEDI_UNIT_ONORDER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONORUSE_ID", DbType:="Int")>  _
	Public Property MEDI_UNIT_ONORUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_UNIT_ONORUSE_ID
		End Get
		Set
			If (Me._MEDI_UNIT_ONORUSE_ID.Equals(value) = false) Then
				Me.OnMEDI_UNIT_ONORUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONORUSE_ID = value
				Me.SendPropertyChanged("MEDI_UNIT_ONORUSE_ID")
				Me.OnMEDI_UNIT_ONORUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONORUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_UNIT_ONORUSE_NAME() As String
		Get
			Return Me._MEDI_UNIT_ONORUSE_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_UNIT_ONORUSE_NAME, value) = false) Then
				Me.OnMEDI_UNIT_ONORUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONORUSE_NAME = value
				Me.SendPropertyChanged("MEDI_UNIT_ONORUSE_NAME")
				Me.OnMEDI_UNIT_ONORUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONDAY_ID", DbType:="Int")>  _
	Public Property MEDI_UNIT_ONDAY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MEDI_UNIT_ONDAY_ID
		End Get
		Set
			If (Me._MEDI_UNIT_ONDAY_ID.Equals(value) = false) Then
				Me.OnMEDI_UNIT_ONDAY_IDChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONDAY_ID = value
				Me.SendPropertyChanged("MEDI_UNIT_ONDAY_ID")
				Me.OnMEDI_UNIT_ONDAY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_UNIT_ONDAY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_UNIT_ONDAY_NAME() As String
		Get
			Return Me._MEDI_UNIT_ONDAY_NAME
		End Get
		Set
			If (String.Equals(Me._MEDI_UNIT_ONDAY_NAME, value) = false) Then
				Me.OnMEDI_UNIT_ONDAY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_UNIT_ONDAY_NAME = value
				Me.SendPropertyChanged("MEDI_UNIT_ONDAY_NAME")
				Me.OnMEDI_UNIT_ONDAY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DUE_STATUS", DbType:="Bit")>  _
	Public Property MEDI_DUE_STATUS() As System.Nullable(Of Boolean)
		Get
			Return Me._MEDI_DUE_STATUS
		End Get
		Set
			If (Me._MEDI_DUE_STATUS.Equals(value) = false) Then
				Me.OnMEDI_DUE_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DUE_STATUS = value
				Me.SendPropertyChanged("MEDI_DUE_STATUS")
				Me.OnMEDI_DUE_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDI_DUE_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property MEDI_DUE_REMARK() As String
		Get
			Return Me._MEDI_DUE_REMARK
		End Get
		Set
			If (String.Equals(Me._MEDI_DUE_REMARK, value) = false) Then
				Me.OnMEDI_DUE_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._MEDI_DUE_REMARK = value
				Me.SendPropertyChanged("MEDI_DUE_REMARK")
				Me.OnMEDI_DUE_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENUSYS")>  _
Partial Public Class MAS_MENUSY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MENUSYS_ID As Integer
	
	Private _MENUSYS_CODE As String
	
	Private _MENUSYS_NAME As String
	
	Private _MENUSYS_ENNAME As String
	
	Private _MENUSYS_NOTE As String
	
	Private _MENUSYS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMENUSYS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMENUSYS_IDChanged()
    End Sub
    Partial Private Sub OnMENUSYS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMENUSYS_CODEChanged()
    End Sub
    Partial Private Sub OnMENUSYS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENUSYS_NAMEChanged()
    End Sub
    Partial Private Sub OnMENUSYS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENUSYS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMENUSYS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMENUSYS_NOTEChanged()
    End Sub
    Partial Private Sub OnMENUSYS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENUSYS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MENUSYS_ID() As Integer
		Get
			Return Me._MENUSYS_ID
		End Get
		Set
			If ((Me._MENUSYS_ID = value)  _
						= false) Then
				Me.OnMENUSYS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_ID = value
				Me.SendPropertyChanged("MENUSYS_ID")
				Me.OnMENUSYS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_CODE", DbType:="NVarChar(50)")>  _
	Public Property MENUSYS_CODE() As String
		Get
			Return Me._MENUSYS_CODE
		End Get
		Set
			If (String.Equals(Me._MENUSYS_CODE, value) = false) Then
				Me.OnMENUSYS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_CODE = value
				Me.SendPropertyChanged("MENUSYS_CODE")
				Me.OnMENUSYS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_NAME", DbType:="NVarChar(256)")>  _
	Public Property MENUSYS_NAME() As String
		Get
			Return Me._MENUSYS_NAME
		End Get
		Set
			If (String.Equals(Me._MENUSYS_NAME, value) = false) Then
				Me.OnMENUSYS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_NAME = value
				Me.SendPropertyChanged("MENUSYS_NAME")
				Me.OnMENUSYS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_ENNAME", DbType:="NVarChar(256)")>  _
	Public Property MENUSYS_ENNAME() As String
		Get
			Return Me._MENUSYS_ENNAME
		End Get
		Set
			If (String.Equals(Me._MENUSYS_ENNAME, value) = false) Then
				Me.OnMENUSYS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_ENNAME = value
				Me.SendPropertyChanged("MENUSYS_ENNAME")
				Me.OnMENUSYS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MENUSYS_NOTE() As String
		Get
			Return Me._MENUSYS_NOTE
		End Get
		Set
			If (String.Equals(Me._MENUSYS_NOTE, value) = false) Then
				Me.OnMENUSYS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_NOTE = value
				Me.SendPropertyChanged("MENUSYS_NOTE")
				Me.OnMENUSYS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUSYS_ISDISABLED", DbType:="Int")>  _
	Public Property MENUSYS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MENUSYS_ISDISABLED
		End Get
		Set
			If (Me._MENUSYS_ISDISABLED.Equals(value) = false) Then
				Me.OnMENUSYS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MENUSYS_ISDISABLED = value
				Me.SendPropertyChanged("MENUSYS_ISDISABLED")
				Me.OnMENUSYS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_METHOD_CLAIM")>  _
Partial Public Class MAS_METHOD_CLAIM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MFOOD")>  _
Partial Public Class MAS_MFOOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MFOOD_ID As Integer
	
	Private _MFOOD_CODE As System.Nullable(Of Integer)
	
	Private _MFOOD_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMFOOD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMFOOD_IDChanged()
    End Sub
    Partial Private Sub OnMFOOD_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMFOOD_CODEChanged()
    End Sub
    Partial Private Sub OnMFOOD_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnMFOOD_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MFOOD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MFOOD_ID() As Integer
		Get
			Return Me._MFOOD_ID
		End Get
		Set
			If ((Me._MFOOD_ID = value)  _
						= false) Then
				Me.OnMFOOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._MFOOD_ID = value
				Me.SendPropertyChanged("MFOOD_ID")
				Me.OnMFOOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MFOOD_CODE", DbType:="Int")>  _
	Public Property MFOOD_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._MFOOD_CODE
		End Get
		Set
			If (Me._MFOOD_CODE.Equals(value) = false) Then
				Me.OnMFOOD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MFOOD_CODE = value
				Me.SendPropertyChanged("MFOOD_CODE")
				Me.OnMFOOD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MFOOD_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property MFOOD_DESCRIPTION() As String
		Get
			Return Me._MFOOD_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._MFOOD_DESCRIPTION, value) = false) Then
				Me.OnMFOOD_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._MFOOD_DESCRIPTION = value
				Me.SendPropertyChanged("MFOOD_DESCRIPTION")
				Me.OnMFOOD_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MILITARY")>  _
Partial Public Class MAS_MILITARY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MILITARY_ID As Integer
	
	Private _MILITARY_CODE As String
	
	Private _MILITARY_NAME As String
	
	Private _MILITARY_ENNAME As String
	
	Private _MILITARY_NOTE As String
	
	Private _MILITARY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMILITARY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMILITARY_IDChanged()
    End Sub
    Partial Private Sub OnMILITARY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMILITARY_CODEChanged()
    End Sub
    Partial Private Sub OnMILITARY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMILITARY_NAMEChanged()
    End Sub
    Partial Private Sub OnMILITARY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMILITARY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMILITARY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMILITARY_NOTEChanged()
    End Sub
    Partial Private Sub OnMILITARY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMILITARY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MILITARY_ID() As Integer
		Get
			Return Me._MILITARY_ID
		End Get
		Set
			If ((Me._MILITARY_ID = value)  _
						= false) Then
				Me.OnMILITARY_IDChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_ID = value
				Me.SendPropertyChanged("MILITARY_ID")
				Me.OnMILITARY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_CODE", DbType:="NVarChar(50)")>  _
	Public Property MILITARY_CODE() As String
		Get
			Return Me._MILITARY_CODE
		End Get
		Set
			If (String.Equals(Me._MILITARY_CODE, value) = false) Then
				Me.OnMILITARY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_CODE = value
				Me.SendPropertyChanged("MILITARY_CODE")
				Me.OnMILITARY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MILITARY_NAME() As String
		Get
			Return Me._MILITARY_NAME
		End Get
		Set
			If (String.Equals(Me._MILITARY_NAME, value) = false) Then
				Me.OnMILITARY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_NAME = value
				Me.SendPropertyChanged("MILITARY_NAME")
				Me.OnMILITARY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MILITARY_ENNAME() As String
		Get
			Return Me._MILITARY_ENNAME
		End Get
		Set
			If (String.Equals(Me._MILITARY_ENNAME, value) = false) Then
				Me.OnMILITARY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_ENNAME = value
				Me.SendPropertyChanged("MILITARY_ENNAME")
				Me.OnMILITARY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MILITARY_NOTE() As String
		Get
			Return Me._MILITARY_NOTE
		End Get
		Set
			If (String.Equals(Me._MILITARY_NOTE, value) = false) Then
				Me.OnMILITARY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_NOTE = value
				Me.SendPropertyChanged("MILITARY_NOTE")
				Me.OnMILITARY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILITARY_ISDISABLED", DbType:="Int")>  _
	Public Property MILITARY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MILITARY_ISDISABLED
		End Get
		Set
			If (Me._MILITARY_ISDISABLED.Equals(value) = false) Then
				Me.OnMILITARY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MILITARY_ISDISABLED = value
				Me.SendPropertyChanged("MILITARY_ISDISABLED")
				Me.OnMILITARY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MINUTE")>  _
Partial Public Class MAS_MINUTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MINUTE_ID As Integer
	
	Private _MINUTE_CODE As String
	
	Private _MINUTE_NAME As String
	
	Private _MINUTE_ENNAME As String
	
	Private _MINUTE_NOTE As String
	
	Private _MINUTE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMINUTE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMINUTE_IDChanged()
    End Sub
    Partial Private Sub OnMINUTE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMINUTE_CODEChanged()
    End Sub
    Partial Private Sub OnMINUTE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMINUTE_NAMEChanged()
    End Sub
    Partial Private Sub OnMINUTE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMINUTE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMINUTE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMINUTE_NOTEChanged()
    End Sub
    Partial Private Sub OnMINUTE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMINUTE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MINUTE_ID() As Integer
		Get
			Return Me._MINUTE_ID
		End Get
		Set
			If ((Me._MINUTE_ID = value)  _
						= false) Then
				Me.OnMINUTE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_ID = value
				Me.SendPropertyChanged("MINUTE_ID")
				Me.OnMINUTE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property MINUTE_CODE() As String
		Get
			Return Me._MINUTE_CODE
		End Get
		Set
			If (String.Equals(Me._MINUTE_CODE, value) = false) Then
				Me.OnMINUTE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_CODE = value
				Me.SendPropertyChanged("MINUTE_CODE")
				Me.OnMINUTE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MINUTE_NAME() As String
		Get
			Return Me._MINUTE_NAME
		End Get
		Set
			If (String.Equals(Me._MINUTE_NAME, value) = false) Then
				Me.OnMINUTE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_NAME = value
				Me.SendPropertyChanged("MINUTE_NAME")
				Me.OnMINUTE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MINUTE_ENNAME() As String
		Get
			Return Me._MINUTE_ENNAME
		End Get
		Set
			If (String.Equals(Me._MINUTE_ENNAME, value) = false) Then
				Me.OnMINUTE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_ENNAME = value
				Me.SendPropertyChanged("MINUTE_ENNAME")
				Me.OnMINUTE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MINUTE_NOTE() As String
		Get
			Return Me._MINUTE_NOTE
		End Get
		Set
			If (String.Equals(Me._MINUTE_NOTE, value) = false) Then
				Me.OnMINUTE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_NOTE = value
				Me.SendPropertyChanged("MINUTE_NOTE")
				Me.OnMINUTE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINUTE_ISDISABLED", DbType:="Int")>  _
	Public Property MINUTE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MINUTE_ISDISABLED
		End Get
		Set
			If (Me._MINUTE_ISDISABLED.Equals(value) = false) Then
				Me.OnMINUTE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MINUTE_ISDISABLED = value
				Me.SendPropertyChanged("MINUTE_ISDISABLED")
				Me.OnMINUTE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MRLIFETOMEGROUP")>  _
Partial Public Class MAS_MRLIFETOMEGROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MRLIFETOMEGROUP_ID As Integer
	
	Private _MRLIFETOMEGROUP_CODE As String
	
	Private _MRLIFETOMEGROUP_NAME As String
	
	Private _MRLIFETOMEGROUP_ENNAME As String
	
	Private _MRLIFETOMEGROUP_YEARLIFETIME As String
	
	Private _MRLIFETOMEGROUP_NOTE As String
	
	Private _MRLIFETOMEGROUP_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_IDChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_CODEChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_ENNAMEChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_YEARLIFETIMEChanging(value As String)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_YEARLIFETIMEChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_NOTEChanged()
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMRLIFETOMEGROUP_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MRLIFETOMEGROUP_ID() As Integer
		Get
			Return Me._MRLIFETOMEGROUP_ID
		End Get
		Set
			If ((Me._MRLIFETOMEGROUP_ID = value)  _
						= false) Then
				Me.OnMRLIFETOMEGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_ID = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_ID")
				Me.OnMRLIFETOMEGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_CODE", DbType:="NVarChar(50)")>  _
	Public Property MRLIFETOMEGROUP_CODE() As String
		Get
			Return Me._MRLIFETOMEGROUP_CODE
		End Get
		Set
			If (String.Equals(Me._MRLIFETOMEGROUP_CODE, value) = false) Then
				Me.OnMRLIFETOMEGROUP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_CODE = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_CODE")
				Me.OnMRLIFETOMEGROUP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MRLIFETOMEGROUP_NAME() As String
		Get
			Return Me._MRLIFETOMEGROUP_NAME
		End Get
		Set
			If (String.Equals(Me._MRLIFETOMEGROUP_NAME, value) = false) Then
				Me.OnMRLIFETOMEGROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_NAME = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_NAME")
				Me.OnMRLIFETOMEGROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property MRLIFETOMEGROUP_ENNAME() As String
		Get
			Return Me._MRLIFETOMEGROUP_ENNAME
		End Get
		Set
			If (String.Equals(Me._MRLIFETOMEGROUP_ENNAME, value) = false) Then
				Me.OnMRLIFETOMEGROUP_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_ENNAME = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_ENNAME")
				Me.OnMRLIFETOMEGROUP_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_YEARLIFETIME", DbType:="NVarChar(50)")>  _
	Public Property MRLIFETOMEGROUP_YEARLIFETIME() As String
		Get
			Return Me._MRLIFETOMEGROUP_YEARLIFETIME
		End Get
		Set
			If (String.Equals(Me._MRLIFETOMEGROUP_YEARLIFETIME, value) = false) Then
				Me.OnMRLIFETOMEGROUP_YEARLIFETIMEChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_YEARLIFETIME = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_YEARLIFETIME")
				Me.OnMRLIFETOMEGROUP_YEARLIFETIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property MRLIFETOMEGROUP_NOTE() As String
		Get
			Return Me._MRLIFETOMEGROUP_NOTE
		End Get
		Set
			If (String.Equals(Me._MRLIFETOMEGROUP_NOTE, value) = false) Then
				Me.OnMRLIFETOMEGROUP_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_NOTE = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_NOTE")
				Me.OnMRLIFETOMEGROUP_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRLIFETOMEGROUP_ISDISABLED", DbType:="Int")>  _
	Public Property MRLIFETOMEGROUP_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._MRLIFETOMEGROUP_ISDISABLED
		End Get
		Set
			If (Me._MRLIFETOMEGROUP_ISDISABLED.Equals(value) = false) Then
				Me.OnMRLIFETOMEGROUP_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._MRLIFETOMEGROUP_ISDISABLED = value
				Me.SendPropertyChanged("MRLIFETOMEGROUP_ISDISABLED")
				Me.OnMRLIFETOMEGROUP_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MSTATUS")>  _
Partial Public Class MAS_MSTATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MSTATUS_ID As Integer
	
	Private _MSTATUS_CODE As System.Nullable(Of Integer)
	
	Private _MSTATUS_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMSTATUS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnMSTATUS_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMSTATUS_CODEChanged()
    End Sub
    Partial Private Sub OnMSTATUS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnMSTATUS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSTATUS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MSTATUS_ID() As Integer
		Get
			Return Me._MSTATUS_ID
		End Get
		Set
			If ((Me._MSTATUS_ID = value)  _
						= false) Then
				Me.OnMSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MSTATUS_ID = value
				Me.SendPropertyChanged("MSTATUS_ID")
				Me.OnMSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSTATUS_CODE", DbType:="Int")>  _
	Public Property MSTATUS_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._MSTATUS_CODE
		End Get
		Set
			If (Me._MSTATUS_CODE.Equals(value) = false) Then
				Me.OnMSTATUS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MSTATUS_CODE = value
				Me.SendPropertyChanged("MSTATUS_CODE")
				Me.OnMSTATUS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSTATUS_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property MSTATUS_DESCRIPTION() As String
		Get
			Return Me._MSTATUS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._MSTATUS_DESCRIPTION, value) = false) Then
				Me.OnMSTATUS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._MSTATUS_DESCRIPTION = value
				Me.SendPropertyChanged("MSTATUS_DESCRIPTION")
				Me.OnMSTATUS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NAMECHANGE")>  _
Partial Public Class MAS_NAMECHANGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NAMECHANGE_ID As Integer
	
	Private _NAMECHANGE_CODE As System.Nullable(Of Integer)
	
	Private _NAMECHANGE_NAME As String
	
	Private _NAMECHANGE_ENNAME As String
	
	Private _NAMECHANGE_NOTE As String
	
	Private _NAMECHANGE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNAMECHANGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNAMECHANGE_IDChanged()
    End Sub
    Partial Private Sub OnNAMECHANGE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNAMECHANGE_CODEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGE_NAMEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGE_NOTEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNAMECHANGE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NAMECHANGE_ID() As Integer
		Get
			Return Me._NAMECHANGE_ID
		End Get
		Set
			If ((Me._NAMECHANGE_ID = value)  _
						= false) Then
				Me.OnNAMECHANGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_ID = value
				Me.SendPropertyChanged("NAMECHANGE_ID")
				Me.OnNAMECHANGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_CODE", DbType:="Int")>  _
	Public Property NAMECHANGE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._NAMECHANGE_CODE
		End Get
		Set
			If (Me._NAMECHANGE_CODE.Equals(value) = false) Then
				Me.OnNAMECHANGE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_CODE = value
				Me.SendPropertyChanged("NAMECHANGE_CODE")
				Me.OnNAMECHANGE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGE_NAME() As String
		Get
			Return Me._NAMECHANGE_NAME
		End Get
		Set
			If (String.Equals(Me._NAMECHANGE_NAME, value) = false) Then
				Me.OnNAMECHANGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_NAME = value
				Me.SendPropertyChanged("NAMECHANGE_NAME")
				Me.OnNAMECHANGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGE_ENNAME() As String
		Get
			Return Me._NAMECHANGE_ENNAME
		End Get
		Set
			If (String.Equals(Me._NAMECHANGE_ENNAME, value) = false) Then
				Me.OnNAMECHANGE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_ENNAME = value
				Me.SendPropertyChanged("NAMECHANGE_ENNAME")
				Me.OnNAMECHANGE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGE_NOTE() As String
		Get
			Return Me._NAMECHANGE_NOTE
		End Get
		Set
			If (String.Equals(Me._NAMECHANGE_NOTE, value) = false) Then
				Me.OnNAMECHANGE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_NOTE = value
				Me.SendPropertyChanged("NAMECHANGE_NOTE")
				Me.OnNAMECHANGE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGE_ISDISABLED", DbType:="Int")>  _
	Public Property NAMECHANGE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._NAMECHANGE_ISDISABLED
		End Get
		Set
			If (Me._NAMECHANGE_ISDISABLED.Equals(value) = false) Then
				Me.OnNAMECHANGE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGE_ISDISABLED = value
				Me.SendPropertyChanged("NAMECHANGE_ISDISABLED")
				Me.OnNAMECHANGE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NAMECHANGEDOC")>  _
Partial Public Class MAS_NAMECHANGEDOC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NAMECHANGEDOC_ID As Integer
	
	Private _NAMECHANGEDOC_CODE As String
	
	Private _NAMECHANGEDOC_NAME As String
	
	Private _NAMECHANGEDOC_ENNAME As String
	
	Private _NAMECHANGEDOC_NOTE As String
	
	Private _NAMECHANGEDOC_ISDISABLED As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_IDChanged()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_CODEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_NAMEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_NOTEChanged()
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_ISDISABLEDChanging(value As String)
    End Sub
    Partial Private Sub OnNAMECHANGEDOC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NAMECHANGEDOC_ID() As Integer
		Get
			Return Me._NAMECHANGEDOC_ID
		End Get
		Set
			If ((Me._NAMECHANGEDOC_ID = value)  _
						= false) Then
				Me.OnNAMECHANGEDOC_IDChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_ID = value
				Me.SendPropertyChanged("NAMECHANGEDOC_ID")
				Me.OnNAMECHANGEDOC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_CODE", DbType:="NVarChar(50)")>  _
	Public Property NAMECHANGEDOC_CODE() As String
		Get
			Return Me._NAMECHANGEDOC_CODE
		End Get
		Set
			If (String.Equals(Me._NAMECHANGEDOC_CODE, value) = false) Then
				Me.OnNAMECHANGEDOC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_CODE = value
				Me.SendPropertyChanged("NAMECHANGEDOC_CODE")
				Me.OnNAMECHANGEDOC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGEDOC_NAME() As String
		Get
			Return Me._NAMECHANGEDOC_NAME
		End Get
		Set
			If (String.Equals(Me._NAMECHANGEDOC_NAME, value) = false) Then
				Me.OnNAMECHANGEDOC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_NAME = value
				Me.SendPropertyChanged("NAMECHANGEDOC_NAME")
				Me.OnNAMECHANGEDOC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGEDOC_ENNAME() As String
		Get
			Return Me._NAMECHANGEDOC_ENNAME
		End Get
		Set
			If (String.Equals(Me._NAMECHANGEDOC_ENNAME, value) = false) Then
				Me.OnNAMECHANGEDOC_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_ENNAME = value
				Me.SendPropertyChanged("NAMECHANGEDOC_ENNAME")
				Me.OnNAMECHANGEDOC_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGEDOC_NOTE() As String
		Get
			Return Me._NAMECHANGEDOC_NOTE
		End Get
		Set
			If (String.Equals(Me._NAMECHANGEDOC_NOTE, value) = false) Then
				Me.OnNAMECHANGEDOC_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_NOTE = value
				Me.SendPropertyChanged("NAMECHANGEDOC_NOTE")
				Me.OnNAMECHANGEDOC_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMECHANGEDOC_ISDISABLED", DbType:="NVarChar(MAX)")>  _
	Public Property NAMECHANGEDOC_ISDISABLED() As String
		Get
			Return Me._NAMECHANGEDOC_ISDISABLED
		End Get
		Set
			If (String.Equals(Me._NAMECHANGEDOC_ISDISABLED, value) = false) Then
				Me.OnNAMECHANGEDOC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NAMECHANGEDOC_ISDISABLED = value
				Me.SendPropertyChanged("NAMECHANGEDOC_ISDISABLED")
				Me.OnNAMECHANGEDOC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NARCOTICTYPE")>  _
Partial Public Class MAS_NARCOTICTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NARCOTICTYPE_ID As Integer
	
	Private _NARCOTICTYPE_CODE As String
	
	Private _NARCOTICTYPE_NAME As String
	
	Private _NARCOTICTYPE_ENNAME As String
	
	Private _NARCOTICTYPE_NOTE As String
	
	Private _NARCOTICTYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNARCOTICTYPE_IDChanged()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNARCOTICTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNARCOTICTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNARCOTICTYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNARCOTICTYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnNARCOTICTYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNARCOTICTYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NARCOTICTYPE_ID() As Integer
		Get
			Return Me._NARCOTICTYPE_ID
		End Get
		Set
			If ((Me._NARCOTICTYPE_ID = value)  _
						= false) Then
				Me.OnNARCOTICTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_ID = value
				Me.SendPropertyChanged("NARCOTICTYPE_ID")
				Me.OnNARCOTICTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_CODE", DbType:="NVarChar(50)")>  _
	Public Property NARCOTICTYPE_CODE() As String
		Get
			Return Me._NARCOTICTYPE_CODE
		End Get
		Set
			If (String.Equals(Me._NARCOTICTYPE_CODE, value) = false) Then
				Me.OnNARCOTICTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_CODE = value
				Me.SendPropertyChanged("NARCOTICTYPE_CODE")
				Me.OnNARCOTICTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NARCOTICTYPE_NAME() As String
		Get
			Return Me._NARCOTICTYPE_NAME
		End Get
		Set
			If (String.Equals(Me._NARCOTICTYPE_NAME, value) = false) Then
				Me.OnNARCOTICTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_NAME = value
				Me.SendPropertyChanged("NARCOTICTYPE_NAME")
				Me.OnNARCOTICTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NARCOTICTYPE_ENNAME() As String
		Get
			Return Me._NARCOTICTYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._NARCOTICTYPE_ENNAME, value) = false) Then
				Me.OnNARCOTICTYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_ENNAME = value
				Me.SendPropertyChanged("NARCOTICTYPE_ENNAME")
				Me.OnNARCOTICTYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NARCOTICTYPE_NOTE() As String
		Get
			Return Me._NARCOTICTYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._NARCOTICTYPE_NOTE, value) = false) Then
				Me.OnNARCOTICTYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_NOTE = value
				Me.SendPropertyChanged("NARCOTICTYPE_NOTE")
				Me.OnNARCOTICTYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NARCOTICTYPE_ISDISABLED", DbType:="Int")>  _
	Public Property NARCOTICTYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._NARCOTICTYPE_ISDISABLED
		End Get
		Set
			If (Me._NARCOTICTYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnNARCOTICTYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NARCOTICTYPE_ISDISABLED = value
				Me.SendPropertyChanged("NARCOTICTYPE_ISDISABLED")
				Me.OnNARCOTICTYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NATION")>  _
Partial Public Class MAS_NATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NATION_ID As Integer
	
	Private _NATION_CODE As System.Nullable(Of Integer)
	
	Private _NATION_NAME As String
	
	Private _NATION_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNATION_IDChanged()
    End Sub
    Partial Private Sub OnNATION_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATION_CODEChanged()
    End Sub
    Partial Private Sub OnNATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNATION_NAMEChanged()
    End Sub
    Partial Private Sub OnNATION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNATION_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NATION_ID() As Integer
		Get
			Return Me._NATION_ID
		End Get
		Set
			If ((Me._NATION_ID = value)  _
						= false) Then
				Me.OnNATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._NATION_ID = value
				Me.SendPropertyChanged("NATION_ID")
				Me.OnNATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATION_CODE", DbType:="Int")>  _
	Public Property NATION_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._NATION_CODE
		End Get
		Set
			If (Me._NATION_CODE.Equals(value) = false) Then
				Me.OnNATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NATION_CODE = value
				Me.SendPropertyChanged("NATION_CODE")
				Me.OnNATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATION_NAME", DbType:="VarChar(MAX)")>  _
	Public Property NATION_NAME() As String
		Get
			Return Me._NATION_NAME
		End Get
		Set
			If (String.Equals(Me._NATION_NAME, value) = false) Then
				Me.OnNATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NATION_NAME = value
				Me.SendPropertyChanged("NATION_NAME")
				Me.OnNATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATION_NOTE", DbType:="VarChar(MAX)")>  _
	Public Property NATION_NOTE() As String
		Get
			Return Me._NATION_NOTE
		End Get
		Set
			If (String.Equals(Me._NATION_NOTE, value) = false) Then
				Me.OnNATION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NATION_NOTE = value
				Me.SendPropertyChanged("NATION_NOTE")
				Me.OnNATION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NOFPCAUSE")>  _
Partial Public Class MAS_NOFPCAUSE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _N_ID As Integer
	
	Private _N_CODE As System.Nullable(Of Integer)
	
	Private _N_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnN_IDChanged()
    End Sub
    Partial Private Sub OnN_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_CODEChanged()
    End Sub
    Partial Private Sub OnN_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnN_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property N_ID() As Integer
		Get
			Return Me._N_ID
		End Get
		Set
			If ((Me._N_ID = value)  _
						= false) Then
				Me.OnN_IDChanging(value)
				Me.SendPropertyChanging
				Me._N_ID = value
				Me.SendPropertyChanged("N_ID")
				Me.OnN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_CODE", DbType:="Int")>  _
	Public Property N_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._N_CODE
		End Get
		Set
			If (Me._N_CODE.Equals(value) = false) Then
				Me.OnN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._N_CODE = value
				Me.SendPropertyChanged("N_CODE")
				Me.OnN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property N_DESCRIPTION() As String
		Get
			Return Me._N_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._N_DESCRIPTION, value) = false) Then
				Me.OnN_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._N_DESCRIPTION = value
				Me.SendPropertyChanged("N_DESCRIPTION")
				Me.OnN_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NONEDREASON")>  _
Partial Public Class MAS_NONEDREASON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NONEDREASON_ID As Integer
	
	Private _NONEDREASON_CODE As String
	
	Private _NONEDREASON_NAME As String
	
	Private _NONEDREASON_ENNAME As String
	
	Private _NONEDREASON_NOTE As String
	
	Private _NONEDREASON_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNONEDREASON_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNONEDREASON_IDChanged()
    End Sub
    Partial Private Sub OnNONEDREASON_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNONEDREASON_CODEChanged()
    End Sub
    Partial Private Sub OnNONEDREASON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNONEDREASON_NAMEChanged()
    End Sub
    Partial Private Sub OnNONEDREASON_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNONEDREASON_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNONEDREASON_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNONEDREASON_NOTEChanged()
    End Sub
    Partial Private Sub OnNONEDREASON_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNONEDREASON_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NONEDREASON_ID() As Integer
		Get
			Return Me._NONEDREASON_ID
		End Get
		Set
			If ((Me._NONEDREASON_ID = value)  _
						= false) Then
				Me.OnNONEDREASON_IDChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_ID = value
				Me.SendPropertyChanged("NONEDREASON_ID")
				Me.OnNONEDREASON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_CODE", DbType:="NVarChar(50)")>  _
	Public Property NONEDREASON_CODE() As String
		Get
			Return Me._NONEDREASON_CODE
		End Get
		Set
			If (String.Equals(Me._NONEDREASON_CODE, value) = false) Then
				Me.OnNONEDREASON_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_CODE = value
				Me.SendPropertyChanged("NONEDREASON_CODE")
				Me.OnNONEDREASON_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NONEDREASON_NAME() As String
		Get
			Return Me._NONEDREASON_NAME
		End Get
		Set
			If (String.Equals(Me._NONEDREASON_NAME, value) = false) Then
				Me.OnNONEDREASON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_NAME = value
				Me.SendPropertyChanged("NONEDREASON_NAME")
				Me.OnNONEDREASON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NONEDREASON_ENNAME() As String
		Get
			Return Me._NONEDREASON_ENNAME
		End Get
		Set
			If (String.Equals(Me._NONEDREASON_ENNAME, value) = false) Then
				Me.OnNONEDREASON_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_ENNAME = value
				Me.SendPropertyChanged("NONEDREASON_ENNAME")
				Me.OnNONEDREASON_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NONEDREASON_NOTE() As String
		Get
			Return Me._NONEDREASON_NOTE
		End Get
		Set
			If (String.Equals(Me._NONEDREASON_NOTE, value) = false) Then
				Me.OnNONEDREASON_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_NOTE = value
				Me.SendPropertyChanged("NONEDREASON_NOTE")
				Me.OnNONEDREASON_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONEDREASON_ISDISABLED", DbType:="Int")>  _
	Public Property NONEDREASON_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._NONEDREASON_ISDISABLED
		End Get
		Set
			If (Me._NONEDREASON_ISDISABLED.Equals(value) = false) Then
				Me.OnNONEDREASON_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NONEDREASON_ISDISABLED = value
				Me.SendPropertyChanged("NONEDREASON_ISDISABLED")
				Me.OnNONEDREASON_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NORMALAPP")>  _
Partial Public Class MAS_NORMALAPP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NORMALAPP_ID As Integer
	
	Private _NORMALAPP_CODE As String
	
	Private _NORMALAPP_NAME As String
	
	Private _NORMALAPP_ENNAME As String
	
	Private _NORMALAPP_NOTE As String
	
	Private _NORMALAPP_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNORMALAPP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNORMALAPP_IDChanged()
    End Sub
    Partial Private Sub OnNORMALAPP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNORMALAPP_CODEChanged()
    End Sub
    Partial Private Sub OnNORMALAPP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNORMALAPP_NAMEChanged()
    End Sub
    Partial Private Sub OnNORMALAPP_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNORMALAPP_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNORMALAPP_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNORMALAPP_NOTEChanged()
    End Sub
    Partial Private Sub OnNORMALAPP_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNORMALAPP_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NORMALAPP_ID() As Integer
		Get
			Return Me._NORMALAPP_ID
		End Get
		Set
			If ((Me._NORMALAPP_ID = value)  _
						= false) Then
				Me.OnNORMALAPP_IDChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_ID = value
				Me.SendPropertyChanged("NORMALAPP_ID")
				Me.OnNORMALAPP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property NORMALAPP_CODE() As String
		Get
			Return Me._NORMALAPP_CODE
		End Get
		Set
			If (String.Equals(Me._NORMALAPP_CODE, value) = false) Then
				Me.OnNORMALAPP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_CODE = value
				Me.SendPropertyChanged("NORMALAPP_CODE")
				Me.OnNORMALAPP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NORMALAPP_NAME() As String
		Get
			Return Me._NORMALAPP_NAME
		End Get
		Set
			If (String.Equals(Me._NORMALAPP_NAME, value) = false) Then
				Me.OnNORMALAPP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_NAME = value
				Me.SendPropertyChanged("NORMALAPP_NAME")
				Me.OnNORMALAPP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NORMALAPP_ENNAME() As String
		Get
			Return Me._NORMALAPP_ENNAME
		End Get
		Set
			If (String.Equals(Me._NORMALAPP_ENNAME, value) = false) Then
				Me.OnNORMALAPP_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_ENNAME = value
				Me.SendPropertyChanged("NORMALAPP_ENNAME")
				Me.OnNORMALAPP_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NORMALAPP_NOTE() As String
		Get
			Return Me._NORMALAPP_NOTE
		End Get
		Set
			If (String.Equals(Me._NORMALAPP_NOTE, value) = false) Then
				Me.OnNORMALAPP_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_NOTE = value
				Me.SendPropertyChanged("NORMALAPP_NOTE")
				Me.OnNORMALAPP_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMALAPP_ISDISABLED", DbType:="Int")>  _
	Public Property NORMALAPP_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._NORMALAPP_ISDISABLED
		End Get
		Set
			If (Me._NORMALAPP_ISDISABLED.Equals(value) = false) Then
				Me.OnNORMALAPP_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NORMALAPP_ISDISABLED = value
				Me.SendPropertyChanged("NORMALAPP_ISDISABLED")
				Me.OnNORMALAPP_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NURSECARE")>  _
Partial Public Class MAS_NURSECARE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NURSECARE_ID As Integer
	
	Private _NURSECARE_CODE As String
	
	Private _NURSECARE_NAME As String
	
	Private _NURSECARE_ENNAME As String
	
	Private _NURSECARE_NOTE As String
	
	Private _NURSECARE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _NURSECARE_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNURSECARE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNURSECARE_IDChanged()
    End Sub
    Partial Private Sub OnNURSECARE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNURSECARE_CODEChanged()
    End Sub
    Partial Private Sub OnNURSECARE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNURSECARE_NAMEChanged()
    End Sub
    Partial Private Sub OnNURSECARE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNURSECARE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnNURSECARE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNURSECARE_NOTEChanged()
    End Sub
    Partial Private Sub OnNURSECARE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNURSECARE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnNURSECARE_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNURSECARE_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NURSECARE_ID() As Integer
		Get
			Return Me._NURSECARE_ID
		End Get
		Set
			If ((Me._NURSECARE_ID = value)  _
						= false) Then
				Me.OnNURSECARE_IDChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_ID = value
				Me.SendPropertyChanged("NURSECARE_ID")
				Me.OnNURSECARE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_CODE", DbType:="NVarChar(50)")>  _
	Public Property NURSECARE_CODE() As String
		Get
			Return Me._NURSECARE_CODE
		End Get
		Set
			If (String.Equals(Me._NURSECARE_CODE, value) = false) Then
				Me.OnNURSECARE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_CODE = value
				Me.SendPropertyChanged("NURSECARE_CODE")
				Me.OnNURSECARE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NURSECARE_NAME() As String
		Get
			Return Me._NURSECARE_NAME
		End Get
		Set
			If (String.Equals(Me._NURSECARE_NAME, value) = false) Then
				Me.OnNURSECARE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_NAME = value
				Me.SendPropertyChanged("NURSECARE_NAME")
				Me.OnNURSECARE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property NURSECARE_ENNAME() As String
		Get
			Return Me._NURSECARE_ENNAME
		End Get
		Set
			If (String.Equals(Me._NURSECARE_ENNAME, value) = false) Then
				Me.OnNURSECARE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_ENNAME = value
				Me.SendPropertyChanged("NURSECARE_ENNAME")
				Me.OnNURSECARE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NURSECARE_NOTE() As String
		Get
			Return Me._NURSECARE_NOTE
		End Get
		Set
			If (String.Equals(Me._NURSECARE_NOTE, value) = false) Then
				Me.OnNURSECARE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_NOTE = value
				Me.SendPropertyChanged("NURSECARE_NOTE")
				Me.OnNURSECARE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_ISDISABLED", DbType:="Int")>  _
	Public Property NURSECARE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._NURSECARE_ISDISABLED
		End Get
		Set
			If (Me._NURSECARE_ISDISABLED.Equals(value) = false) Then
				Me.OnNURSECARE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_ISDISABLED = value
				Me.SendPropertyChanged("NURSECARE_ISDISABLED")
				Me.OnNURSECARE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NURSECARE_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property NURSECARE_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._NURSECARE_SERVICEUNITKEY
		End Get
		Set
			If (Me._NURSECARE_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnNURSECARE_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._NURSECARE_SERVICEUNITKEY = value
				Me.SendPropertyChanged("NURSECARE_SERVICEUNITKEY")
				Me.OnNURSECARE_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Nursing_services")>  _
Partial Public Class MAS_Nursing_service
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Nurse As System.Nullable(Of Integer)
	
	Private _Nursing_services As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_NurseChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_NurseChanged()
    End Sub
    Partial Private Sub OnNursing_servicesChanging(value As String)
    End Sub
    Partial Private Sub OnNursing_servicesChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Nurse", DbType:="Int")>  _
	Public Property ID_Nurse() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Nurse
		End Get
		Set
			If (Me._ID_Nurse.Equals(value) = false) Then
				Me.OnID_NurseChanging(value)
				Me.SendPropertyChanging
				Me._ID_Nurse = value
				Me.SendPropertyChanged("ID_Nurse")
				Me.OnID_NurseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nursing_services", DbType:="NVarChar(MAX)")>  _
	Public Property Nursing_services() As String
		Get
			Return Me._Nursing_services
		End Get
		Set
			If (String.Equals(Me._Nursing_services, value) = false) Then
				Me.OnNursing_servicesChanging(value)
				Me.SendPropertyChanging
				Me._Nursing_services = value
				Me.SendPropertyChanged("Nursing_services")
				Me.OnNursing_servicesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OBJECTIVE_DRUG")>  _
Partial Public Class MAS_OBJECTIVE_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OBJECTIVE_DRUG_ID As Integer
	
	Private _OBJECTIVE_DRUG_CODE As String
	
	Private _OBJECTIVE_DRUG_NAME As String
	
	Private _OBJECTIVE_DRUG_ENNAME As String
	
	Private _OBJECTIVE_DRUG_NOTE As String
	
	Private _OBJECTIVE_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOBJECTIVE_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OBJECTIVE_DRUG_ID() As Integer
		Get
			Return Me._OBJECTIVE_DRUG_ID
		End Get
		Set
			If ((Me._OBJECTIVE_DRUG_ID = value)  _
						= false) Then
				Me.OnOBJECTIVE_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_ID = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_ID")
				Me.OnOBJECTIVE_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVE_DRUG_CODE() As String
		Get
			Return Me._OBJECTIVE_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._OBJECTIVE_DRUG_CODE, value) = false) Then
				Me.OnOBJECTIVE_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_CODE = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_CODE")
				Me.OnOBJECTIVE_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVE_DRUG_NAME() As String
		Get
			Return Me._OBJECTIVE_DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._OBJECTIVE_DRUG_NAME, value) = false) Then
				Me.OnOBJECTIVE_DRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_NAME = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_NAME")
				Me.OnOBJECTIVE_DRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVE_DRUG_ENNAME() As String
		Get
			Return Me._OBJECTIVE_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._OBJECTIVE_DRUG_ENNAME, value) = false) Then
				Me.OnOBJECTIVE_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_ENNAME = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_ENNAME")
				Me.OnOBJECTIVE_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVE_DRUG_NOTE() As String
		Get
			Return Me._OBJECTIVE_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._OBJECTIVE_DRUG_NOTE, value) = false) Then
				Me.OnOBJECTIVE_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_NOTE = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_NOTE")
				Me.OnOBJECTIVE_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVE_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property OBJECTIVE_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._OBJECTIVE_DRUG_ISDISABLED
		End Get
		Set
			If (Me._OBJECTIVE_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnOBJECTIVE_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVE_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("OBJECTIVE_DRUG_ISDISABLED")
				Me.OnOBJECTIVE_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OBJECTIVECHECK")>  _
Partial Public Class MAS_OBJECTIVECHECK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OBJECTIVECHECK_ID As Integer
	
	Private _OBJECTIVECHECK_CODE As String
	
	Private _OBJECTIVECHECK_OBJECTIVENAME As String
	
	Private _OBJECTIVECHECK_ENNAME As String
	
	Private _OBJECTIVECHECK_NOTE As String
	
	Private _OBJECTIVECHECK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_IDChanged()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_CODEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_OBJECTIVENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_OBJECTIVENAMEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_NOTEChanged()
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOBJECTIVECHECK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OBJECTIVECHECK_ID() As Integer
		Get
			Return Me._OBJECTIVECHECK_ID
		End Get
		Set
			If ((Me._OBJECTIVECHECK_ID = value)  _
						= false) Then
				Me.OnOBJECTIVECHECK_IDChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_ID = value
				Me.SendPropertyChanged("OBJECTIVECHECK_ID")
				Me.OnOBJECTIVECHECK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_CODE", DbType:="NVarChar(50)")>  _
	Public Property OBJECTIVECHECK_CODE() As String
		Get
			Return Me._OBJECTIVECHECK_CODE
		End Get
		Set
			If (String.Equals(Me._OBJECTIVECHECK_CODE, value) = false) Then
				Me.OnOBJECTIVECHECK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_CODE = value
				Me.SendPropertyChanged("OBJECTIVECHECK_CODE")
				Me.OnOBJECTIVECHECK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_OBJECTIVENAME", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVECHECK_OBJECTIVENAME() As String
		Get
			Return Me._OBJECTIVECHECK_OBJECTIVENAME
		End Get
		Set
			If (String.Equals(Me._OBJECTIVECHECK_OBJECTIVENAME, value) = false) Then
				Me.OnOBJECTIVECHECK_OBJECTIVENAMEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_OBJECTIVENAME = value
				Me.SendPropertyChanged("OBJECTIVECHECK_OBJECTIVENAME")
				Me.OnOBJECTIVECHECK_OBJECTIVENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property OBJECTIVECHECK_ENNAME() As String
		Get
			Return Me._OBJECTIVECHECK_ENNAME
		End Get
		Set
			If (String.Equals(Me._OBJECTIVECHECK_ENNAME, value) = false) Then
				Me.OnOBJECTIVECHECK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_ENNAME = value
				Me.SendPropertyChanged("OBJECTIVECHECK_ENNAME")
				Me.OnOBJECTIVECHECK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property OBJECTIVECHECK_NOTE() As String
		Get
			Return Me._OBJECTIVECHECK_NOTE
		End Get
		Set
			If (String.Equals(Me._OBJECTIVECHECK_NOTE, value) = false) Then
				Me.OnOBJECTIVECHECK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_NOTE = value
				Me.SendPropertyChanged("OBJECTIVECHECK_NOTE")
				Me.OnOBJECTIVECHECK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJECTIVECHECK_ISDISABLED", DbType:="Int")>  _
	Public Property OBJECTIVECHECK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._OBJECTIVECHECK_ISDISABLED
		End Get
		Set
			If (Me._OBJECTIVECHECK_ISDISABLED.Equals(value) = false) Then
				Me.OnOBJECTIVECHECK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._OBJECTIVECHECK_ISDISABLED = value
				Me.SendPropertyChanged("OBJECTIVECHECK_ISDISABLED")
				Me.OnOBJECTIVECHECK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OCCUPATION_DRUG")>  _
Partial Public Class MAS_OCCUPATION_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OCCUPATION_DRUG_ID As Integer
	
	Private _OCCUPATION_DRUG_CODE As String
	
	Private _OCCUPATION_DRUG_NAME As String
	
	Private _OCCUPATION_DRUG_ENNAME As String
	
	Private _OCCUPATION_DRUG_NOTE As String
	
	Private _OCCUPATION_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOCCUPATION_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OCCUPATION_DRUG_ID() As Integer
		Get
			Return Me._OCCUPATION_DRUG_ID
		End Get
		Set
			If ((Me._OCCUPATION_DRUG_ID = value)  _
						= false) Then
				Me.OnOCCUPATION_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_ID = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_ID")
				Me.OnOCCUPATION_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property OCCUPATION_DRUG_CODE() As String
		Get
			Return Me._OCCUPATION_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_DRUG_CODE, value) = false) Then
				Me.OnOCCUPATION_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_CODE = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_CODE")
				Me.OnOCCUPATION_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OCCUPATION_DRUG_NAME() As String
		Get
			Return Me._OCCUPATION_DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_DRUG_NAME, value) = false) Then
				Me.OnOCCUPATION_DRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_NAME = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_NAME")
				Me.OnOCCUPATION_DRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property OCCUPATION_DRUG_ENNAME() As String
		Get
			Return Me._OCCUPATION_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_DRUG_ENNAME, value) = false) Then
				Me.OnOCCUPATION_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_ENNAME = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_ENNAME")
				Me.OnOCCUPATION_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property OCCUPATION_DRUG_NOTE() As String
		Get
			Return Me._OCCUPATION_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_DRUG_NOTE, value) = false) Then
				Me.OnOCCUPATION_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_NOTE = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_NOTE")
				Me.OnOCCUPATION_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property OCCUPATION_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._OCCUPATION_DRUG_ISDISABLED
		End Get
		Set
			If (Me._OCCUPATION_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnOCCUPATION_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("OCCUPATION_DRUG_ISDISABLED")
				Me.OnOCCUPATION_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OCCUPATION_NEW")>  _
Partial Public Class MAS_OCCUPATION_NEW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OCCUPATION_NEW_ID As Integer
	
	Private _OCCUPATION_NEW_CODE As String
	
	Private _OCCUPATION_NEW_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_IDChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_CODEChanged()
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATION_NEW_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_NEW_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OCCUPATION_NEW_ID() As Integer
		Get
			Return Me._OCCUPATION_NEW_ID
		End Get
		Set
			If ((Me._OCCUPATION_NEW_ID = value)  _
						= false) Then
				Me.OnOCCUPATION_NEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_NEW_ID = value
				Me.SendPropertyChanged("OCCUPATION_NEW_ID")
				Me.OnOCCUPATION_NEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_NEW_CODE", DbType:="VarChar(MAX)")>  _
	Public Property OCCUPATION_NEW_CODE() As String
		Get
			Return Me._OCCUPATION_NEW_CODE
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_NEW_CODE, value) = false) Then
				Me.OnOCCUPATION_NEW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_NEW_CODE = value
				Me.SendPropertyChanged("OCCUPATION_NEW_CODE")
				Me.OnOCCUPATION_NEW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATION_NEW_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property OCCUPATION_NEW_DESCRIPTION() As String
		Get
			Return Me._OCCUPATION_NEW_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._OCCUPATION_NEW_DESCRIPTION, value) = false) Then
				Me.OnOCCUPATION_NEW_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATION_NEW_DESCRIPTION = value
				Me.SendPropertyChanged("OCCUPATION_NEW_DESCRIPTION")
				Me.OnOCCUPATION_NEW_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OCCUPATION_OLD")>  _
Partial Public Class MAS_OCCUPATION_OLD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _O_ID As Integer
	
	Private _O_CODE As System.Nullable(Of Integer)
	
	Private _INSCL_NAME As String
	
	Private _INSCL_DATEEXP As String
	
	Private _MAININSCL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnO_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnO_IDChanged()
    End Sub
    Partial Private Sub OnO_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnO_CODEChanged()
    End Sub
    Partial Private Sub OnINSCL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINSCL_NAMEChanged()
    End Sub
    Partial Private Sub OnINSCL_DATEEXPChanging(value As String)
    End Sub
    Partial Private Sub OnINSCL_DATEEXPChanged()
    End Sub
    Partial Private Sub OnMAININSCLChanging(value As String)
    End Sub
    Partial Private Sub OnMAININSCLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_O_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property O_ID() As Integer
		Get
			Return Me._O_ID
		End Get
		Set
			If ((Me._O_ID = value)  _
						= false) Then
				Me.OnO_IDChanging(value)
				Me.SendPropertyChanging
				Me._O_ID = value
				Me.SendPropertyChanged("O_ID")
				Me.OnO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_O_CODE", DbType:="Int")>  _
	Public Property O_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._O_CODE
		End Get
		Set
			If (Me._O_CODE.Equals(value) = false) Then
				Me.OnO_CODEChanging(value)
				Me.SendPropertyChanging
				Me._O_CODE = value
				Me.SendPropertyChanged("O_CODE")
				Me.OnO_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSCL_NAME", DbType:="VarChar(MAX)")>  _
	Public Property INSCL_NAME() As String
		Get
			Return Me._INSCL_NAME
		End Get
		Set
			If (String.Equals(Me._INSCL_NAME, value) = false) Then
				Me.OnINSCL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INSCL_NAME = value
				Me.SendPropertyChanged("INSCL_NAME")
				Me.OnINSCL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSCL_DATEEXP", DbType:="VarChar(MAX)")>  _
	Public Property INSCL_DATEEXP() As String
		Get
			Return Me._INSCL_DATEEXP
		End Get
		Set
			If (String.Equals(Me._INSCL_DATEEXP, value) = false) Then
				Me.OnINSCL_DATEEXPChanging(value)
				Me.SendPropertyChanging
				Me._INSCL_DATEEXP = value
				Me.SendPropertyChanged("INSCL_DATEEXP")
				Me.OnINSCL_DATEEXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAININSCL", DbType:="VarChar(MAX)")>  _
	Public Property MAININSCL() As String
		Get
			Return Me._MAININSCL
		End Get
		Set
			If (String.Equals(Me._MAININSCL, value) = false) Then
				Me.OnMAININSCLChanging(value)
				Me.SendPropertyChanging
				Me._MAININSCL = value
				Me.SendPropertyChanged("MAININSCL")
				Me.OnMAININSCLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OCCUPATIONS")>  _
Partial Public Class MAS_OCCUPATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OCCUPATIONS_ID As Integer
	
	Private _OCCUPATIONS_Code As String
	
	Private _OCCUPATIONS_OCCUPATIONNAME As String
	
	Private _OCCUPATIONS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOCCUPATIONS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOCCUPATIONS_IDChanged()
    End Sub
    Partial Private Sub OnOCCUPATIONS_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATIONS_CodeChanged()
    End Sub
    Partial Private Sub OnOCCUPATIONS_OCCUPATIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOCCUPATIONS_OCCUPATIONNAMEChanged()
    End Sub
    Partial Private Sub OnOCCUPATIONS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOCCUPATIONS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATIONS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OCCUPATIONS_ID() As Integer
		Get
			Return Me._OCCUPATIONS_ID
		End Get
		Set
			If ((Me._OCCUPATIONS_ID = value)  _
						= false) Then
				Me.OnOCCUPATIONS_IDChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATIONS_ID = value
				Me.SendPropertyChanged("OCCUPATIONS_ID")
				Me.OnOCCUPATIONS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATIONS_Code", DbType:="NVarChar(50)")>  _
	Public Property OCCUPATIONS_Code() As String
		Get
			Return Me._OCCUPATIONS_Code
		End Get
		Set
			If (String.Equals(Me._OCCUPATIONS_Code, value) = false) Then
				Me.OnOCCUPATIONS_CodeChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATIONS_Code = value
				Me.SendPropertyChanged("OCCUPATIONS_Code")
				Me.OnOCCUPATIONS_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATIONS_OCCUPATIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property OCCUPATIONS_OCCUPATIONNAME() As String
		Get
			Return Me._OCCUPATIONS_OCCUPATIONNAME
		End Get
		Set
			If (String.Equals(Me._OCCUPATIONS_OCCUPATIONNAME, value) = false) Then
				Me.OnOCCUPATIONS_OCCUPATIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATIONS_OCCUPATIONNAME = value
				Me.SendPropertyChanged("OCCUPATIONS_OCCUPATIONNAME")
				Me.OnOCCUPATIONS_OCCUPATIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCCUPATIONS_ISDISABLED", DbType:="Int")>  _
	Public Property OCCUPATIONS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._OCCUPATIONS_ISDISABLED
		End Get
		Set
			If (Me._OCCUPATIONS_ISDISABLED.Equals(value) = false) Then
				Me.OnOCCUPATIONS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._OCCUPATIONS_ISDISABLED = value
				Me.SendPropertyChanged("OCCUPATIONS_ISDISABLED")
				Me.OnOCCUPATIONS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ORGANIZATION")>  _
Partial Public Class MAS_ORGANIZATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ORGANIZATION_ID As Integer
	
	Private _ORGANIZATION_ORGANIZATIONNAME As String
	
	Private _ORGANIZATION_ENNAME As String
	
	Private _ORGANIZATION_ADDRESS1 As String
	
	Private _ORGANIZATION_ADDRESS2 As String
	
	Private _ORGANIZATION_ADDRESS3 As String
	
	Private _ORGANIZATION_THSUBDISTRICT As String
	
	Private _ORGANIZATION_ZIPCODE As String
	
	Private _ORGANIZATION_COUNTRYKEY As String
	
	Private _ORGANIZATION_PHONE As String
	
	Private _ORGANIZATION_FAX As String
	
	Private _ORGANIZATION_WEBSITE As String
	
	Private _ORGANIZATION_CONTACTNOTE As String
	
	Private _ORGANIZATION_ISHOSPITAL As System.Nullable(Of Integer)
	
	Private _ORGANIZATION_ISOUTLABXTYPE As System.Nullable(Of Integer)
	
	Private _ORGANIZATION_ISVENDORXTYPE As System.Nullable(Of Integer)
	
	Private _ORGANIZATIONO_ISMANUFACTUREXTYPE As System.Nullable(Of Integer)
	
	Private _POST_NAME As String
	
	Private _REMARK As String
	
	Private _ISUSE As System.Nullable(Of Integer)
	
	Private _MAS_NATION_ID As System.Nullable(Of Integer)
	
	Private _MAS_NATION_NAME As String
	
	Private _MAS_PROVINCE_CODE As System.Nullable(Of Integer)
	
	Private _MAS_PROVINCE_NAME As String
	
	Private _MAS_AMPHUR_ID As System.Nullable(Of Integer)
	
	Private _MAS_AMPHUR_NAME As String
	
	Private _MAS_DISTRICT_ID As System.Nullable(Of Integer)
	
	Private _MAS_DISTRICT_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnORGANIZATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnORGANIZATION_IDChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ORGANIZATIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ORGANIZATIONNAMEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS1Changing(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS1Changed()
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS2Changing(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS2Changed()
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS3Changing(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ADDRESS3Changed()
    End Sub
    Partial Private Sub OnORGANIZATION_THSUBDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_THSUBDISTRICTChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_COUNTRYKEYChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_COUNTRYKEYChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_PHONEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_FAXChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_WEBSITEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_WEBSITEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_CONTACTNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_CONTACTNOTEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ISHOSPITALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORGANIZATION_ISHOSPITALChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ISOUTLABXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORGANIZATION_ISOUTLABXTYPEChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_ISVENDORXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORGANIZATION_ISVENDORXTYPEChanged()
    End Sub
    Partial Private Sub OnORGANIZATIONO_ISMANUFACTUREXTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORGANIZATIONO_ISMANUFACTUREXTYPEChanged()
    End Sub
    Partial Private Sub OnPOST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOST_NAMEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnISUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISUSEChanged()
    End Sub
    Partial Private Sub OnMAS_NATION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAS_NATION_IDChanged()
    End Sub
    Partial Private Sub OnMAS_NATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAS_NATION_NAMEChanged()
    End Sub
    Partial Private Sub OnMAS_PROVINCE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAS_PROVINCE_CODEChanged()
    End Sub
    Partial Private Sub OnMAS_PROVINCE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAS_PROVINCE_NAMEChanged()
    End Sub
    Partial Private Sub OnMAS_AMPHUR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAS_AMPHUR_IDChanged()
    End Sub
    Partial Private Sub OnMAS_AMPHUR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAS_AMPHUR_NAMEChanged()
    End Sub
    Partial Private Sub OnMAS_DISTRICT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAS_DISTRICT_IDChanged()
    End Sub
    Partial Private Sub OnMAS_DISTRICT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAS_DISTRICT_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ORGANIZATION_ID() As Integer
		Get
			Return Me._ORGANIZATION_ID
		End Get
		Set
			If ((Me._ORGANIZATION_ID = value)  _
						= false) Then
				Me.OnORGANIZATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ID = value
				Me.SendPropertyChanged("ORGANIZATION_ID")
				Me.OnORGANIZATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ORGANIZATIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_ORGANIZATIONNAME() As String
		Get
			Return Me._ORGANIZATION_ORGANIZATIONNAME
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ORGANIZATIONNAME, value) = false) Then
				Me.OnORGANIZATION_ORGANIZATIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ORGANIZATIONNAME = value
				Me.SendPropertyChanged("ORGANIZATION_ORGANIZATIONNAME")
				Me.OnORGANIZATION_ORGANIZATIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_ENNAME() As String
		Get
			Return Me._ORGANIZATION_ENNAME
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ENNAME, value) = false) Then
				Me.OnORGANIZATION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ENNAME = value
				Me.SendPropertyChanged("ORGANIZATION_ENNAME")
				Me.OnORGANIZATION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ADDRESS1", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_ADDRESS1() As String
		Get
			Return Me._ORGANIZATION_ADDRESS1
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ADDRESS1, value) = false) Then
				Me.OnORGANIZATION_ADDRESS1Changing(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ADDRESS1 = value
				Me.SendPropertyChanged("ORGANIZATION_ADDRESS1")
				Me.OnORGANIZATION_ADDRESS1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ADDRESS2", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_ADDRESS2() As String
		Get
			Return Me._ORGANIZATION_ADDRESS2
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ADDRESS2, value) = false) Then
				Me.OnORGANIZATION_ADDRESS2Changing(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ADDRESS2 = value
				Me.SendPropertyChanged("ORGANIZATION_ADDRESS2")
				Me.OnORGANIZATION_ADDRESS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ADDRESS3", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_ADDRESS3() As String
		Get
			Return Me._ORGANIZATION_ADDRESS3
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ADDRESS3, value) = false) Then
				Me.OnORGANIZATION_ADDRESS3Changing(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ADDRESS3 = value
				Me.SendPropertyChanged("ORGANIZATION_ADDRESS3")
				Me.OnORGANIZATION_ADDRESS3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_THSUBDISTRICT", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_THSUBDISTRICT() As String
		Get
			Return Me._ORGANIZATION_THSUBDISTRICT
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_THSUBDISTRICT, value) = false) Then
				Me.OnORGANIZATION_THSUBDISTRICTChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_THSUBDISTRICT = value
				Me.SendPropertyChanged("ORGANIZATION_THSUBDISTRICT")
				Me.OnORGANIZATION_THSUBDISTRICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_ZIPCODE() As String
		Get
			Return Me._ORGANIZATION_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_ZIPCODE, value) = false) Then
				Me.OnORGANIZATION_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ZIPCODE = value
				Me.SendPropertyChanged("ORGANIZATION_ZIPCODE")
				Me.OnORGANIZATION_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_COUNTRYKEY", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_COUNTRYKEY() As String
		Get
			Return Me._ORGANIZATION_COUNTRYKEY
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_COUNTRYKEY, value) = false) Then
				Me.OnORGANIZATION_COUNTRYKEYChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_COUNTRYKEY = value
				Me.SendPropertyChanged("ORGANIZATION_COUNTRYKEY")
				Me.OnORGANIZATION_COUNTRYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_PHONE", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_PHONE() As String
		Get
			Return Me._ORGANIZATION_PHONE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_PHONE, value) = false) Then
				Me.OnORGANIZATION_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_PHONE = value
				Me.SendPropertyChanged("ORGANIZATION_PHONE")
				Me.OnORGANIZATION_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_FAX", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_FAX() As String
		Get
			Return Me._ORGANIZATION_FAX
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_FAX, value) = false) Then
				Me.OnORGANIZATION_FAXChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_FAX = value
				Me.SendPropertyChanged("ORGANIZATION_FAX")
				Me.OnORGANIZATION_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_WEBSITE", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_WEBSITE() As String
		Get
			Return Me._ORGANIZATION_WEBSITE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_WEBSITE, value) = false) Then
				Me.OnORGANIZATION_WEBSITEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_WEBSITE = value
				Me.SendPropertyChanged("ORGANIZATION_WEBSITE")
				Me.OnORGANIZATION_WEBSITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_CONTACTNOTE", DbType:="NVarChar(50)")>  _
	Public Property ORGANIZATION_CONTACTNOTE() As String
		Get
			Return Me._ORGANIZATION_CONTACTNOTE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_CONTACTNOTE, value) = false) Then
				Me.OnORGANIZATION_CONTACTNOTEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_CONTACTNOTE = value
				Me.SendPropertyChanged("ORGANIZATION_CONTACTNOTE")
				Me.OnORGANIZATION_CONTACTNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ISHOSPITAL", DbType:="Int")>  _
	Public Property ORGANIZATION_ISHOSPITAL() As System.Nullable(Of Integer)
		Get
			Return Me._ORGANIZATION_ISHOSPITAL
		End Get
		Set
			If (Me._ORGANIZATION_ISHOSPITAL.Equals(value) = false) Then
				Me.OnORGANIZATION_ISHOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ISHOSPITAL = value
				Me.SendPropertyChanged("ORGANIZATION_ISHOSPITAL")
				Me.OnORGANIZATION_ISHOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ISOUTLABXTYPE", DbType:="Int")>  _
	Public Property ORGANIZATION_ISOUTLABXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._ORGANIZATION_ISOUTLABXTYPE
		End Get
		Set
			If (Me._ORGANIZATION_ISOUTLABXTYPE.Equals(value) = false) Then
				Me.OnORGANIZATION_ISOUTLABXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ISOUTLABXTYPE = value
				Me.SendPropertyChanged("ORGANIZATION_ISOUTLABXTYPE")
				Me.OnORGANIZATION_ISOUTLABXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_ISVENDORXTYPE", DbType:="Int")>  _
	Public Property ORGANIZATION_ISVENDORXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._ORGANIZATION_ISVENDORXTYPE
		End Get
		Set
			If (Me._ORGANIZATION_ISVENDORXTYPE.Equals(value) = false) Then
				Me.OnORGANIZATION_ISVENDORXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_ISVENDORXTYPE = value
				Me.SendPropertyChanged("ORGANIZATION_ISVENDORXTYPE")
				Me.OnORGANIZATION_ISVENDORXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATIONO_ISMANUFACTUREXTYPE", DbType:="Int")>  _
	Public Property ORGANIZATIONO_ISMANUFACTUREXTYPE() As System.Nullable(Of Integer)
		Get
			Return Me._ORGANIZATIONO_ISMANUFACTUREXTYPE
		End Get
		Set
			If (Me._ORGANIZATIONO_ISMANUFACTUREXTYPE.Equals(value) = false) Then
				Me.OnORGANIZATIONO_ISMANUFACTUREXTYPEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATIONO_ISMANUFACTUREXTYPE = value
				Me.SendPropertyChanged("ORGANIZATIONO_ISMANUFACTUREXTYPE")
				Me.OnORGANIZATIONO_ISMANUFACTUREXTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POST_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POST_NAME() As String
		Get
			Return Me._POST_NAME
		End Get
		Set
			If (String.Equals(Me._POST_NAME, value) = false) Then
				Me.OnPOST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POST_NAME = value
				Me.SendPropertyChanged("POST_NAME")
				Me.OnPOST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISUSE", DbType:="Int")>  _
	Public Property ISUSE() As System.Nullable(Of Integer)
		Get
			Return Me._ISUSE
		End Get
		Set
			If (Me._ISUSE.Equals(value) = false) Then
				Me.OnISUSEChanging(value)
				Me.SendPropertyChanging
				Me._ISUSE = value
				Me.SendPropertyChanged("ISUSE")
				Me.OnISUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_NATION_ID", DbType:="Int")>  _
	Public Property MAS_NATION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAS_NATION_ID
		End Get
		Set
			If (Me._MAS_NATION_ID.Equals(value) = false) Then
				Me.OnMAS_NATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAS_NATION_ID = value
				Me.SendPropertyChanged("MAS_NATION_ID")
				Me.OnMAS_NATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_NATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAS_NATION_NAME() As String
		Get
			Return Me._MAS_NATION_NAME
		End Get
		Set
			If (String.Equals(Me._MAS_NATION_NAME, value) = false) Then
				Me.OnMAS_NATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_NATION_NAME = value
				Me.SendPropertyChanged("MAS_NATION_NAME")
				Me.OnMAS_NATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_PROVINCE_CODE", DbType:="Int")>  _
	Public Property MAS_PROVINCE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._MAS_PROVINCE_CODE
		End Get
		Set
			If (Me._MAS_PROVINCE_CODE.Equals(value) = false) Then
				Me.OnMAS_PROVINCE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_PROVINCE_CODE = value
				Me.SendPropertyChanged("MAS_PROVINCE_CODE")
				Me.OnMAS_PROVINCE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_PROVINCE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAS_PROVINCE_NAME() As String
		Get
			Return Me._MAS_PROVINCE_NAME
		End Get
		Set
			If (String.Equals(Me._MAS_PROVINCE_NAME, value) = false) Then
				Me.OnMAS_PROVINCE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_PROVINCE_NAME = value
				Me.SendPropertyChanged("MAS_PROVINCE_NAME")
				Me.OnMAS_PROVINCE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_AMPHUR_ID", DbType:="Int")>  _
	Public Property MAS_AMPHUR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAS_AMPHUR_ID
		End Get
		Set
			If (Me._MAS_AMPHUR_ID.Equals(value) = false) Then
				Me.OnMAS_AMPHUR_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAS_AMPHUR_ID = value
				Me.SendPropertyChanged("MAS_AMPHUR_ID")
				Me.OnMAS_AMPHUR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_AMPHUR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAS_AMPHUR_NAME() As String
		Get
			Return Me._MAS_AMPHUR_NAME
		End Get
		Set
			If (String.Equals(Me._MAS_AMPHUR_NAME, value) = false) Then
				Me.OnMAS_AMPHUR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_AMPHUR_NAME = value
				Me.SendPropertyChanged("MAS_AMPHUR_NAME")
				Me.OnMAS_AMPHUR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_DISTRICT_ID", DbType:="Int")>  _
	Public Property MAS_DISTRICT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAS_DISTRICT_ID
		End Get
		Set
			If (Me._MAS_DISTRICT_ID.Equals(value) = false) Then
				Me.OnMAS_DISTRICT_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAS_DISTRICT_ID = value
				Me.SendPropertyChanged("MAS_DISTRICT_ID")
				Me.OnMAS_DISTRICT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAS_DISTRICT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAS_DISTRICT_NAME() As String
		Get
			Return Me._MAS_DISTRICT_NAME
		End Get
		Set
			If (String.Equals(Me._MAS_DISTRICT_NAME, value) = false) Then
				Me.OnMAS_DISTRICT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAS_DISTRICT_NAME = value
				Me.SendPropertyChanged("MAS_DISTRICT_NAME")
				Me.OnMAS_DISTRICT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PATIENT_TYPE")>  _
Partial Public Class MAS_PATIENT_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PATIENT_TYPE_ID As Integer
	
	Private _PATIENT_TYPE_CODE As String
	
	Private _PATIENT_TYPE_NAME As String
	
	Private _PATIENT_TYPE_ENNAME As String
	
	Private _PATIENT_TYPE_NOTE As String
	
	Private _PATIENT_TYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPATIENT_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENT_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENT_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENT_TYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENT_TYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnPATIENT_TYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPATIENT_TYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PATIENT_TYPE_ID() As Integer
		Get
			Return Me._PATIENT_TYPE_ID
		End Get
		Set
			If ((Me._PATIENT_TYPE_ID = value)  _
						= false) Then
				Me.OnPATIENT_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_ID = value
				Me.SendPropertyChanged("PATIENT_TYPE_ID")
				Me.OnPATIENT_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENT_TYPE_CODE() As String
		Get
			Return Me._PATIENT_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._PATIENT_TYPE_CODE, value) = false) Then
				Me.OnPATIENT_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_CODE = value
				Me.SendPropertyChanged("PATIENT_TYPE_CODE")
				Me.OnPATIENT_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENT_TYPE_NAME() As String
		Get
			Return Me._PATIENT_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._PATIENT_TYPE_NAME, value) = false) Then
				Me.OnPATIENT_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_NAME = value
				Me.SendPropertyChanged("PATIENT_TYPE_NAME")
				Me.OnPATIENT_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENT_TYPE_ENNAME() As String
		Get
			Return Me._PATIENT_TYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._PATIENT_TYPE_ENNAME, value) = false) Then
				Me.OnPATIENT_TYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_ENNAME = value
				Me.SendPropertyChanged("PATIENT_TYPE_ENNAME")
				Me.OnPATIENT_TYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENT_TYPE_NOTE() As String
		Get
			Return Me._PATIENT_TYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._PATIENT_TYPE_NOTE, value) = false) Then
				Me.OnPATIENT_TYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_NOTE = value
				Me.SendPropertyChanged("PATIENT_TYPE_NOTE")
				Me.OnPATIENT_TYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENT_TYPE_ISDISABLED", DbType:="Int")>  _
	Public Property PATIENT_TYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PATIENT_TYPE_ISDISABLED
		End Get
		Set
			If (Me._PATIENT_TYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnPATIENT_TYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENT_TYPE_ISDISABLED = value
				Me.SendPropertyChanged("PATIENT_TYPE_ISDISABLED")
				Me.OnPATIENT_TYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PATIENTGROUP")>  _
Partial Public Class MAS_PATIENTGROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PATIENTGROUP_ID As Integer
	
	Private _PATIENTGROUP_CODE As String
	
	Private _PATIENTGROUP_PATIENTGROUP As String
	
	Private _PATIENTGROUP_ENNAME As String
	
	Private _PATIENTGROUP_CATNAME As String
	
	Private _PATIENTGROUP_NOTE As String
	
	Private _PATIENTGROUP_ISDISABLED As System.Nullable(Of Integer)
	
	Private _PATIENTGROUP_FASTTRACK As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPATIENTGROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPATIENTGROUP_IDChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUP_CODEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_PATIENTGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUP_PATIENTGROUPChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUP_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_CATNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUP_CATNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUP_NOTEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPATIENTGROUP_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUP_FASTTRACKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPATIENTGROUP_FASTTRACKChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PATIENTGROUP_ID() As Integer
		Get
			Return Me._PATIENTGROUP_ID
		End Get
		Set
			If ((Me._PATIENTGROUP_ID = value)  _
						= false) Then
				Me.OnPATIENTGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_ID = value
				Me.SendPropertyChanged("PATIENTGROUP_ID")
				Me.OnPATIENTGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_CODE", DbType:="NVarChar(50)")>  _
	Public Property PATIENTGROUP_CODE() As String
		Get
			Return Me._PATIENTGROUP_CODE
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUP_CODE, value) = false) Then
				Me.OnPATIENTGROUP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_CODE = value
				Me.SendPropertyChanged("PATIENTGROUP_CODE")
				Me.OnPATIENTGROUP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_PATIENTGROUP", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUP_PATIENTGROUP() As String
		Get
			Return Me._PATIENTGROUP_PATIENTGROUP
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUP_PATIENTGROUP, value) = false) Then
				Me.OnPATIENTGROUP_PATIENTGROUPChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_PATIENTGROUP = value
				Me.SendPropertyChanged("PATIENTGROUP_PATIENTGROUP")
				Me.OnPATIENTGROUP_PATIENTGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property PATIENTGROUP_ENNAME() As String
		Get
			Return Me._PATIENTGROUP_ENNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUP_ENNAME, value) = false) Then
				Me.OnPATIENTGROUP_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_ENNAME = value
				Me.SendPropertyChanged("PATIENTGROUP_ENNAME")
				Me.OnPATIENTGROUP_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_CATNAME", DbType:="NVarChar(200)")>  _
	Public Property PATIENTGROUP_CATNAME() As String
		Get
			Return Me._PATIENTGROUP_CATNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUP_CATNAME, value) = false) Then
				Me.OnPATIENTGROUP_CATNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_CATNAME = value
				Me.SendPropertyChanged("PATIENTGROUP_CATNAME")
				Me.OnPATIENTGROUP_CATNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUP_NOTE() As String
		Get
			Return Me._PATIENTGROUP_NOTE
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUP_NOTE, value) = false) Then
				Me.OnPATIENTGROUP_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_NOTE = value
				Me.SendPropertyChanged("PATIENTGROUP_NOTE")
				Me.OnPATIENTGROUP_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_ISDISABLED", DbType:="Int")>  _
	Public Property PATIENTGROUP_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PATIENTGROUP_ISDISABLED
		End Get
		Set
			If (Me._PATIENTGROUP_ISDISABLED.Equals(value) = false) Then
				Me.OnPATIENTGROUP_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_ISDISABLED = value
				Me.SendPropertyChanged("PATIENTGROUP_ISDISABLED")
				Me.OnPATIENTGROUP_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUP_FASTTRACK", DbType:="Int")>  _
	Public Property PATIENTGROUP_FASTTRACK() As System.Nullable(Of Integer)
		Get
			Return Me._PATIENTGROUP_FASTTRACK
		End Get
		Set
			If (Me._PATIENTGROUP_FASTTRACK.Equals(value) = false) Then
				Me.OnPATIENTGROUP_FASTTRACKChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUP_FASTTRACK = value
				Me.SendPropertyChanged("PATIENTGROUP_FASTTRACK")
				Me.OnPATIENTGROUP_FASTTRACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PATIENTGROUPMINISTRY")>  _
Partial Public Class MAS_PATIENTGROUPMINISTRY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PATIENTGROUPMINISTRY_ID As Integer
	
	Private _R_CODE As String
	
	Private _PATIENTGROUPMINISTRY_PATIENTGROUP As String
	
	Private _PATIENTGROUPMINISTRY_ENNAME As String
	
	Private _PATIENTGROUPMINISTRY_CATNAME As String
	
	Private _PATIENTGROUPMINISTRY_NOTE As String
	
	Private _R_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_IDChanged()
    End Sub
    Partial Private Sub OnR_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnR_CODEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_PATIENTGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_PATIENTGROUPChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_CATNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_CATNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPMINISTRY_NOTEChanged()
    End Sub
    Partial Private Sub OnR_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnR_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPMINISTRY_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property PATIENTGROUPMINISTRY_ID() As Integer
		Get
			Return Me._PATIENTGROUPMINISTRY_ID
		End Get
		Set
			If ((Me._PATIENTGROUPMINISTRY_ID = value)  _
						= false) Then
				Me.OnPATIENTGROUPMINISTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPMINISTRY_ID = value
				Me.SendPropertyChanged("PATIENTGROUPMINISTRY_ID")
				Me.OnPATIENTGROUPMINISTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_CODE", DbType:="NVarChar(50)")>  _
	Public Property R_CODE() As String
		Get
			Return Me._R_CODE
		End Get
		Set
			If (String.Equals(Me._R_CODE, value) = false) Then
				Me.OnR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._R_CODE = value
				Me.SendPropertyChanged("R_CODE")
				Me.OnR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPMINISTRY_PATIENTGROUP", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUPMINISTRY_PATIENTGROUP() As String
		Get
			Return Me._PATIENTGROUPMINISTRY_PATIENTGROUP
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPMINISTRY_PATIENTGROUP, value) = false) Then
				Me.OnPATIENTGROUPMINISTRY_PATIENTGROUPChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPMINISTRY_PATIENTGROUP = value
				Me.SendPropertyChanged("PATIENTGROUPMINISTRY_PATIENTGROUP")
				Me.OnPATIENTGROUPMINISTRY_PATIENTGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPMINISTRY_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property PATIENTGROUPMINISTRY_ENNAME() As String
		Get
			Return Me._PATIENTGROUPMINISTRY_ENNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPMINISTRY_ENNAME, value) = false) Then
				Me.OnPATIENTGROUPMINISTRY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPMINISTRY_ENNAME = value
				Me.SendPropertyChanged("PATIENTGROUPMINISTRY_ENNAME")
				Me.OnPATIENTGROUPMINISTRY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPMINISTRY_CATNAME", DbType:="NVarChar(200)")>  _
	Public Property PATIENTGROUPMINISTRY_CATNAME() As String
		Get
			Return Me._PATIENTGROUPMINISTRY_CATNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPMINISTRY_CATNAME, value) = false) Then
				Me.OnPATIENTGROUPMINISTRY_CATNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPMINISTRY_CATNAME = value
				Me.SendPropertyChanged("PATIENTGROUPMINISTRY_CATNAME")
				Me.OnPATIENTGROUPMINISTRY_CATNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPMINISTRY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUPMINISTRY_NOTE() As String
		Get
			Return Me._PATIENTGROUPMINISTRY_NOTE
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPMINISTRY_NOTE, value) = false) Then
				Me.OnPATIENTGROUPMINISTRY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPMINISTRY_NOTE = value
				Me.SendPropertyChanged("PATIENTGROUPMINISTRY_NOTE")
				Me.OnPATIENTGROUPMINISTRY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_ISDISABLED", DbType:="Int")>  _
	Public Property R_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._R_ISDISABLED
		End Get
		Set
			If (Me._R_ISDISABLED.Equals(value) = false) Then
				Me.OnR_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._R_ISDISABLED = value
				Me.SendPropertyChanged("R_ISDISABLED")
				Me.OnR_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PATIENTGROUPRANK")>  _
Partial Public Class MAS_PATIENTGROUPRANK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PATIENTGROUPRANK_ID As Integer
	
	Private _PATIENTGROUPRANK_CODE As String
	
	Private _PATIENTGROUPRANK_RANK As String
	
	Private _PATIENTGROUPRANK_ENNAME As String
	
	Private _PATIENTGROUPRANK_ABBRNAME As String
	
	Private _PATIENTGROUPRANK_NOTE As String
	
	Private _PATIENTGROUPRANK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ACTIVEFLAGE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_IDChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_CODEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_RANKChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_RANKChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_NOTEChanged()
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPATIENTGROUPRANK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PATIENTGROUPRANK_ID() As Integer
		Get
			Return Me._PATIENTGROUPRANK_ID
		End Get
		Set
			If ((Me._PATIENTGROUPRANK_ID = value)  _
						= false) Then
				Me.OnPATIENTGROUPRANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_ID = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_ID")
				Me.OnPATIENTGROUPRANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_CODE", DbType:="NVarChar(50)")>  _
	Public Property PATIENTGROUPRANK_CODE() As String
		Get
			Return Me._PATIENTGROUPRANK_CODE
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPRANK_CODE, value) = false) Then
				Me.OnPATIENTGROUPRANK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_CODE = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_CODE")
				Me.OnPATIENTGROUPRANK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_RANK", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUPRANK_RANK() As String
		Get
			Return Me._PATIENTGROUPRANK_RANK
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPRANK_RANK, value) = false) Then
				Me.OnPATIENTGROUPRANK_RANKChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_RANK = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_RANK")
				Me.OnPATIENTGROUPRANK_RANKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property PATIENTGROUPRANK_ENNAME() As String
		Get
			Return Me._PATIENTGROUPRANK_ENNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPRANK_ENNAME, value) = false) Then
				Me.OnPATIENTGROUPRANK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_ENNAME = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_ENNAME")
				Me.OnPATIENTGROUPRANK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_ABBRNAME", DbType:="NVarChar(200)")>  _
	Public Property PATIENTGROUPRANK_ABBRNAME() As String
		Get
			Return Me._PATIENTGROUPRANK_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPRANK_ABBRNAME, value) = false) Then
				Me.OnPATIENTGROUPRANK_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_ABBRNAME = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_ABBRNAME")
				Me.OnPATIENTGROUPRANK_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PATIENTGROUPRANK_NOTE() As String
		Get
			Return Me._PATIENTGROUPRANK_NOTE
		End Get
		Set
			If (String.Equals(Me._PATIENTGROUPRANK_NOTE, value) = false) Then
				Me.OnPATIENTGROUPRANK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_NOTE = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_NOTE")
				Me.OnPATIENTGROUPRANK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATIENTGROUPRANK_ISDISABLED", DbType:="Int")>  _
	Public Property PATIENTGROUPRANK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PATIENTGROUPRANK_ISDISABLED
		End Get
		Set
			If (Me._PATIENTGROUPRANK_ISDISABLED.Equals(value) = false) Then
				Me.OnPATIENTGROUPRANK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PATIENTGROUPRANK_ISDISABLED = value
				Me.SendPropertyChanged("PATIENTGROUPRANK_ISDISABLED")
				Me.OnPATIENTGROUPRANK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAGE", DbType:="Bit")>  _
	Public Property ACTIVEFLAGE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAGE
		End Get
		Set
			If (Me._ACTIVEFLAGE.Equals(value) = false) Then
				Me.OnACTIVEFLAGEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAGE = value
				Me.SendPropertyChanged("ACTIVEFLAGE")
				Me.OnACTIVEFLAGEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PAYMENT")>  _
Partial Public Class MAS_PAYMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PAYMENT_ID As Integer
	
	Private _PAYMENT_CODE As String
	
	Private _PAYMENT_NAME As String
	
	Private _PAYMENT_ENNAME As String
	
	Private _PAYMENT_NOTE As String
	
	Private _PAYMENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _PAYMENT_TYPEKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPAYMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPAYMENT_IDChanged()
    End Sub
    Partial Private Sub OnPAYMENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_CODEChanged()
    End Sub
    Partial Private Sub OnPAYMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnPAYMENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPAYMENT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_NOTEChanged()
    End Sub
    Partial Private Sub OnPAYMENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAYMENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnPAYMENT_TYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAYMENT_TYPEKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PAYMENT_ID() As Integer
		Get
			Return Me._PAYMENT_ID
		End Get
		Set
			If ((Me._PAYMENT_ID = value)  _
						= false) Then
				Me.OnPAYMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_ID = value
				Me.SendPropertyChanged("PAYMENT_ID")
				Me.OnPAYMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_CODE", DbType:="NVarChar(50)")>  _
	Public Property PAYMENT_CODE() As String
		Get
			Return Me._PAYMENT_CODE
		End Get
		Set
			If (String.Equals(Me._PAYMENT_CODE, value) = false) Then
				Me.OnPAYMENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_CODE = value
				Me.SendPropertyChanged("PAYMENT_CODE")
				Me.OnPAYMENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYMENT_NAME() As String
		Get
			Return Me._PAYMENT_NAME
		End Get
		Set
			If (String.Equals(Me._PAYMENT_NAME, value) = false) Then
				Me.OnPAYMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_NAME = value
				Me.SendPropertyChanged("PAYMENT_NAME")
				Me.OnPAYMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYMENT_ENNAME() As String
		Get
			Return Me._PAYMENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._PAYMENT_ENNAME, value) = false) Then
				Me.OnPAYMENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_ENNAME = value
				Me.SendPropertyChanged("PAYMENT_ENNAME")
				Me.OnPAYMENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PAYMENT_NOTE() As String
		Get
			Return Me._PAYMENT_NOTE
		End Get
		Set
			If (String.Equals(Me._PAYMENT_NOTE, value) = false) Then
				Me.OnPAYMENT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_NOTE = value
				Me.SendPropertyChanged("PAYMENT_NOTE")
				Me.OnPAYMENT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_ISDISABLED", DbType:="Int")>  _
	Public Property PAYMENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PAYMENT_ISDISABLED
		End Get
		Set
			If (Me._PAYMENT_ISDISABLED.Equals(value) = false) Then
				Me.OnPAYMENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_ISDISABLED = value
				Me.SendPropertyChanged("PAYMENT_ISDISABLED")
				Me.OnPAYMENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_TYPEKEY", DbType:="Int")>  _
	Public Property PAYMENT_TYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._PAYMENT_TYPEKEY
		End Get
		Set
			If (Me._PAYMENT_TYPEKEY.Equals(value) = false) Then
				Me.OnPAYMENT_TYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_TYPEKEY = value
				Me.SendPropertyChanged("PAYMENT_TYPEKEY")
				Me.OnPAYMENT_TYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PAYOVERRIDE")>  _
Partial Public Class MAS_PAYOVERRIDE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PAYOVERRIDE_ID As Integer
	
	Private _PAYOVERRIDE_CODE As String
	
	Private _PAYOVERRIDE_NAME As String
	
	Private _PAYOVERRIDE_ENNAME As String
	
	Private _PAYOVERRIDE_NOTE As String
	
	Private _PAYOVERRIDE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPAYOVERRIDE_IDChanged()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYOVERRIDE_CODEChanged()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYOVERRIDE_NAMEChanged()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYOVERRIDE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYOVERRIDE_NOTEChanged()
    End Sub
    Partial Private Sub OnPAYOVERRIDE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAYOVERRIDE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PAYOVERRIDE_ID() As Integer
		Get
			Return Me._PAYOVERRIDE_ID
		End Get
		Set
			If ((Me._PAYOVERRIDE_ID = value)  _
						= false) Then
				Me.OnPAYOVERRIDE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_ID = value
				Me.SendPropertyChanged("PAYOVERRIDE_ID")
				Me.OnPAYOVERRIDE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_CODE", DbType:="NVarChar(50)")>  _
	Public Property PAYOVERRIDE_CODE() As String
		Get
			Return Me._PAYOVERRIDE_CODE
		End Get
		Set
			If (String.Equals(Me._PAYOVERRIDE_CODE, value) = false) Then
				Me.OnPAYOVERRIDE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_CODE = value
				Me.SendPropertyChanged("PAYOVERRIDE_CODE")
				Me.OnPAYOVERRIDE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYOVERRIDE_NAME() As String
		Get
			Return Me._PAYOVERRIDE_NAME
		End Get
		Set
			If (String.Equals(Me._PAYOVERRIDE_NAME, value) = false) Then
				Me.OnPAYOVERRIDE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_NAME = value
				Me.SendPropertyChanged("PAYOVERRIDE_NAME")
				Me.OnPAYOVERRIDE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYOVERRIDE_ENNAME() As String
		Get
			Return Me._PAYOVERRIDE_ENNAME
		End Get
		Set
			If (String.Equals(Me._PAYOVERRIDE_ENNAME, value) = false) Then
				Me.OnPAYOVERRIDE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_ENNAME = value
				Me.SendPropertyChanged("PAYOVERRIDE_ENNAME")
				Me.OnPAYOVERRIDE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PAYOVERRIDE_NOTE() As String
		Get
			Return Me._PAYOVERRIDE_NOTE
		End Get
		Set
			If (String.Equals(Me._PAYOVERRIDE_NOTE, value) = false) Then
				Me.OnPAYOVERRIDE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_NOTE = value
				Me.SendPropertyChanged("PAYOVERRIDE_NOTE")
				Me.OnPAYOVERRIDE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYOVERRIDE_ISDISABLED", DbType:="Int")>  _
	Public Property PAYOVERRIDE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PAYOVERRIDE_ISDISABLED
		End Get
		Set
			If (Me._PAYOVERRIDE_ISDISABLED.Equals(value) = false) Then
				Me.OnPAYOVERRIDE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PAYOVERRIDE_ISDISABLED = value
				Me.SendPropertyChanged("PAYOVERRIDE_ISDISABLED")
				Me.OnPAYOVERRIDE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PAYTYPE")>  _
Partial Public Class MAS_PAYTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PAYTYPE_ID As Integer
	
	Private _PAYTYPE_CODE As String
	
	Private _PAYTYPE_NAME As String
	
	Private _PAYTYPE_ENNAME As String
	
	Private _PAYTYPE_NOTE As String
	
	Private _PAYTYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPAYTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPAYTYPE_IDChanged()
    End Sub
    Partial Private Sub OnPAYTYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnPAYTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnPAYTYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYTYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPAYTYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYTYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnPAYTYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAYTYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PAYTYPE_ID() As Integer
		Get
			Return Me._PAYTYPE_ID
		End Get
		Set
			If ((Me._PAYTYPE_ID = value)  _
						= false) Then
				Me.OnPAYTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_ID = value
				Me.SendPropertyChanged("PAYTYPE_ID")
				Me.OnPAYTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property PAYTYPE_CODE() As String
		Get
			Return Me._PAYTYPE_CODE
		End Get
		Set
			If (String.Equals(Me._PAYTYPE_CODE, value) = false) Then
				Me.OnPAYTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_CODE = value
				Me.SendPropertyChanged("PAYTYPE_CODE")
				Me.OnPAYTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYTYPE_NAME() As String
		Get
			Return Me._PAYTYPE_NAME
		End Get
		Set
			If (String.Equals(Me._PAYTYPE_NAME, value) = false) Then
				Me.OnPAYTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_NAME = value
				Me.SendPropertyChanged("PAYTYPE_NAME")
				Me.OnPAYTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAYTYPE_ENNAME() As String
		Get
			Return Me._PAYTYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._PAYTYPE_ENNAME, value) = false) Then
				Me.OnPAYTYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_ENNAME = value
				Me.SendPropertyChanged("PAYTYPE_ENNAME")
				Me.OnPAYTYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PAYTYPE_NOTE() As String
		Get
			Return Me._PAYTYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._PAYTYPE_NOTE, value) = false) Then
				Me.OnPAYTYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_NOTE = value
				Me.SendPropertyChanged("PAYTYPE_NOTE")
				Me.OnPAYTYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYTYPE_ISDISABLED", DbType:="Int")>  _
	Public Property PAYTYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PAYTYPE_ISDISABLED
		End Get
		Set
			If (Me._PAYTYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnPAYTYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PAYTYPE_ISDISABLED = value
				Me.SendPropertyChanged("PAYTYPE_ISDISABLED")
				Me.OnPAYTYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PDEATH")>  _
Partial Public Class MAS_PDEATH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PDEATH_ID As Integer
	
	Private _PDEATH_CODE As System.Nullable(Of Integer)
	
	Private _PDEATH_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPDEATH_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPDEATH_IDChanged()
    End Sub
    Partial Private Sub OnPDEATH_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPDEATH_CODEChanged()
    End Sub
    Partial Private Sub OnPDEATH_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPDEATH_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDEATH_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PDEATH_ID() As Integer
		Get
			Return Me._PDEATH_ID
		End Get
		Set
			If ((Me._PDEATH_ID = value)  _
						= false) Then
				Me.OnPDEATH_IDChanging(value)
				Me.SendPropertyChanging
				Me._PDEATH_ID = value
				Me.SendPropertyChanged("PDEATH_ID")
				Me.OnPDEATH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDEATH_CODE", DbType:="Int")>  _
	Public Property PDEATH_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._PDEATH_CODE
		End Get
		Set
			If (Me._PDEATH_CODE.Equals(value) = false) Then
				Me.OnPDEATH_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PDEATH_CODE = value
				Me.SendPropertyChanged("PDEATH_CODE")
				Me.OnPDEATH_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDEATH_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property PDEATH_DESCRIPTION() As String
		Get
			Return Me._PDEATH_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PDEATH_DESCRIPTION, value) = false) Then
				Me.OnPDEATH_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PDEATH_DESCRIPTION = value
				Me.SendPropertyChanged("PDEATH_DESCRIPTION")
				Me.OnPDEATH_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_POSITIONS")>  _
Partial Public Class MAS_POSITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _POSITIONS_ID As Integer
	
	Private _POSITIONS_CODE As System.Nullable(Of Integer)
	
	Private _POSITIONS_NAME As String
	
	Private _POSITIONS_ENNAME As String
	
	Private _POSITIONS_NOTE As String
	
	Private _POSITIONS_DEPARTMENTKEY As System.Nullable(Of Integer)
	
	Private _POSITIONS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPOSITIONS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPOSITIONS_IDChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITIONS_CODEChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONS_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONS_NOTEChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_DEPARTMENTKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITIONS_DEPARTMENTKEYChanged()
    End Sub
    Partial Private Sub OnPOSITIONS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITIONS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property POSITIONS_ID() As Integer
		Get
			Return Me._POSITIONS_ID
		End Get
		Set
			If ((Me._POSITIONS_ID = value)  _
						= false) Then
				Me.OnPOSITIONS_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_ID = value
				Me.SendPropertyChanged("POSITIONS_ID")
				Me.OnPOSITIONS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_CODE", DbType:="Int")>  _
	Public Property POSITIONS_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._POSITIONS_CODE
		End Get
		Set
			If (Me._POSITIONS_CODE.Equals(value) = false) Then
				Me.OnPOSITIONS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_CODE = value
				Me.SendPropertyChanged("POSITIONS_CODE")
				Me.OnPOSITIONS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_NAME", DbType:="NVarChar(500)")>  _
	Public Property POSITIONS_NAME() As String
		Get
			Return Me._POSITIONS_NAME
		End Get
		Set
			If (String.Equals(Me._POSITIONS_NAME, value) = false) Then
				Me.OnPOSITIONS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_NAME = value
				Me.SendPropertyChanged("POSITIONS_NAME")
				Me.OnPOSITIONS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_ENNAME", DbType:="NVarChar(500)")>  _
	Public Property POSITIONS_ENNAME() As String
		Get
			Return Me._POSITIONS_ENNAME
		End Get
		Set
			If (String.Equals(Me._POSITIONS_ENNAME, value) = false) Then
				Me.OnPOSITIONS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_ENNAME = value
				Me.SendPropertyChanged("POSITIONS_ENNAME")
				Me.OnPOSITIONS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property POSITIONS_NOTE() As String
		Get
			Return Me._POSITIONS_NOTE
		End Get
		Set
			If (String.Equals(Me._POSITIONS_NOTE, value) = false) Then
				Me.OnPOSITIONS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_NOTE = value
				Me.SendPropertyChanged("POSITIONS_NOTE")
				Me.OnPOSITIONS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_DEPARTMENTKEY", DbType:="Int")>  _
	Public Property POSITIONS_DEPARTMENTKEY() As System.Nullable(Of Integer)
		Get
			Return Me._POSITIONS_DEPARTMENTKEY
		End Get
		Set
			If (Me._POSITIONS_DEPARTMENTKEY.Equals(value) = false) Then
				Me.OnPOSITIONS_DEPARTMENTKEYChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_DEPARTMENTKEY = value
				Me.SendPropertyChanged("POSITIONS_DEPARTMENTKEY")
				Me.OnPOSITIONS_DEPARTMENTKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITIONS_ISDISABLED", DbType:="Int")>  _
	Public Property POSITIONS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._POSITIONS_ISDISABLED
		End Get
		Set
			If (Me._POSITIONS_ISDISABLED.Equals(value) = false) Then
				Me.OnPOSITIONS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._POSITIONS_ISDISABLED = value
				Me.SendPropertyChanged("POSITIONS_ISDISABLED")
				Me.OnPOSITIONS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_POSTPONE_APPOINTMENT")>  _
Partial Public Class MAS_POSTPONE_APPOINTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _POSTPONE_APPOINTMENT_ID As Integer
	
	Private _POSTPONE_APPOINTMENT_CODE As String
	
	Private _POSTPONE_APPOINTMENT_NAME As String
	
	Private _POSTPONE_APPOINTMENT_ENNAME As String
	
	Private _POSTPONE_APPOINTMENT_NOTE As String
	
	Private _POSTPONE_APPOINTMENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_IDChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_CODEChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_NOTEChanged()
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSTPONE_APPOINTMENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property POSTPONE_APPOINTMENT_ID() As Integer
		Get
			Return Me._POSTPONE_APPOINTMENT_ID
		End Get
		Set
			If ((Me._POSTPONE_APPOINTMENT_ID = value)  _
						= false) Then
				Me.OnPOSTPONE_APPOINTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_ID = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_ID")
				Me.OnPOSTPONE_APPOINTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE_APPOINTMENT_CODE() As String
		Get
			Return Me._POSTPONE_APPOINTMENT_CODE
		End Get
		Set
			If (String.Equals(Me._POSTPONE_APPOINTMENT_CODE, value) = false) Then
				Me.OnPOSTPONE_APPOINTMENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_CODE = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_CODE")
				Me.OnPOSTPONE_APPOINTMENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE_APPOINTMENT_NAME() As String
		Get
			Return Me._POSTPONE_APPOINTMENT_NAME
		End Get
		Set
			If (String.Equals(Me._POSTPONE_APPOINTMENT_NAME, value) = false) Then
				Me.OnPOSTPONE_APPOINTMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_NAME = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_NAME")
				Me.OnPOSTPONE_APPOINTMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE_APPOINTMENT_ENNAME() As String
		Get
			Return Me._POSTPONE_APPOINTMENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._POSTPONE_APPOINTMENT_ENNAME, value) = false) Then
				Me.OnPOSTPONE_APPOINTMENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_ENNAME = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_ENNAME")
				Me.OnPOSTPONE_APPOINTMENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property POSTPONE_APPOINTMENT_NOTE() As String
		Get
			Return Me._POSTPONE_APPOINTMENT_NOTE
		End Get
		Set
			If (String.Equals(Me._POSTPONE_APPOINTMENT_NOTE, value) = false) Then
				Me.OnPOSTPONE_APPOINTMENT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_NOTE = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_NOTE")
				Me.OnPOSTPONE_APPOINTMENT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSTPONE_APPOINTMENT_ISDISABLED", DbType:="Int")>  _
	Public Property POSTPONE_APPOINTMENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._POSTPONE_APPOINTMENT_ISDISABLED
		End Get
		Set
			If (Me._POSTPONE_APPOINTMENT_ISDISABLED.Equals(value) = false) Then
				Me.OnPOSTPONE_APPOINTMENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._POSTPONE_APPOINTMENT_ISDISABLED = value
				Me.SendPropertyChanged("POSTPONE_APPOINTMENT_ISDISABLED")
				Me.OnPOSTPONE_APPOINTMENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PREGDEATH")>  _
Partial Public Class MAS_PREGDEATH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PREGDEATH_ID As Integer
	
	Private _PREGDEATH_CODE As System.Nullable(Of Integer)
	
	Private _PREGDEATH_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPREGDEATH_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPREGDEATH_IDChanged()
    End Sub
    Partial Private Sub OnPREGDEATH_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREGDEATH_CODEChanged()
    End Sub
    Partial Private Sub OnPREGDEATH_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPREGDEATH_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREGDEATH_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PREGDEATH_ID() As Integer
		Get
			Return Me._PREGDEATH_ID
		End Get
		Set
			If ((Me._PREGDEATH_ID = value)  _
						= false) Then
				Me.OnPREGDEATH_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREGDEATH_ID = value
				Me.SendPropertyChanged("PREGDEATH_ID")
				Me.OnPREGDEATH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREGDEATH_CODE", DbType:="Int")>  _
	Public Property PREGDEATH_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._PREGDEATH_CODE
		End Get
		Set
			If (Me._PREGDEATH_CODE.Equals(value) = false) Then
				Me.OnPREGDEATH_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PREGDEATH_CODE = value
				Me.SendPropertyChanged("PREGDEATH_CODE")
				Me.OnPREGDEATH_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREGDEATH_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property PREGDEATH_DESCRIPTION() As String
		Get
			Return Me._PREGDEATH_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PREGDEATH_DESCRIPTION, value) = false) Then
				Me.OnPREGDEATH_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PREGDEATH_DESCRIPTION = value
				Me.SendPropertyChanged("PREGDEATH_DESCRIPTION")
				Me.OnPREGDEATH_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PRENAME")>  _
Partial Public Class MAS_PRENAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _P_ID As Integer
	
	Private _CODE_USE As String
	
	Private _NAME As String
	
	Private _DESCRIPTION As String
	
	Private _CODE_DEPARMENT As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnP_IDChanged()
    End Sub
    Partial Private Sub OnCODE_USEChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_USEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCODE_DEPARMENTChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DEPARMENTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property P_ID() As Integer
		Get
			Return Me._P_ID
		End Get
		Set
			If ((Me._P_ID = value)  _
						= false) Then
				Me.OnP_IDChanging(value)
				Me.SendPropertyChanging
				Me._P_ID = value
				Me.SendPropertyChanged("P_ID")
				Me.OnP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_USE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_USE() As String
		Get
			Return Me._CODE_USE
		End Get
		Set
			If (String.Equals(Me._CODE_USE, value) = false) Then
				Me.OnCODE_USEChanging(value)
				Me.SendPropertyChanging
				Me._CODE_USE = value
				Me.SendPropertyChanged("CODE_USE")
				Me.OnCODE_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DEPARMENT", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DEPARMENT() As String
		Get
			Return Me._CODE_DEPARMENT
		End Get
		Set
			If (String.Equals(Me._CODE_DEPARMENT, value) = false) Then
				Me.OnCODE_DEPARMENTChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DEPARMENT = value
				Me.SendPropertyChanged("CODE_DEPARMENT")
				Me.OnCODE_DEPARMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCEDURE_MAIN")>  _
Partial Public Class MAS_PROCEDURE_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CODE As String
	
	Private _NAME As String
	
	Private _OTHER_NAME As String
	
	Private _TYPE_SERVICE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_SERVICE_NAME As String
	
	Private _GROUP_SERVICE_ID As System.Nullable(Of Integer)
	
	Private _GROUP_SERVICE_NAME As String
	
	Private _PAY_UNIT As String
	
	Private _GROUP_SERVICE_KBK_ID As System.Nullable(Of Integer)
	
	Private _GROUP_SERVICE_KBK_NAME As String
	
	Private _ICD9_ID As System.Nullable(Of Integer)
	
	Private _ICD9_NAME As String
	
	Private _TYPE_VUCCINE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_VUCCINE_NAME As String
	
	Private _REMARK As String
	
	Private _PRICESERVICE2548 As System.Nullable(Of Decimal)
	
	Private _WIDDENMETHOD_ID As System.Nullable(Of Integer)
	
	Private _WIDDENMETHOD_NAME As String
	
	Private _REASON_ID As System.Nullable(Of Integer)
	
	Private _REASON_NAME As String
	
	Private _ISBANSERVICE As System.Nullable(Of Integer)
	
	Private _ISUSETOOL As System.Nullable(Of Integer)
	
	Private _ISSAVEREPORT As System.Nullable(Of Integer)
	
	Private _ISHSRESPONSE As System.Nullable(Of Integer)
	
	Private _ISUSE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _FK_PROCEDURE As System.Nullable(Of Integer)
	
	Private _SERVICE_KBK_ID As System.Nullable(Of Integer)
	
	Private _SERVICE_KBK_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnOTHER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_SERVICE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SERVICE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_SERVICE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SERVICE_NAMEChanged()
    End Sub
    Partial Private Sub OnGROUP_SERVICE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_SERVICE_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_SERVICE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_SERVICE_NAMEChanged()
    End Sub
    Partial Private Sub OnPAY_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnPAY_UNITChanged()
    End Sub
    Partial Private Sub OnGROUP_SERVICE_KBK_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_SERVICE_KBK_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_SERVICE_KBK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_SERVICE_KBK_NAMEChanged()
    End Sub
    Partial Private Sub OnICD9_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnICD9_IDChanged()
    End Sub
    Partial Private Sub OnICD9_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnICD9_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_VUCCINE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_VUCCINE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_VUCCINE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_VUCCINE_NAMEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnPRICESERVICE2548Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPRICESERVICE2548Changed()
    End Sub
    Partial Private Sub OnWIDDENMETHOD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWIDDENMETHOD_IDChanged()
    End Sub
    Partial Private Sub OnWIDDENMETHOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWIDDENMETHOD_NAMEChanged()
    End Sub
    Partial Private Sub OnREASON_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREASON_IDChanged()
    End Sub
    Partial Private Sub OnREASON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREASON_NAMEChanged()
    End Sub
    Partial Private Sub OnISBANSERVICEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISBANSERVICEChanged()
    End Sub
    Partial Private Sub OnISUSETOOLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISUSETOOLChanged()
    End Sub
    Partial Private Sub OnISSAVEREPORTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISSAVEREPORTChanged()
    End Sub
    Partial Private Sub OnISHSRESPONSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISHSRESPONSEChanged()
    End Sub
    Partial Private Sub OnISUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnISUSEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanged()
    End Sub
    Partial Private Sub OnSERVICE_KBK_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_KBK_IDChanged()
    End Sub
    Partial Private Sub OnSERVICE_KBK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_KBK_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_NAME() As String
		Get
			Return Me._OTHER_NAME
		End Get
		Set
			If (String.Equals(Me._OTHER_NAME, value) = false) Then
				Me.OnOTHER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_NAME = value
				Me.SendPropertyChanged("OTHER_NAME")
				Me.OnOTHER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SERVICE_ID", DbType:="Int")>  _
	Public Property TYPE_SERVICE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SERVICE_ID
		End Get
		Set
			If (Me._TYPE_SERVICE_ID.Equals(value) = false) Then
				Me.OnTYPE_SERVICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SERVICE_ID = value
				Me.SendPropertyChanged("TYPE_SERVICE_ID")
				Me.OnTYPE_SERVICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SERVICE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SERVICE_NAME() As String
		Get
			Return Me._TYPE_SERVICE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_SERVICE_NAME, value) = false) Then
				Me.OnTYPE_SERVICE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SERVICE_NAME = value
				Me.SendPropertyChanged("TYPE_SERVICE_NAME")
				Me.OnTYPE_SERVICE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_SERVICE_ID", DbType:="Int")>  _
	Public Property GROUP_SERVICE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_SERVICE_ID
		End Get
		Set
			If (Me._GROUP_SERVICE_ID.Equals(value) = false) Then
				Me.OnGROUP_SERVICE_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_SERVICE_ID = value
				Me.SendPropertyChanged("GROUP_SERVICE_ID")
				Me.OnGROUP_SERVICE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_SERVICE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUP_SERVICE_NAME() As String
		Get
			Return Me._GROUP_SERVICE_NAME
		End Get
		Set
			If (String.Equals(Me._GROUP_SERVICE_NAME, value) = false) Then
				Me.OnGROUP_SERVICE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_SERVICE_NAME = value
				Me.SendPropertyChanged("GROUP_SERVICE_NAME")
				Me.OnGROUP_SERVICE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property PAY_UNIT() As String
		Get
			Return Me._PAY_UNIT
		End Get
		Set
			If (String.Equals(Me._PAY_UNIT, value) = false) Then
				Me.OnPAY_UNITChanging(value)
				Me.SendPropertyChanging
				Me._PAY_UNIT = value
				Me.SendPropertyChanged("PAY_UNIT")
				Me.OnPAY_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_SERVICE_KBK_ID", DbType:="Int")>  _
	Public Property GROUP_SERVICE_KBK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_SERVICE_KBK_ID
		End Get
		Set
			If (Me._GROUP_SERVICE_KBK_ID.Equals(value) = false) Then
				Me.OnGROUP_SERVICE_KBK_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_SERVICE_KBK_ID = value
				Me.SendPropertyChanged("GROUP_SERVICE_KBK_ID")
				Me.OnGROUP_SERVICE_KBK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_SERVICE_KBK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUP_SERVICE_KBK_NAME() As String
		Get
			Return Me._GROUP_SERVICE_KBK_NAME
		End Get
		Set
			If (String.Equals(Me._GROUP_SERVICE_KBK_NAME, value) = false) Then
				Me.OnGROUP_SERVICE_KBK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_SERVICE_KBK_NAME = value
				Me.SendPropertyChanged("GROUP_SERVICE_KBK_NAME")
				Me.OnGROUP_SERVICE_KBK_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_ID", DbType:="Int")>  _
	Public Property ICD9_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ICD9_ID
		End Get
		Set
			If (Me._ICD9_ID.Equals(value) = false) Then
				Me.OnICD9_IDChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_ID = value
				Me.SendPropertyChanged("ICD9_ID")
				Me.OnICD9_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ICD9_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ICD9_NAME() As String
		Get
			Return Me._ICD9_NAME
		End Get
		Set
			If (String.Equals(Me._ICD9_NAME, value) = false) Then
				Me.OnICD9_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ICD9_NAME = value
				Me.SendPropertyChanged("ICD9_NAME")
				Me.OnICD9_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_VUCCINE_ID", DbType:="Int")>  _
	Public Property TYPE_VUCCINE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_VUCCINE_ID
		End Get
		Set
			If (Me._TYPE_VUCCINE_ID.Equals(value) = false) Then
				Me.OnTYPE_VUCCINE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_VUCCINE_ID = value
				Me.SendPropertyChanged("TYPE_VUCCINE_ID")
				Me.OnTYPE_VUCCINE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_VUCCINE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_VUCCINE_NAME() As String
		Get
			Return Me._TYPE_VUCCINE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_VUCCINE_NAME, value) = false) Then
				Me.OnTYPE_VUCCINE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_VUCCINE_NAME = value
				Me.SendPropertyChanged("TYPE_VUCCINE_NAME")
				Me.OnTYPE_VUCCINE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICESERVICE2548", DbType:="Decimal(18,0)")>  _
	Public Property PRICESERVICE2548() As System.Nullable(Of Decimal)
		Get
			Return Me._PRICESERVICE2548
		End Get
		Set
			If (Me._PRICESERVICE2548.Equals(value) = false) Then
				Me.OnPRICESERVICE2548Changing(value)
				Me.SendPropertyChanging
				Me._PRICESERVICE2548 = value
				Me.SendPropertyChanged("PRICESERVICE2548")
				Me.OnPRICESERVICE2548Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WIDDENMETHOD_ID", DbType:="Int")>  _
	Public Property WIDDENMETHOD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WIDDENMETHOD_ID
		End Get
		Set
			If (Me._WIDDENMETHOD_ID.Equals(value) = false) Then
				Me.OnWIDDENMETHOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._WIDDENMETHOD_ID = value
				Me.SendPropertyChanged("WIDDENMETHOD_ID")
				Me.OnWIDDENMETHOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WIDDENMETHOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WIDDENMETHOD_NAME() As String
		Get
			Return Me._WIDDENMETHOD_NAME
		End Get
		Set
			If (String.Equals(Me._WIDDENMETHOD_NAME, value) = false) Then
				Me.OnWIDDENMETHOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WIDDENMETHOD_NAME = value
				Me.SendPropertyChanged("WIDDENMETHOD_NAME")
				Me.OnWIDDENMETHOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REASON_ID", DbType:="Int")>  _
	Public Property REASON_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REASON_ID
		End Get
		Set
			If (Me._REASON_ID.Equals(value) = false) Then
				Me.OnREASON_IDChanging(value)
				Me.SendPropertyChanging
				Me._REASON_ID = value
				Me.SendPropertyChanged("REASON_ID")
				Me.OnREASON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REASON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property REASON_NAME() As String
		Get
			Return Me._REASON_NAME
		End Get
		Set
			If (String.Equals(Me._REASON_NAME, value) = false) Then
				Me.OnREASON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._REASON_NAME = value
				Me.SendPropertyChanged("REASON_NAME")
				Me.OnREASON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBANSERVICE", DbType:="Int")>  _
	Public Property ISBANSERVICE() As System.Nullable(Of Integer)
		Get
			Return Me._ISBANSERVICE
		End Get
		Set
			If (Me._ISBANSERVICE.Equals(value) = false) Then
				Me.OnISBANSERVICEChanging(value)
				Me.SendPropertyChanging
				Me._ISBANSERVICE = value
				Me.SendPropertyChanged("ISBANSERVICE")
				Me.OnISBANSERVICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISUSETOOL", DbType:="Int")>  _
	Public Property ISUSETOOL() As System.Nullable(Of Integer)
		Get
			Return Me._ISUSETOOL
		End Get
		Set
			If (Me._ISUSETOOL.Equals(value) = false) Then
				Me.OnISUSETOOLChanging(value)
				Me.SendPropertyChanging
				Me._ISUSETOOL = value
				Me.SendPropertyChanged("ISUSETOOL")
				Me.OnISUSETOOLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISSAVEREPORT", DbType:="Int")>  _
	Public Property ISSAVEREPORT() As System.Nullable(Of Integer)
		Get
			Return Me._ISSAVEREPORT
		End Get
		Set
			If (Me._ISSAVEREPORT.Equals(value) = false) Then
				Me.OnISSAVEREPORTChanging(value)
				Me.SendPropertyChanging
				Me._ISSAVEREPORT = value
				Me.SendPropertyChanged("ISSAVEREPORT")
				Me.OnISSAVEREPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISHSRESPONSE", DbType:="Int")>  _
	Public Property ISHSRESPONSE() As System.Nullable(Of Integer)
		Get
			Return Me._ISHSRESPONSE
		End Get
		Set
			If (Me._ISHSRESPONSE.Equals(value) = false) Then
				Me.OnISHSRESPONSEChanging(value)
				Me.SendPropertyChanging
				Me._ISHSRESPONSE = value
				Me.SendPropertyChanged("ISHSRESPONSE")
				Me.OnISHSRESPONSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISUSE", DbType:="Int")>  _
	Public Property ISUSE() As System.Nullable(Of Integer)
		Get
			Return Me._ISUSE
		End Get
		Set
			If (Me._ISUSE.Equals(value) = false) Then
				Me.OnISUSEChanging(value)
				Me.SendPropertyChanging
				Me._ISUSE = value
				Me.SendPropertyChanged("ISUSE")
				Me.OnISUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PROCEDURE", DbType:="Int")>  _
	Public Property FK_PROCEDURE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PROCEDURE
		End Get
		Set
			If (Me._FK_PROCEDURE.Equals(value) = false) Then
				Me.OnFK_PROCEDUREChanging(value)
				Me.SendPropertyChanging
				Me._FK_PROCEDURE = value
				Me.SendPropertyChanged("FK_PROCEDURE")
				Me.OnFK_PROCEDUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_KBK_ID", DbType:="Int")>  _
	Public Property SERVICE_KBK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_KBK_ID
		End Get
		Set
			If (Me._SERVICE_KBK_ID.Equals(value) = false) Then
				Me.OnSERVICE_KBK_IDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_KBK_ID = value
				Me.SendPropertyChanged("SERVICE_KBK_ID")
				Me.OnSERVICE_KBK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_KBK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICE_KBK_NAME() As String
		Get
			Return Me._SERVICE_KBK_NAME
		End Get
		Set
			If (String.Equals(Me._SERVICE_KBK_NAME, value) = false) Then
				Me.OnSERVICE_KBK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_KBK_NAME = value
				Me.SendPropertyChanged("SERVICE_KBK_NAME")
				Me.OnSERVICE_KBK_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCEDURE_SETDETAIL")>  _
Partial Public Class MAS_PROCEDURE_SETDETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROCEDURE_SETDETAIL_ID As Integer
	
	Private _PROCEDURE_SETDETAIL_FK As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SETDETAIL_PROCEDURE_ID As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SETDETAIL_PROCEDURE_NAME As String
	
	Private _PROCEDURE_SETDETAIL_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SETDETAIL_STATUSUSE_NAME As String
	
	Private _PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _PROCEDURE_SETDETAIL_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_FKChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_PROCEDURE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_PROCEDURE_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_PROCEDURE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_PROCEDURE_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SETDETAIL_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROCEDURE_SETDETAIL_ID() As Integer
		Get
			Return Me._PROCEDURE_SETDETAIL_ID
		End Get
		Set
			If ((Me._PROCEDURE_SETDETAIL_ID = value)  _
						= false) Then
				Me.OnPROCEDURE_SETDETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_ID = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_ID")
				Me.OnPROCEDURE_SETDETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_FK", DbType:="Int")>  _
	Public Property PROCEDURE_SETDETAIL_FK() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SETDETAIL_FK
		End Get
		Set
			If (Me._PROCEDURE_SETDETAIL_FK.Equals(value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_FKChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_FK = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_FK")
				Me.OnPROCEDURE_SETDETAIL_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_PROCEDURE_ID", DbType:="Int")>  _
	Public Property PROCEDURE_SETDETAIL_PROCEDURE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SETDETAIL_PROCEDURE_ID
		End Get
		Set
			If (Me._PROCEDURE_SETDETAIL_PROCEDURE_ID.Equals(value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_PROCEDURE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_PROCEDURE_ID = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_PROCEDURE_ID")
				Me.OnPROCEDURE_SETDETAIL_PROCEDURE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_PROCEDURE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SETDETAIL_PROCEDURE_NAME() As String
		Get
			Return Me._PROCEDURE_SETDETAIL_PROCEDURE_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SETDETAIL_PROCEDURE_NAME, value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_PROCEDURE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_PROCEDURE_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_PROCEDURE_NAME")
				Me.OnPROCEDURE_SETDETAIL_PROCEDURE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_STATUSUSE_ID", DbType:="Int")>  _
	Public Property PROCEDURE_SETDETAIL_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SETDETAIL_STATUSUSE_ID
		End Get
		Set
			If (Me._PROCEDURE_SETDETAIL_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_STATUSUSE_ID = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_STATUSUSE_ID")
				Me.OnPROCEDURE_SETDETAIL_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SETDETAIL_STATUSUSE_NAME() As String
		Get
			Return Me._PROCEDURE_SETDETAIL_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SETDETAIL_STATUSUSE_NAME, value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_STATUSUSE_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_STATUSUSE_NAME")
				Me.OnPROCEDURE_SETDETAIL_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_CDGITEMTOPIC_ID")
				Me.OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_CDGITEMTOPIC_NAME")
				Me.OnPROCEDURE_SETDETAIL_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SETDETAIL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SETDETAIL_NAME() As String
		Get
			Return Me._PROCEDURE_SETDETAIL_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SETDETAIL_NAME, value) = false) Then
				Me.OnPROCEDURE_SETDETAIL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SETDETAIL_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SETDETAIL_NAME")
				Me.OnPROCEDURE_SETDETAIL_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROCEDURE_SETMAIN")>  _
Partial Public Class MAS_PROCEDURE_SETMAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROCEDURE_SET_ID As Integer
	
	Private _PROCEDURE_SET_NAME As String
	
	Private _PROCEDURE_SET_STATUSUSE_ID As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SET_STATUSUSE_NAME As String
	
	Private _PROCEDURE_SET_CDGITEMTOPIC_ID As System.Nullable(Of Integer)
	
	Private _PROCEDURE_SET_CDGITEMTOPIC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROCEDURE_SET_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SET_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_STATUSUSE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SET_STATUSUSE_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_STATUSUSE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SET_STATUSUSE_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_CDGITEMTOPIC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCEDURE_SET_CDGITEMTOPIC_IDChanged()
    End Sub
    Partial Private Sub OnPROCEDURE_SET_CDGITEMTOPIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCEDURE_SET_CDGITEMTOPIC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROCEDURE_SET_ID() As Integer
		Get
			Return Me._PROCEDURE_SET_ID
		End Get
		Set
			If ((Me._PROCEDURE_SET_ID = value)  _
						= false) Then
				Me.OnPROCEDURE_SET_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_ID = value
				Me.SendPropertyChanged("PROCEDURE_SET_ID")
				Me.OnPROCEDURE_SET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SET_NAME() As String
		Get
			Return Me._PROCEDURE_SET_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SET_NAME, value) = false) Then
				Me.OnPROCEDURE_SET_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SET_NAME")
				Me.OnPROCEDURE_SET_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_STATUSUSE_ID", DbType:="Int")>  _
	Public Property PROCEDURE_SET_STATUSUSE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SET_STATUSUSE_ID
		End Get
		Set
			If (Me._PROCEDURE_SET_STATUSUSE_ID.Equals(value) = false) Then
				Me.OnPROCEDURE_SET_STATUSUSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_STATUSUSE_ID = value
				Me.SendPropertyChanged("PROCEDURE_SET_STATUSUSE_ID")
				Me.OnPROCEDURE_SET_STATUSUSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_STATUSUSE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SET_STATUSUSE_NAME() As String
		Get
			Return Me._PROCEDURE_SET_STATUSUSE_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SET_STATUSUSE_NAME, value) = false) Then
				Me.OnPROCEDURE_SET_STATUSUSE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_STATUSUSE_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SET_STATUSUSE_NAME")
				Me.OnPROCEDURE_SET_STATUSUSE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_CDGITEMTOPIC_ID", DbType:="Int")>  _
	Public Property PROCEDURE_SET_CDGITEMTOPIC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCEDURE_SET_CDGITEMTOPIC_ID
		End Get
		Set
			If (Me._PROCEDURE_SET_CDGITEMTOPIC_ID.Equals(value) = false) Then
				Me.OnPROCEDURE_SET_CDGITEMTOPIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_CDGITEMTOPIC_ID = value
				Me.SendPropertyChanged("PROCEDURE_SET_CDGITEMTOPIC_ID")
				Me.OnPROCEDURE_SET_CDGITEMTOPIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCEDURE_SET_CDGITEMTOPIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCEDURE_SET_CDGITEMTOPIC_NAME() As String
		Get
			Return Me._PROCEDURE_SET_CDGITEMTOPIC_NAME
		End Get
		Set
			If (String.Equals(Me._PROCEDURE_SET_CDGITEMTOPIC_NAME, value) = false) Then
				Me.OnPROCEDURE_SET_CDGITEMTOPIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCEDURE_SET_CDGITEMTOPIC_NAME = value
				Me.SendPropertyChanged("PROCEDURE_SET_CDGITEMTOPIC_NAME")
				Me.OnPROCEDURE_SET_CDGITEMTOPIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROFESSIONAL")>  _
Partial Public Class MAS_PROFESSIONAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROFESSIONAL_ID As Integer
	
	Private _PROFESSIONAL_PROFESSIONALLEVELKEY As System.Nullable(Of Integer)
	
	Private _PROFESSIONAL_CODE As String
	
	Private _PROFESSIONAL_PROFESSIONNAME As String
	
	Private _PROFESSIONAL_ENNAME As String
	
	Private _PROFESSIONAL_NOTE As String
	
	Private _PROFESSIONAL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROFESSIONAL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROFESSIONAL_IDChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_PROFESSIONALLEVELKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROFESSIONAL_PROFESSIONALLEVELKEYChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONAL_CODEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_PROFESSIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONAL_PROFESSIONNAMEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONAL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONAL_NOTEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONAL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROFESSIONAL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROFESSIONAL_ID() As Integer
		Get
			Return Me._PROFESSIONAL_ID
		End Get
		Set
			If ((Me._PROFESSIONAL_ID = value)  _
						= false) Then
				Me.OnPROFESSIONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_ID = value
				Me.SendPropertyChanged("PROFESSIONAL_ID")
				Me.OnPROFESSIONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_PROFESSIONALLEVELKEY", DbType:="Int")>  _
	Public Property PROFESSIONAL_PROFESSIONALLEVELKEY() As System.Nullable(Of Integer)
		Get
			Return Me._PROFESSIONAL_PROFESSIONALLEVELKEY
		End Get
		Set
			If (Me._PROFESSIONAL_PROFESSIONALLEVELKEY.Equals(value) = false) Then
				Me.OnPROFESSIONAL_PROFESSIONALLEVELKEYChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_PROFESSIONALLEVELKEY = value
				Me.SendPropertyChanged("PROFESSIONAL_PROFESSIONALLEVELKEY")
				Me.OnPROFESSIONAL_PROFESSIONALLEVELKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_CODE", DbType:="NVarChar(50)")>  _
	Public Property PROFESSIONAL_CODE() As String
		Get
			Return Me._PROFESSIONAL_CODE
		End Get
		Set
			If (String.Equals(Me._PROFESSIONAL_CODE, value) = false) Then
				Me.OnPROFESSIONAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_CODE = value
				Me.SendPropertyChanged("PROFESSIONAL_CODE")
				Me.OnPROFESSIONAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_PROFESSIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROFESSIONAL_PROFESSIONNAME() As String
		Get
			Return Me._PROFESSIONAL_PROFESSIONNAME
		End Get
		Set
			If (String.Equals(Me._PROFESSIONAL_PROFESSIONNAME, value) = false) Then
				Me.OnPROFESSIONAL_PROFESSIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_PROFESSIONNAME = value
				Me.SendPropertyChanged("PROFESSIONAL_PROFESSIONNAME")
				Me.OnPROFESSIONAL_PROFESSIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property PROFESSIONAL_ENNAME() As String
		Get
			Return Me._PROFESSIONAL_ENNAME
		End Get
		Set
			If (String.Equals(Me._PROFESSIONAL_ENNAME, value) = false) Then
				Me.OnPROFESSIONAL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_ENNAME = value
				Me.SendPropertyChanged("PROFESSIONAL_ENNAME")
				Me.OnPROFESSIONAL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PROFESSIONAL_NOTE() As String
		Get
			Return Me._PROFESSIONAL_NOTE
		End Get
		Set
			If (String.Equals(Me._PROFESSIONAL_NOTE, value) = false) Then
				Me.OnPROFESSIONAL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_NOTE = value
				Me.SendPropertyChanged("PROFESSIONAL_NOTE")
				Me.OnPROFESSIONAL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONAL_ISDISABLED", DbType:="Int")>  _
	Public Property PROFESSIONAL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PROFESSIONAL_ISDISABLED
		End Get
		Set
			If (Me._PROFESSIONAL_ISDISABLED.Equals(value) = false) Then
				Me.OnPROFESSIONAL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONAL_ISDISABLED = value
				Me.SendPropertyChanged("PROFESSIONAL_ISDISABLED")
				Me.OnPROFESSIONAL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROFESSIONLEVEL")>  _
Partial Public Class MAS_PROFESSIONLEVEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROFESSIONLEVEL_ID As Integer
	
	Private _PROFESSIONLEVEL_PROFESSIONALKEY As System.Nullable(Of Integer)
	
	Private _PROFESSIONLEVEL_CODE As String
	
	Private _PROFESSIONLEVEL_PROFESSIONNAME As String
	
	Private _PROFESSIONLEVEL_ENNAME As String
	
	Private _PROFESSIONLEVEL_NOTE As String
	
	Private _PROFESSIONLEVEL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_IDChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_PROFESSIONALKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_PROFESSIONALKEYChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_CODEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_PROFESSIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_PROFESSIONNAMEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_NOTEChanged()
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROFESSIONLEVEL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROFESSIONLEVEL_ID() As Integer
		Get
			Return Me._PROFESSIONLEVEL_ID
		End Get
		Set
			If ((Me._PROFESSIONLEVEL_ID = value)  _
						= false) Then
				Me.OnPROFESSIONLEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_ID = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_ID")
				Me.OnPROFESSIONLEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_PROFESSIONALKEY", DbType:="Int")>  _
	Public Property PROFESSIONLEVEL_PROFESSIONALKEY() As System.Nullable(Of Integer)
		Get
			Return Me._PROFESSIONLEVEL_PROFESSIONALKEY
		End Get
		Set
			If (Me._PROFESSIONLEVEL_PROFESSIONALKEY.Equals(value) = false) Then
				Me.OnPROFESSIONLEVEL_PROFESSIONALKEYChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_PROFESSIONALKEY = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_PROFESSIONALKEY")
				Me.OnPROFESSIONLEVEL_PROFESSIONALKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_CODE", DbType:="NVarChar(50)")>  _
	Public Property PROFESSIONLEVEL_CODE() As String
		Get
			Return Me._PROFESSIONLEVEL_CODE
		End Get
		Set
			If (String.Equals(Me._PROFESSIONLEVEL_CODE, value) = false) Then
				Me.OnPROFESSIONLEVEL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_CODE = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_CODE")
				Me.OnPROFESSIONLEVEL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_PROFESSIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROFESSIONLEVEL_PROFESSIONNAME() As String
		Get
			Return Me._PROFESSIONLEVEL_PROFESSIONNAME
		End Get
		Set
			If (String.Equals(Me._PROFESSIONLEVEL_PROFESSIONNAME, value) = false) Then
				Me.OnPROFESSIONLEVEL_PROFESSIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_PROFESSIONNAME = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_PROFESSIONNAME")
				Me.OnPROFESSIONLEVEL_PROFESSIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property PROFESSIONLEVEL_ENNAME() As String
		Get
			Return Me._PROFESSIONLEVEL_ENNAME
		End Get
		Set
			If (String.Equals(Me._PROFESSIONLEVEL_ENNAME, value) = false) Then
				Me.OnPROFESSIONLEVEL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_ENNAME = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_ENNAME")
				Me.OnPROFESSIONLEVEL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PROFESSIONLEVEL_NOTE() As String
		Get
			Return Me._PROFESSIONLEVEL_NOTE
		End Get
		Set
			If (String.Equals(Me._PROFESSIONLEVEL_NOTE, value) = false) Then
				Me.OnPROFESSIONLEVEL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_NOTE = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_NOTE")
				Me.OnPROFESSIONLEVEL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROFESSIONLEVEL_ISDISABLED", DbType:="Int")>  _
	Public Property PROFESSIONLEVEL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PROFESSIONLEVEL_ISDISABLED
		End Get
		Set
			If (Me._PROFESSIONLEVEL_ISDISABLED.Equals(value) = false) Then
				Me.OnPROFESSIONLEVEL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PROFESSIONLEVEL_ISDISABLED = value
				Me.SendPropertyChanged("PROFESSIONLEVEL_ISDISABLED")
				Me.OnPROFESSIONLEVEL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROVIDER_HISTORY")>  _
Partial Public Class MAS_PROVIDER_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROVIDER_HISTORY_ID As Integer
	
	Private _PROVIDER_HISTORY_CODE As String
	
	Private _PROVIDER_HISTORY_PROVIDERNAME As String
	
	Private _PROVIDER_HISTORY_ENNAME As String
	
	Private _PROVIDER_HISTORY_NOTE As String
	
	Private _PROVIDER_HISTORY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_IDChanged()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_CODEChanged()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_PROVIDERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_PROVIDERNAMEChanged()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_NOTEChanged()
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROVIDER_HISTORY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROVIDER_HISTORY_ID() As Integer
		Get
			Return Me._PROVIDER_HISTORY_ID
		End Get
		Set
			If ((Me._PROVIDER_HISTORY_ID = value)  _
						= false) Then
				Me.OnPROVIDER_HISTORY_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_ID = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_ID")
				Me.OnPROVIDER_HISTORY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_CODE", DbType:="NVarChar(50)")>  _
	Public Property PROVIDER_HISTORY_CODE() As String
		Get
			Return Me._PROVIDER_HISTORY_CODE
		End Get
		Set
			If (String.Equals(Me._PROVIDER_HISTORY_CODE, value) = false) Then
				Me.OnPROVIDER_HISTORY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_CODE = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_CODE")
				Me.OnPROVIDER_HISTORY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_PROVIDERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROVIDER_HISTORY_PROVIDERNAME() As String
		Get
			Return Me._PROVIDER_HISTORY_PROVIDERNAME
		End Get
		Set
			If (String.Equals(Me._PROVIDER_HISTORY_PROVIDERNAME, value) = false) Then
				Me.OnPROVIDER_HISTORY_PROVIDERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_PROVIDERNAME = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_PROVIDERNAME")
				Me.OnPROVIDER_HISTORY_PROVIDERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROVIDER_HISTORY_ENNAME() As String
		Get
			Return Me._PROVIDER_HISTORY_ENNAME
		End Get
		Set
			If (String.Equals(Me._PROVIDER_HISTORY_ENNAME, value) = false) Then
				Me.OnPROVIDER_HISTORY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_ENNAME = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_ENNAME")
				Me.OnPROVIDER_HISTORY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PROVIDER_HISTORY_NOTE() As String
		Get
			Return Me._PROVIDER_HISTORY_NOTE
		End Get
		Set
			If (String.Equals(Me._PROVIDER_HISTORY_NOTE, value) = false) Then
				Me.OnPROVIDER_HISTORY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_NOTE = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_NOTE")
				Me.OnPROVIDER_HISTORY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER_HISTORY_ISDISABLED", DbType:="Int")>  _
	Public Property PROVIDER_HISTORY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._PROVIDER_HISTORY_ISDISABLED
		End Get
		Set
			If (Me._PROVIDER_HISTORY_ISDISABLED.Equals(value) = false) Then
				Me.OnPROVIDER_HISTORY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER_HISTORY_ISDISABLED = value
				Me.SendPropertyChanged("PROVIDER_HISTORY_ISDISABLED")
				Me.OnPROVIDER_HISTORY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROVIDERTYPE")>  _
Partial Public Class MAS_PROVIDERTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROVIDERTYPE_ID As Integer
	
	Private _PROVIDERTYPE_CODE As String
	
	Private _PROVIDERTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROVIDERTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROVIDERTYPE_IDChanged()
    End Sub
    Partial Private Sub OnPROVIDERTYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDERTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnPROVIDERTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDERTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDERTYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROVIDERTYPE_ID() As Integer
		Get
			Return Me._PROVIDERTYPE_ID
		End Get
		Set
			If ((Me._PROVIDERTYPE_ID = value)  _
						= false) Then
				Me.OnPROVIDERTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDERTYPE_ID = value
				Me.SendPropertyChanged("PROVIDERTYPE_ID")
				Me.OnPROVIDERTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDERTYPE_CODE", DbType:="VarChar(50)")>  _
	Public Property PROVIDERTYPE_CODE() As String
		Get
			Return Me._PROVIDERTYPE_CODE
		End Get
		Set
			If (String.Equals(Me._PROVIDERTYPE_CODE, value) = false) Then
				Me.OnPROVIDERTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDERTYPE_CODE = value
				Me.SendPropertyChanged("PROVIDERTYPE_CODE")
				Me.OnPROVIDERTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDERTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property PROVIDERTYPE_DESCRIPTION() As String
		Get
			Return Me._PROVIDERTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PROVIDERTYPE_DESCRIPTION, value) = false) Then
				Me.OnPROVIDERTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDERTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("PROVIDERTYPE_DESCRIPTION")
				Me.OnPROVIDERTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROVINCE")>  _
Partial Public Class MAS_PROVINCE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PROVINCE_CODE As String
	
	Private _PROVINCE_NAME As String
	
	Private _REGION_ID As System.Nullable(Of Integer)
	
	Private _ZONE_ID As System.Nullable(Of Integer)
	
	Private _ZONE_ID2 As System.Nullable(Of Integer)
	
	Private _ZONE_ID3 As System.Nullable(Of Integer)
	
	Private _ZONE_ID4 As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _FSC_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPROVINCE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCE_CODEChanged()
    End Sub
    Partial Private Sub OnPROVINCE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCE_NAMEChanged()
    End Sub
    Partial Private Sub OnREGION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREGION_IDChanged()
    End Sub
    Partial Private Sub OnZONE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZONE_IDChanged()
    End Sub
    Partial Private Sub OnZONE_ID2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZONE_ID2Changed()
    End Sub
    Partial Private Sub OnZONE_ID3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZONE_ID3Changed()
    End Sub
    Partial Private Sub OnZONE_ID4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZONE_ID4Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnFSC_IDChanging(value As String)
    End Sub
    Partial Private Sub OnFSC_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_CODE", DbType:="VarChar(MAX)")>  _
	Public Property PROVINCE_CODE() As String
		Get
			Return Me._PROVINCE_CODE
		End Get
		Set
			If (String.Equals(Me._PROVINCE_CODE, value) = false) Then
				Me.OnPROVINCE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_CODE = value
				Me.SendPropertyChanged("PROVINCE_CODE")
				Me.OnPROVINCE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_NAME", DbType:="VarChar(MAX)")>  _
	Public Property PROVINCE_NAME() As String
		Get
			Return Me._PROVINCE_NAME
		End Get
		Set
			If (String.Equals(Me._PROVINCE_NAME, value) = false) Then
				Me.OnPROVINCE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_NAME = value
				Me.SendPropertyChanged("PROVINCE_NAME")
				Me.OnPROVINCE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_ID", DbType:="Int")>  _
	Public Property REGION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REGION_ID
		End Get
		Set
			If (Me._REGION_ID.Equals(value) = false) Then
				Me.OnREGION_IDChanging(value)
				Me.SendPropertyChanging
				Me._REGION_ID = value
				Me.SendPropertyChanged("REGION_ID")
				Me.OnREGION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZONE_ID", DbType:="Int")>  _
	Public Property ZONE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ZONE_ID
		End Get
		Set
			If (Me._ZONE_ID.Equals(value) = false) Then
				Me.OnZONE_IDChanging(value)
				Me.SendPropertyChanging
				Me._ZONE_ID = value
				Me.SendPropertyChanged("ZONE_ID")
				Me.OnZONE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZONE_ID2", DbType:="Int")>  _
	Public Property ZONE_ID2() As System.Nullable(Of Integer)
		Get
			Return Me._ZONE_ID2
		End Get
		Set
			If (Me._ZONE_ID2.Equals(value) = false) Then
				Me.OnZONE_ID2Changing(value)
				Me.SendPropertyChanging
				Me._ZONE_ID2 = value
				Me.SendPropertyChanged("ZONE_ID2")
				Me.OnZONE_ID2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZONE_ID3", DbType:="Int")>  _
	Public Property ZONE_ID3() As System.Nullable(Of Integer)
		Get
			Return Me._ZONE_ID3
		End Get
		Set
			If (Me._ZONE_ID3.Equals(value) = false) Then
				Me.OnZONE_ID3Changing(value)
				Me.SendPropertyChanging
				Me._ZONE_ID3 = value
				Me.SendPropertyChanged("ZONE_ID3")
				Me.OnZONE_ID3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZONE_ID4", DbType:="Int")>  _
	Public Property ZONE_ID4() As System.Nullable(Of Integer)
		Get
			Return Me._ZONE_ID4
		End Get
		Set
			If (Me._ZONE_ID4.Equals(value) = false) Then
				Me.OnZONE_ID4Changing(value)
				Me.SendPropertyChanging
				Me._ZONE_ID4 = value
				Me.SendPropertyChanged("ZONE_ID4")
				Me.OnZONE_ID4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FSC_ID", DbType:="VarChar(50)")>  _
	Public Property FSC_ID() As String
		Get
			Return Me._FSC_ID
		End Get
		Set
			If (String.Equals(Me._FSC_ID, value) = false) Then
				Me.OnFSC_IDChanging(value)
				Me.SendPropertyChanging
				Me._FSC_ID = value
				Me.SendPropertyChanged("FSC_ID")
				Me.OnFSC_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTION")>  _
Partial Public Class MAS_QUESTION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTION_ID As Integer
	
	Private _QUESTION_CODE As String
	
	Private _QUESTION_TEMPLATE As String
	
	Private _QUESTION_ISIMPOSTRANT As System.Nullable(Of Integer)
	
	Private _QUESTION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _QUESTION_ORDERNUM As System.Nullable(Of Integer)
	
	Private _QUESTION_ISTRUEFALSE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTION_IDChanged()
    End Sub
    Partial Private Sub OnQUESTION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_CODEChanged()
    End Sub
    Partial Private Sub OnQUESTION_TEMPLATEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_TEMPLATEChanged()
    End Sub
    Partial Private Sub OnQUESTION_ISIMPOSTRANTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_ISIMPOSTRANTChanged()
    End Sub
    Partial Private Sub OnQUESTION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnQUESTION_ORDERNUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_ORDERNUMChanged()
    End Sub
    Partial Private Sub OnQUESTION_ISTRUEFALSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_ISTRUEFALSEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTION_ID() As Integer
		Get
			Return Me._QUESTION_ID
		End Get
		Set
			If ((Me._QUESTION_ID = value)  _
						= false) Then
				Me.OnQUESTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ID = value
				Me.SendPropertyChanged("QUESTION_ID")
				Me.OnQUESTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_CODE", DbType:="NVarChar(50)")>  _
	Public Property QUESTION_CODE() As String
		Get
			Return Me._QUESTION_CODE
		End Get
		Set
			If (String.Equals(Me._QUESTION_CODE, value) = false) Then
				Me.OnQUESTION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_CODE = value
				Me.SendPropertyChanged("QUESTION_CODE")
				Me.OnQUESTION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TEMPLATE", DbType:="NVarChar(50)")>  _
	Public Property QUESTION_TEMPLATE() As String
		Get
			Return Me._QUESTION_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._QUESTION_TEMPLATE, value) = false) Then
				Me.OnQUESTION_TEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TEMPLATE = value
				Me.SendPropertyChanged("QUESTION_TEMPLATE")
				Me.OnQUESTION_TEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ISIMPOSTRANT", DbType:="Int")>  _
	Public Property QUESTION_ISIMPOSTRANT() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_ISIMPOSTRANT
		End Get
		Set
			If (Me._QUESTION_ISIMPOSTRANT.Equals(value) = false) Then
				Me.OnQUESTION_ISIMPOSTRANTChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ISIMPOSTRANT = value
				Me.SendPropertyChanged("QUESTION_ISIMPOSTRANT")
				Me.OnQUESTION_ISIMPOSTRANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ISDISABLED", DbType:="Int")>  _
	Public Property QUESTION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_ISDISABLED
		End Get
		Set
			If (Me._QUESTION_ISDISABLED.Equals(value) = false) Then
				Me.OnQUESTION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ISDISABLED = value
				Me.SendPropertyChanged("QUESTION_ISDISABLED")
				Me.OnQUESTION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ORDERNUM", DbType:="Int")>  _
	Public Property QUESTION_ORDERNUM() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_ORDERNUM
		End Get
		Set
			If (Me._QUESTION_ORDERNUM.Equals(value) = false) Then
				Me.OnQUESTION_ORDERNUMChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ORDERNUM = value
				Me.SendPropertyChanged("QUESTION_ORDERNUM")
				Me.OnQUESTION_ORDERNUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ISTRUEFALSE", DbType:="Int")>  _
	Public Property QUESTION_ISTRUEFALSE() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_ISTRUEFALSE
		End Get
		Set
			If (Me._QUESTION_ISTRUEFALSE.Equals(value) = false) Then
				Me.OnQUESTION_ISTRUEFALSEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ISTRUEFALSE = value
				Me.SendPropertyChanged("QUESTION_ISTRUEFALSE")
				Me.OnQUESTION_ISTRUEFALSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTION_DRUG")>  _
Partial Public Class MAS_QUESTION_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTION_DRUG_ID As Integer
	
	Private _QUESTION_DRUG_CODE As String
	
	Private _QUESTION_DRUG_NAME As String
	
	Private _QUESTION_DRUG_ENNAME As String
	
	Private _QUESTION_DRUG_NOTE As String
	
	Private _QUESTION_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTION_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_DRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnQUESTION_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTION_DRUG_ID() As Integer
		Get
			Return Me._QUESTION_DRUG_ID
		End Get
		Set
			If ((Me._QUESTION_DRUG_ID = value)  _
						= false) Then
				Me.OnQUESTION_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_ID = value
				Me.SendPropertyChanged("QUESTION_DRUG_ID")
				Me.OnQUESTION_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_DRUG_CODE() As String
		Get
			Return Me._QUESTION_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._QUESTION_DRUG_CODE, value) = false) Then
				Me.OnQUESTION_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_CODE = value
				Me.SendPropertyChanged("QUESTION_DRUG_CODE")
				Me.OnQUESTION_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_DRUG_NAME() As String
		Get
			Return Me._QUESTION_DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._QUESTION_DRUG_NAME, value) = false) Then
				Me.OnQUESTION_DRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_NAME = value
				Me.SendPropertyChanged("QUESTION_DRUG_NAME")
				Me.OnQUESTION_DRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_DRUG_ENNAME() As String
		Get
			Return Me._QUESTION_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._QUESTION_DRUG_ENNAME, value) = false) Then
				Me.OnQUESTION_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_ENNAME = value
				Me.SendPropertyChanged("QUESTION_DRUG_ENNAME")
				Me.OnQUESTION_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_DRUG_NOTE() As String
		Get
			Return Me._QUESTION_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._QUESTION_DRUG_NOTE, value) = false) Then
				Me.OnQUESTION_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_NOTE = value
				Me.SendPropertyChanged("QUESTION_DRUG_NOTE")
				Me.OnQUESTION_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property QUESTION_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_DRUG_ISDISABLED
		End Get
		Set
			If (Me._QUESTION_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnQUESTION_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("QUESTION_DRUG_ISDISABLED")
				Me.OnQUESTION_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTION_SET")>  _
Partial Public Class MAS_QUESTION_SET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTION_ID As Integer
	
	Private _QUESTION_NAME As String
	
	Private _QUESTION_IMPORTANT As System.Nullable(Of Boolean)
	
	Private _QUESTION_NOTWORK As System.Nullable(Of Boolean)
	
	Private _FK_QUESTIONTEMPLATE As System.Nullable(Of Integer)
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTION_IDChanged()
    End Sub
    Partial Private Sub OnQUESTION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_NAMEChanged()
    End Sub
    Partial Private Sub OnQUESTION_IMPORTANTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnQUESTION_IMPORTANTChanged()
    End Sub
    Partial Private Sub OnQUESTION_NOTWORKChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnQUESTION_NOTWORKChanged()
    End Sub
    Partial Private Sub OnFK_QUESTIONTEMPLATEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_QUESTIONTEMPLATEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTION_ID() As Integer
		Get
			Return Me._QUESTION_ID
		End Get
		Set
			If ((Me._QUESTION_ID = value)  _
						= false) Then
				Me.OnQUESTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_ID = value
				Me.SendPropertyChanged("QUESTION_ID")
				Me.OnQUESTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_NAME() As String
		Get
			Return Me._QUESTION_NAME
		End Get
		Set
			If (String.Equals(Me._QUESTION_NAME, value) = false) Then
				Me.OnQUESTION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_NAME = value
				Me.SendPropertyChanged("QUESTION_NAME")
				Me.OnQUESTION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_IMPORTANT", DbType:="Bit")>  _
	Public Property QUESTION_IMPORTANT() As System.Nullable(Of Boolean)
		Get
			Return Me._QUESTION_IMPORTANT
		End Get
		Set
			If (Me._QUESTION_IMPORTANT.Equals(value) = false) Then
				Me.OnQUESTION_IMPORTANTChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_IMPORTANT = value
				Me.SendPropertyChanged("QUESTION_IMPORTANT")
				Me.OnQUESTION_IMPORTANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_NOTWORK", DbType:="Bit")>  _
	Public Property QUESTION_NOTWORK() As System.Nullable(Of Boolean)
		Get
			Return Me._QUESTION_NOTWORK
		End Get
		Set
			If (Me._QUESTION_NOTWORK.Equals(value) = false) Then
				Me.OnQUESTION_NOTWORKChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_NOTWORK = value
				Me.SendPropertyChanged("QUESTION_NOTWORK")
				Me.OnQUESTION_NOTWORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_QUESTIONTEMPLATE", DbType:="Int")>  _
	Public Property FK_QUESTIONTEMPLATE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_QUESTIONTEMPLATE
		End Get
		Set
			If (Me._FK_QUESTIONTEMPLATE.Equals(value) = false) Then
				Me.OnFK_QUESTIONTEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._FK_QUESTIONTEMPLATE = value
				Me.SendPropertyChanged("FK_QUESTIONTEMPLATE")
				Me.OnFK_QUESTIONTEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTION_TYPE")>  _
Partial Public Class MAS_QUESTION_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTION_TYPE_ID As Integer
	
	Private _QUESTION_TYPE_CODE As String
	
	Private _QUESTION_TYPE_NAME As String
	
	Private _QUESTION_TYPE_ENNAME As String
	
	Private _QUESTION_TYPE_NOTE As String
	
	Private _QUESTION_TYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_TYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTION_TYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnQUESTION_TYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTION_TYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTION_TYPE_ID() As Integer
		Get
			Return Me._QUESTION_TYPE_ID
		End Get
		Set
			If ((Me._QUESTION_TYPE_ID = value)  _
						= false) Then
				Me.OnQUESTION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_ID = value
				Me.SendPropertyChanged("QUESTION_TYPE_ID")
				Me.OnQUESTION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_TYPE_CODE() As String
		Get
			Return Me._QUESTION_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._QUESTION_TYPE_CODE, value) = false) Then
				Me.OnQUESTION_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_CODE = value
				Me.SendPropertyChanged("QUESTION_TYPE_CODE")
				Me.OnQUESTION_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_TYPE_NAME() As String
		Get
			Return Me._QUESTION_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._QUESTION_TYPE_NAME, value) = false) Then
				Me.OnQUESTION_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_NAME = value
				Me.SendPropertyChanged("QUESTION_TYPE_NAME")
				Me.OnQUESTION_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_TYPE_ENNAME() As String
		Get
			Return Me._QUESTION_TYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._QUESTION_TYPE_ENNAME, value) = false) Then
				Me.OnQUESTION_TYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_ENNAME = value
				Me.SendPropertyChanged("QUESTION_TYPE_ENNAME")
				Me.OnQUESTION_TYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTION_TYPE_NOTE() As String
		Get
			Return Me._QUESTION_TYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._QUESTION_TYPE_NOTE, value) = false) Then
				Me.OnQUESTION_TYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_NOTE = value
				Me.SendPropertyChanged("QUESTION_TYPE_NOTE")
				Me.OnQUESTION_TYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTION_TYPE_ISDISABLED", DbType:="Int")>  _
	Public Property QUESTION_TYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTION_TYPE_ISDISABLED
		End Get
		Set
			If (Me._QUESTION_TYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnQUESTION_TYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTION_TYPE_ISDISABLED = value
				Me.SendPropertyChanged("QUESTION_TYPE_ISDISABLED")
				Me.OnQUESTION_TYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTIONALLERGIC")>  _
Partial Public Class MAS_QUESTIONALLERGIC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTIONALLERGIC_ID As Integer
	
	Private _QUESTIONALLERGIC_QUESTIONNAME As String
	
	Private _QUESTIONALLERGIC_ORDERNUM As System.Nullable(Of Integer)
	
	Private _QUESTIONALLERGIC_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_IDChanged()
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_QUESTIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_QUESTIONNAMEChanged()
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_ORDERNUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_ORDERNUMChanged()
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTIONALLERGIC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONALLERGIC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTIONALLERGIC_ID() As Integer
		Get
			Return Me._QUESTIONALLERGIC_ID
		End Get
		Set
			If ((Me._QUESTIONALLERGIC_ID = value)  _
						= false) Then
				Me.OnQUESTIONALLERGIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONALLERGIC_ID = value
				Me.SendPropertyChanged("QUESTIONALLERGIC_ID")
				Me.OnQUESTIONALLERGIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONALLERGIC_QUESTIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONALLERGIC_QUESTIONNAME() As String
		Get
			Return Me._QUESTIONALLERGIC_QUESTIONNAME
		End Get
		Set
			If (String.Equals(Me._QUESTIONALLERGIC_QUESTIONNAME, value) = false) Then
				Me.OnQUESTIONALLERGIC_QUESTIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONALLERGIC_QUESTIONNAME = value
				Me.SendPropertyChanged("QUESTIONALLERGIC_QUESTIONNAME")
				Me.OnQUESTIONALLERGIC_QUESTIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONALLERGIC_ORDERNUM", DbType:="Int")>  _
	Public Property QUESTIONALLERGIC_ORDERNUM() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTIONALLERGIC_ORDERNUM
		End Get
		Set
			If (Me._QUESTIONALLERGIC_ORDERNUM.Equals(value) = false) Then
				Me.OnQUESTIONALLERGIC_ORDERNUMChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONALLERGIC_ORDERNUM = value
				Me.SendPropertyChanged("QUESTIONALLERGIC_ORDERNUM")
				Me.OnQUESTIONALLERGIC_ORDERNUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONALLERGIC_ISDISABLED", DbType:="Int")>  _
	Public Property QUESTIONALLERGIC_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTIONALLERGIC_ISDISABLED
		End Get
		Set
			If (Me._QUESTIONALLERGIC_ISDISABLED.Equals(value) = false) Then
				Me.OnQUESTIONALLERGIC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONALLERGIC_ISDISABLED = value
				Me.SendPropertyChanged("QUESTIONALLERGIC_ISDISABLED")
				Me.OnQUESTIONALLERGIC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_QUESTIONTEMPLATE")>  _
Partial Public Class MAS_QUESTIONTEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QUESTIONTEMPLATE_ID As Integer
	
	Private _QUESTIONTEMPLATE_SYSTEMID As System.Nullable(Of Integer)
	
	Private _QUESTIONTEMPLATE_SYSTEMNAME As String
	
	Private _QUESTIONTEMPLATE_PASS As String
	
	Private _QUESTIONTEMPLATE_SETTEMPLATEID As System.Nullable(Of Integer)
	
	Private _QUESTIONTEMPLATE_SETTEMPLATENAME As String
	
	Private _QUESTIONTEMPLATE_SET_DUSE As System.Nullable(Of Boolean)
	
	Private _QUESTIONTEMPLATE_SET_NDUSE As System.Nullable(Of Boolean)
	
	Private _QUESTIONTEMPLATE_ANOTHERNAME As String
	
	Private _QUESTIONTEMPLATE_REMARK As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _QUESTIONTEMPLATE_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SYSTEMIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SYSTEMIDChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SYSTEMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SYSTEMNAMEChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_PASSChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_PASSChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SETTEMPLATEIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SETTEMPLATEIDChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SETTEMPLATENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SETTEMPLATENAMEChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SET_DUSEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SET_DUSEChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SET_NDUSEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_SET_NDUSEChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_ANOTHERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_ANOTHERNAMEChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_REMARKChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnQUESTIONTEMPLATE_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QUESTIONTEMPLATE_ID() As Integer
		Get
			Return Me._QUESTIONTEMPLATE_ID
		End Get
		Set
			If ((Me._QUESTIONTEMPLATE_ID = value)  _
						= false) Then
				Me.OnQUESTIONTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_ID = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_ID")
				Me.OnQUESTIONTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SYSTEMID", DbType:="Int")>  _
	Public Property QUESTIONTEMPLATE_SYSTEMID() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTIONTEMPLATE_SYSTEMID
		End Get
		Set
			If (Me._QUESTIONTEMPLATE_SYSTEMID.Equals(value) = false) Then
				Me.OnQUESTIONTEMPLATE_SYSTEMIDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SYSTEMID = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SYSTEMID")
				Me.OnQUESTIONTEMPLATE_SYSTEMIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SYSTEMNAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_SYSTEMNAME() As String
		Get
			Return Me._QUESTIONTEMPLATE_SYSTEMNAME
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_SYSTEMNAME, value) = false) Then
				Me.OnQUESTIONTEMPLATE_SYSTEMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SYSTEMNAME = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SYSTEMNAME")
				Me.OnQUESTIONTEMPLATE_SYSTEMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_PASS", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_PASS() As String
		Get
			Return Me._QUESTIONTEMPLATE_PASS
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_PASS, value) = false) Then
				Me.OnQUESTIONTEMPLATE_PASSChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_PASS = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_PASS")
				Me.OnQUESTIONTEMPLATE_PASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SETTEMPLATEID", DbType:="Int")>  _
	Public Property QUESTIONTEMPLATE_SETTEMPLATEID() As System.Nullable(Of Integer)
		Get
			Return Me._QUESTIONTEMPLATE_SETTEMPLATEID
		End Get
		Set
			If (Me._QUESTIONTEMPLATE_SETTEMPLATEID.Equals(value) = false) Then
				Me.OnQUESTIONTEMPLATE_SETTEMPLATEIDChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SETTEMPLATEID = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SETTEMPLATEID")
				Me.OnQUESTIONTEMPLATE_SETTEMPLATEIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SETTEMPLATENAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_SETTEMPLATENAME() As String
		Get
			Return Me._QUESTIONTEMPLATE_SETTEMPLATENAME
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_SETTEMPLATENAME, value) = false) Then
				Me.OnQUESTIONTEMPLATE_SETTEMPLATENAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SETTEMPLATENAME = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SETTEMPLATENAME")
				Me.OnQUESTIONTEMPLATE_SETTEMPLATENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SET_DUSE", DbType:="Bit")>  _
	Public Property QUESTIONTEMPLATE_SET_DUSE() As System.Nullable(Of Boolean)
		Get
			Return Me._QUESTIONTEMPLATE_SET_DUSE
		End Get
		Set
			If (Me._QUESTIONTEMPLATE_SET_DUSE.Equals(value) = false) Then
				Me.OnQUESTIONTEMPLATE_SET_DUSEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SET_DUSE = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SET_DUSE")
				Me.OnQUESTIONTEMPLATE_SET_DUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_SET_NDUSE", DbType:="Bit")>  _
	Public Property QUESTIONTEMPLATE_SET_NDUSE() As System.Nullable(Of Boolean)
		Get
			Return Me._QUESTIONTEMPLATE_SET_NDUSE
		End Get
		Set
			If (Me._QUESTIONTEMPLATE_SET_NDUSE.Equals(value) = false) Then
				Me.OnQUESTIONTEMPLATE_SET_NDUSEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_SET_NDUSE = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_SET_NDUSE")
				Me.OnQUESTIONTEMPLATE_SET_NDUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_ANOTHERNAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_ANOTHERNAME() As String
		Get
			Return Me._QUESTIONTEMPLATE_ANOTHERNAME
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_ANOTHERNAME, value) = false) Then
				Me.OnQUESTIONTEMPLATE_ANOTHERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_ANOTHERNAME = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_ANOTHERNAME")
				Me.OnQUESTIONTEMPLATE_ANOTHERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_REMARK() As String
		Get
			Return Me._QUESTIONTEMPLATE_REMARK
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_REMARK, value) = false) Then
				Me.OnQUESTIONTEMPLATE_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_REMARK = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_REMARK")
				Me.OnQUESTIONTEMPLATE_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUESTIONTEMPLATE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property QUESTIONTEMPLATE_NAME() As String
		Get
			Return Me._QUESTIONTEMPLATE_NAME
		End Get
		Set
			If (String.Equals(Me._QUESTIONTEMPLATE_NAME, value) = false) Then
				Me.OnQUESTIONTEMPLATE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._QUESTIONTEMPLATE_NAME = value
				Me.SendPropertyChanged("QUESTIONTEMPLATE_NAME")
				Me.OnQUESTIONTEMPLATE_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RACE")>  _
Partial Public Class MAS_RACE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _R_ID As Integer
	
	Private _R_CODE As System.Nullable(Of Integer)
	
	Private _R_NAME As String
	
	Private _R_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnR_IDChanged()
    End Sub
    Partial Private Sub OnR_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnR_CODEChanged()
    End Sub
    Partial Private Sub OnR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnR_NAMEChanged()
    End Sub
    Partial Private Sub OnR_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnR_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property R_ID() As Integer
		Get
			Return Me._R_ID
		End Get
		Set
			If ((Me._R_ID = value)  _
						= false) Then
				Me.OnR_IDChanging(value)
				Me.SendPropertyChanging
				Me._R_ID = value
				Me.SendPropertyChanged("R_ID")
				Me.OnR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_CODE", DbType:="Int")>  _
	Public Property R_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._R_CODE
		End Get
		Set
			If (Me._R_CODE.Equals(value) = false) Then
				Me.OnR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._R_CODE = value
				Me.SendPropertyChanged("R_CODE")
				Me.OnR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_NAME", DbType:="VarChar(MAX)")>  _
	Public Property R_NAME() As String
		Get
			Return Me._R_NAME
		End Get
		Set
			If (String.Equals(Me._R_NAME, value) = false) Then
				Me.OnR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._R_NAME = value
				Me.SendPropertyChanged("R_NAME")
				Me.OnR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_NOTE", DbType:="VarChar(MAX)")>  _
	Public Property R_NOTE() As String
		Get
			Return Me._R_NOTE
		End Get
		Set
			If (String.Equals(Me._R_NOTE, value) = false) Then
				Me.OnR_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._R_NOTE = value
				Me.SendPropertyChanged("R_NOTE")
				Me.OnR_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RANK")>  _
Partial Public Class MAS_RANK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RANK_ID As Integer
	
	Private _RANK_RANKKEY As System.Nullable(Of Integer)
	
	Private _RANK_CODE As String
	
	Private _RANK_RANKNAME As String
	
	Private _RANK_SHORTNAME As String
	
	Private _RANK_ENNAME As String
	
	Private _RANK_ENSHORTNAME As String
	
	Private _RANK_MILITARYKEY As System.Nullable(Of Integer)
	
	Private _RANK_NOTE As String
	
	Private _RANK_ISDISABLED As System.Nullable(Of Integer)
	
	Private _RANK_ISCOMMISSION As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRANK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRANK_IDChanged()
    End Sub
    Partial Private Sub OnRANK_RANKKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRANK_RANKKEYChanged()
    End Sub
    Partial Private Sub OnRANK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_CODEChanged()
    End Sub
    Partial Private Sub OnRANK_RANKNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_RANKNAMEChanged()
    End Sub
    Partial Private Sub OnRANK_SHORTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_SHORTNAMEChanged()
    End Sub
    Partial Private Sub OnRANK_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRANK_ENSHORTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_ENSHORTNAMEChanged()
    End Sub
    Partial Private Sub OnRANK_MILITARYKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRANK_MILITARYKEYChanged()
    End Sub
    Partial Private Sub OnRANK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRANK_NOTEChanged()
    End Sub
    Partial Private Sub OnRANK_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRANK_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnRANK_ISCOMMISSIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRANK_ISCOMMISSIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RANK_ID() As Integer
		Get
			Return Me._RANK_ID
		End Get
		Set
			If ((Me._RANK_ID = value)  _
						= false) Then
				Me.OnRANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._RANK_ID = value
				Me.SendPropertyChanged("RANK_ID")
				Me.OnRANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_RANKKEY", DbType:="Int")>  _
	Public Property RANK_RANKKEY() As System.Nullable(Of Integer)
		Get
			Return Me._RANK_RANKKEY
		End Get
		Set
			If (Me._RANK_RANKKEY.Equals(value) = false) Then
				Me.OnRANK_RANKKEYChanging(value)
				Me.SendPropertyChanging
				Me._RANK_RANKKEY = value
				Me.SendPropertyChanged("RANK_RANKKEY")
				Me.OnRANK_RANKKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_CODE", DbType:="NVarChar(50)")>  _
	Public Property RANK_CODE() As String
		Get
			Return Me._RANK_CODE
		End Get
		Set
			If (String.Equals(Me._RANK_CODE, value) = false) Then
				Me.OnRANK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_CODE = value
				Me.SendPropertyChanged("RANK_CODE")
				Me.OnRANK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_RANKNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RANK_RANKNAME() As String
		Get
			Return Me._RANK_RANKNAME
		End Get
		Set
			If (String.Equals(Me._RANK_RANKNAME, value) = false) Then
				Me.OnRANK_RANKNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_RANKNAME = value
				Me.SendPropertyChanged("RANK_RANKNAME")
				Me.OnRANK_RANKNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_SHORTNAME", DbType:="NVarChar(50)")>  _
	Public Property RANK_SHORTNAME() As String
		Get
			Return Me._RANK_SHORTNAME
		End Get
		Set
			If (String.Equals(Me._RANK_SHORTNAME, value) = false) Then
				Me.OnRANK_SHORTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_SHORTNAME = value
				Me.SendPropertyChanged("RANK_SHORTNAME")
				Me.OnRANK_SHORTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RANK_ENNAME() As String
		Get
			Return Me._RANK_ENNAME
		End Get
		Set
			If (String.Equals(Me._RANK_ENNAME, value) = false) Then
				Me.OnRANK_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_ENNAME = value
				Me.SendPropertyChanged("RANK_ENNAME")
				Me.OnRANK_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_ENSHORTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RANK_ENSHORTNAME() As String
		Get
			Return Me._RANK_ENSHORTNAME
		End Get
		Set
			If (String.Equals(Me._RANK_ENSHORTNAME, value) = false) Then
				Me.OnRANK_ENSHORTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_ENSHORTNAME = value
				Me.SendPropertyChanged("RANK_ENSHORTNAME")
				Me.OnRANK_ENSHORTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_MILITARYKEY", DbType:="Int")>  _
	Public Property RANK_MILITARYKEY() As System.Nullable(Of Integer)
		Get
			Return Me._RANK_MILITARYKEY
		End Get
		Set
			If (Me._RANK_MILITARYKEY.Equals(value) = false) Then
				Me.OnRANK_MILITARYKEYChanging(value)
				Me.SendPropertyChanging
				Me._RANK_MILITARYKEY = value
				Me.SendPropertyChanged("RANK_MILITARYKEY")
				Me.OnRANK_MILITARYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RANK_NOTE() As String
		Get
			Return Me._RANK_NOTE
		End Get
		Set
			If (String.Equals(Me._RANK_NOTE, value) = false) Then
				Me.OnRANK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RANK_NOTE = value
				Me.SendPropertyChanged("RANK_NOTE")
				Me.OnRANK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_ISDISABLED", DbType:="Int")>  _
	Public Property RANK_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RANK_ISDISABLED
		End Get
		Set
			If (Me._RANK_ISDISABLED.Equals(value) = false) Then
				Me.OnRANK_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RANK_ISDISABLED = value
				Me.SendPropertyChanged("RANK_ISDISABLED")
				Me.OnRANK_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK_ISCOMMISSION", DbType:="Int")>  _
	Public Property RANK_ISCOMMISSION() As System.Nullable(Of Integer)
		Get
			Return Me._RANK_ISCOMMISSION
		End Get
		Set
			If (Me._RANK_ISCOMMISSION.Equals(value) = false) Then
				Me.OnRANK_ISCOMMISSIONChanging(value)
				Me.SendPropertyChanging
				Me._RANK_ISCOMMISSION = value
				Me.SendPropertyChanged("RANK_ISCOMMISSION")
				Me.OnRANK_ISCOMMISSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_REASON_NOTUSE")>  _
Partial Public Class MAS_REASON_NOTUSE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CODE As String
	
	Private _NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RECEIVETYPE")>  _
Partial Public Class MAS_RECEIVETYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RECEIVETYPE_ID As Integer
	
	Private _RECEIVETYPE_CODE As String
	
	Private _RECEIVETYPE_RECEIVENAME As String
	
	Private _RECEIVETYPE_ENNAME As String
	
	Private _RECEIVETYPE_NOTE As String
	
	Private _RECEIVETYPE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRECEIVETYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRECEIVETYPE_IDChanged()
    End Sub
    Partial Private Sub OnRECEIVETYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIVETYPE_CODEChanged()
    End Sub
    Partial Private Sub OnRECEIVETYPE_RECEIVENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIVETYPE_RECEIVENAMEChanged()
    End Sub
    Partial Private Sub OnRECEIVETYPE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIVETYPE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRECEIVETYPE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIVETYPE_NOTEChanged()
    End Sub
    Partial Private Sub OnRECEIVETYPE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRECEIVETYPE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RECEIVETYPE_ID() As Integer
		Get
			Return Me._RECEIVETYPE_ID
		End Get
		Set
			If ((Me._RECEIVETYPE_ID = value)  _
						= false) Then
				Me.OnRECEIVETYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_ID = value
				Me.SendPropertyChanged("RECEIVETYPE_ID")
				Me.OnRECEIVETYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_CODE", DbType:="NVarChar(50)")>  _
	Public Property RECEIVETYPE_CODE() As String
		Get
			Return Me._RECEIVETYPE_CODE
		End Get
		Set
			If (String.Equals(Me._RECEIVETYPE_CODE, value) = false) Then
				Me.OnRECEIVETYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_CODE = value
				Me.SendPropertyChanged("RECEIVETYPE_CODE")
				Me.OnRECEIVETYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_RECEIVENAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECEIVETYPE_RECEIVENAME() As String
		Get
			Return Me._RECEIVETYPE_RECEIVENAME
		End Get
		Set
			If (String.Equals(Me._RECEIVETYPE_RECEIVENAME, value) = false) Then
				Me.OnRECEIVETYPE_RECEIVENAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_RECEIVENAME = value
				Me.SendPropertyChanged("RECEIVETYPE_RECEIVENAME")
				Me.OnRECEIVETYPE_RECEIVENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECEIVETYPE_ENNAME() As String
		Get
			Return Me._RECEIVETYPE_ENNAME
		End Get
		Set
			If (String.Equals(Me._RECEIVETYPE_ENNAME, value) = false) Then
				Me.OnRECEIVETYPE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_ENNAME = value
				Me.SendPropertyChanged("RECEIVETYPE_ENNAME")
				Me.OnRECEIVETYPE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RECEIVETYPE_NOTE() As String
		Get
			Return Me._RECEIVETYPE_NOTE
		End Get
		Set
			If (String.Equals(Me._RECEIVETYPE_NOTE, value) = false) Then
				Me.OnRECEIVETYPE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_NOTE = value
				Me.SendPropertyChanged("RECEIVETYPE_NOTE")
				Me.OnRECEIVETYPE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVETYPE_ISDISABLED", DbType:="Int")>  _
	Public Property RECEIVETYPE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RECEIVETYPE_ISDISABLED
		End Get
		Set
			If (Me._RECEIVETYPE_ISDISABLED.Equals(value) = false) Then
				Me.OnRECEIVETYPE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVETYPE_ISDISABLED = value
				Me.SendPropertyChanged("RECEIVETYPE_ISDISABLED")
				Me.OnRECEIVETYPE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RECOMMEND")>  _
Partial Public Class MAS_RECOMMEND
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RECOMMEND_ID As Integer
	
	Private _RECOMMEND_CODE As String
	
	Private _RECOMMEND_NAME As String
	
	Private _RECOMMEND_ENNAME As String
	
	Private _RECOMMEND_NOTE As String
	
	Private _RECOMMEND_ISDISABLED As System.Nullable(Of Integer)
	
	Private _RECOMMEND_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRECOMMEND_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRECOMMEND_IDChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRECOMMEND_CODEChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECOMMEND_NAMEChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECOMMEND_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRECOMMEND_NOTEChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRECOMMEND_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnRECOMMEND_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRECOMMEND_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RECOMMEND_ID() As Integer
		Get
			Return Me._RECOMMEND_ID
		End Get
		Set
			If ((Me._RECOMMEND_ID = value)  _
						= false) Then
				Me.OnRECOMMEND_IDChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_ID = value
				Me.SendPropertyChanged("RECOMMEND_ID")
				Me.OnRECOMMEND_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_CODE", DbType:="NVarChar(50)")>  _
	Public Property RECOMMEND_CODE() As String
		Get
			Return Me._RECOMMEND_CODE
		End Get
		Set
			If (String.Equals(Me._RECOMMEND_CODE, value) = false) Then
				Me.OnRECOMMEND_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_CODE = value
				Me.SendPropertyChanged("RECOMMEND_CODE")
				Me.OnRECOMMEND_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECOMMEND_NAME() As String
		Get
			Return Me._RECOMMEND_NAME
		End Get
		Set
			If (String.Equals(Me._RECOMMEND_NAME, value) = false) Then
				Me.OnRECOMMEND_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_NAME = value
				Me.SendPropertyChanged("RECOMMEND_NAME")
				Me.OnRECOMMEND_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECOMMEND_ENNAME() As String
		Get
			Return Me._RECOMMEND_ENNAME
		End Get
		Set
			If (String.Equals(Me._RECOMMEND_ENNAME, value) = false) Then
				Me.OnRECOMMEND_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_ENNAME = value
				Me.SendPropertyChanged("RECOMMEND_ENNAME")
				Me.OnRECOMMEND_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RECOMMEND_NOTE() As String
		Get
			Return Me._RECOMMEND_NOTE
		End Get
		Set
			If (String.Equals(Me._RECOMMEND_NOTE, value) = false) Then
				Me.OnRECOMMEND_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_NOTE = value
				Me.SendPropertyChanged("RECOMMEND_NOTE")
				Me.OnRECOMMEND_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_ISDISABLED", DbType:="Int")>  _
	Public Property RECOMMEND_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RECOMMEND_ISDISABLED
		End Get
		Set
			If (Me._RECOMMEND_ISDISABLED.Equals(value) = false) Then
				Me.OnRECOMMEND_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_ISDISABLED = value
				Me.SendPropertyChanged("RECOMMEND_ISDISABLED")
				Me.OnRECOMMEND_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECOMMEND_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property RECOMMEND_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._RECOMMEND_SERVICEUNITKEY
		End Get
		Set
			If (Me._RECOMMEND_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnRECOMMEND_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._RECOMMEND_SERVICEUNITKEY = value
				Me.SendPropertyChanged("RECOMMEND_SERVICEUNITKEY")
				Me.OnRECOMMEND_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Recorder")>  _
Partial Public Class MAS_Recorder
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Rec_ID As System.Nullable(Of Integer)
	
	Private _Rec_Name As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRec_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRec_IDChanged()
    End Sub
    Partial Private Sub OnRec_NameChanging(value As String)
    End Sub
    Partial Private Sub OnRec_NameChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rec_ID", DbType:="Int")>  _
	Public Property Rec_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Rec_ID
		End Get
		Set
			If (Me._Rec_ID.Equals(value) = false) Then
				Me.OnRec_IDChanging(value)
				Me.SendPropertyChanging
				Me._Rec_ID = value
				Me.SendPropertyChanged("Rec_ID")
				Me.OnRec_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rec_Name", DbType:="VarChar(MAX)")>  _
	Public Property Rec_Name() As String
		Get
			Return Me._Rec_Name
		End Get
		Set
			If (String.Equals(Me._Rec_Name, value) = false) Then
				Me.OnRec_NameChanging(value)
				Me.SendPropertyChanging
				Me._Rec_Name = value
				Me.SendPropertyChanged("Rec_Name")
				Me.OnRec_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_REFEROBJECT")>  _
Partial Public Class MAS_REFEROBJECT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _REFEROBJECT_ID As Integer
	
	Private _REFEROBJECT_CODE As String
	
	Private _REFEROBJECT_REFEROBJECTNAME As String
	
	Private _REFEROBJECT_ENNAME As String
	
	Private _REFEROBJECT_NOTE As String
	
	Private _REFEROBJECT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnREFEROBJECT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnREFEROBJECT_IDChanged()
    End Sub
    Partial Private Sub OnREFEROBJECT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREFEROBJECT_CODEChanged()
    End Sub
    Partial Private Sub OnREFEROBJECT_REFEROBJECTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREFEROBJECT_REFEROBJECTNAMEChanged()
    End Sub
    Partial Private Sub OnREFEROBJECT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREFEROBJECT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnREFEROBJECT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnREFEROBJECT_NOTEChanged()
    End Sub
    Partial Private Sub OnREFEROBJECT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREFEROBJECT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property REFEROBJECT_ID() As Integer
		Get
			Return Me._REFEROBJECT_ID
		End Get
		Set
			If ((Me._REFEROBJECT_ID = value)  _
						= false) Then
				Me.OnREFEROBJECT_IDChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_ID = value
				Me.SendPropertyChanged("REFEROBJECT_ID")
				Me.OnREFEROBJECT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_CODE", DbType:="NVarChar(50)")>  _
	Public Property REFEROBJECT_CODE() As String
		Get
			Return Me._REFEROBJECT_CODE
		End Get
		Set
			If (String.Equals(Me._REFEROBJECT_CODE, value) = false) Then
				Me.OnREFEROBJECT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_CODE = value
				Me.SendPropertyChanged("REFEROBJECT_CODE")
				Me.OnREFEROBJECT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_REFEROBJECTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property REFEROBJECT_REFEROBJECTNAME() As String
		Get
			Return Me._REFEROBJECT_REFEROBJECTNAME
		End Get
		Set
			If (String.Equals(Me._REFEROBJECT_REFEROBJECTNAME, value) = false) Then
				Me.OnREFEROBJECT_REFEROBJECTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_REFEROBJECTNAME = value
				Me.SendPropertyChanged("REFEROBJECT_REFEROBJECTNAME")
				Me.OnREFEROBJECT_REFEROBJECTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property REFEROBJECT_ENNAME() As String
		Get
			Return Me._REFEROBJECT_ENNAME
		End Get
		Set
			If (String.Equals(Me._REFEROBJECT_ENNAME, value) = false) Then
				Me.OnREFEROBJECT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_ENNAME = value
				Me.SendPropertyChanged("REFEROBJECT_ENNAME")
				Me.OnREFEROBJECT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property REFEROBJECT_NOTE() As String
		Get
			Return Me._REFEROBJECT_NOTE
		End Get
		Set
			If (String.Equals(Me._REFEROBJECT_NOTE, value) = false) Then
				Me.OnREFEROBJECT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_NOTE = value
				Me.SendPropertyChanged("REFEROBJECT_NOTE")
				Me.OnREFEROBJECT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFEROBJECT_ISDISABLED", DbType:="Int")>  _
	Public Property REFEROBJECT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._REFEROBJECT_ISDISABLED
		End Get
		Set
			If (Me._REFEROBJECT_ISDISABLED.Equals(value) = false) Then
				Me.OnREFEROBJECT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._REFEROBJECT_ISDISABLED = value
				Me.SendPropertyChanged("REFEROBJECT_ISDISABLED")
				Me.OnREFEROBJECT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_REGION_MAIN")>  _
Partial Public Class MAS_REGION_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _REGION_MAIN_ID As Integer
	
	Private _REGION_MAIN_CODE As String
	
	Private _REGION_MAIN_REGIONNAME As String
	
	Private _REGION_MAIN_ENNAME As String
	
	Private _REGION_MAIN_NOTE As String
	
	Private _REGION_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnREGION_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnREGION_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnREGION_MAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREGION_MAIN_CODEChanged()
    End Sub
    Partial Private Sub OnREGION_MAIN_REGIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREGION_MAIN_REGIONNAMEChanged()
    End Sub
    Partial Private Sub OnREGION_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREGION_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnREGION_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnREGION_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnREGION_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREGION_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property REGION_MAIN_ID() As Integer
		Get
			Return Me._REGION_MAIN_ID
		End Get
		Set
			If ((Me._REGION_MAIN_ID = value)  _
						= false) Then
				Me.OnREGION_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_ID = value
				Me.SendPropertyChanged("REGION_MAIN_ID")
				Me.OnREGION_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_CODE", DbType:="NVarChar(50)")>  _
	Public Property REGION_MAIN_CODE() As String
		Get
			Return Me._REGION_MAIN_CODE
		End Get
		Set
			If (String.Equals(Me._REGION_MAIN_CODE, value) = false) Then
				Me.OnREGION_MAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_CODE = value
				Me.SendPropertyChanged("REGION_MAIN_CODE")
				Me.OnREGION_MAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_REGIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property REGION_MAIN_REGIONNAME() As String
		Get
			Return Me._REGION_MAIN_REGIONNAME
		End Get
		Set
			If (String.Equals(Me._REGION_MAIN_REGIONNAME, value) = false) Then
				Me.OnREGION_MAIN_REGIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_REGIONNAME = value
				Me.SendPropertyChanged("REGION_MAIN_REGIONNAME")
				Me.OnREGION_MAIN_REGIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property REGION_MAIN_ENNAME() As String
		Get
			Return Me._REGION_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._REGION_MAIN_ENNAME, value) = false) Then
				Me.OnREGION_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_ENNAME = value
				Me.SendPropertyChanged("REGION_MAIN_ENNAME")
				Me.OnREGION_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property REGION_MAIN_NOTE() As String
		Get
			Return Me._REGION_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._REGION_MAIN_NOTE, value) = false) Then
				Me.OnREGION_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_NOTE = value
				Me.SendPropertyChanged("REGION_MAIN_NOTE")
				Me.OnREGION_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property REGION_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._REGION_MAIN_ISDISABLED
		End Get
		Set
			If (Me._REGION_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnREGION_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._REGION_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("REGION_MAIN_ISDISABLED")
				Me.OnREGION_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RELATIONSHIP")>  _
Partial Public Class MAS_RELATIONSHIP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RELATIONSHIP_ID As Integer
	
	Private _RELATIONSHIP_CODE As String
	
	Private _RELATIONSHIP_RELATIONNAME As String
	
	Private _RELATIONSHIP_ENNAME As String
	
	Private _RELATIONSHIP_NOTE As String
	
	Private _RELATIONSHIP_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRELATIONSHIP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRELATIONSHIP_IDChanged()
    End Sub
    Partial Private Sub OnRELATIONSHIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRELATIONSHIP_CODEChanged()
    End Sub
    Partial Private Sub OnRELATIONSHIP_RELATIONNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRELATIONSHIP_RELATIONNAMEChanged()
    End Sub
    Partial Private Sub OnRELATIONSHIP_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRELATIONSHIP_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRELATIONSHIP_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRELATIONSHIP_NOTEChanged()
    End Sub
    Partial Private Sub OnRELATIONSHIP_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRELATIONSHIP_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RELATIONSHIP_ID() As Integer
		Get
			Return Me._RELATIONSHIP_ID
		End Get
		Set
			If ((Me._RELATIONSHIP_ID = value)  _
						= false) Then
				Me.OnRELATIONSHIP_IDChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_ID = value
				Me.SendPropertyChanged("RELATIONSHIP_ID")
				Me.OnRELATIONSHIP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_CODE", DbType:="NVarChar(50)")>  _
	Public Property RELATIONSHIP_CODE() As String
		Get
			Return Me._RELATIONSHIP_CODE
		End Get
		Set
			If (String.Equals(Me._RELATIONSHIP_CODE, value) = false) Then
				Me.OnRELATIONSHIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_CODE = value
				Me.SendPropertyChanged("RELATIONSHIP_CODE")
				Me.OnRELATIONSHIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_RELATIONNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RELATIONSHIP_RELATIONNAME() As String
		Get
			Return Me._RELATIONSHIP_RELATIONNAME
		End Get
		Set
			If (String.Equals(Me._RELATIONSHIP_RELATIONNAME, value) = false) Then
				Me.OnRELATIONSHIP_RELATIONNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_RELATIONNAME = value
				Me.SendPropertyChanged("RELATIONSHIP_RELATIONNAME")
				Me.OnRELATIONSHIP_RELATIONNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RELATIONSHIP_ENNAME() As String
		Get
			Return Me._RELATIONSHIP_ENNAME
		End Get
		Set
			If (String.Equals(Me._RELATIONSHIP_ENNAME, value) = false) Then
				Me.OnRELATIONSHIP_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_ENNAME = value
				Me.SendPropertyChanged("RELATIONSHIP_ENNAME")
				Me.OnRELATIONSHIP_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RELATIONSHIP_NOTE() As String
		Get
			Return Me._RELATIONSHIP_NOTE
		End Get
		Set
			If (String.Equals(Me._RELATIONSHIP_NOTE, value) = false) Then
				Me.OnRELATIONSHIP_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_NOTE = value
				Me.SendPropertyChanged("RELATIONSHIP_NOTE")
				Me.OnRELATIONSHIP_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELATIONSHIP_ISDISABLED", DbType:="Int")>  _
	Public Property RELATIONSHIP_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RELATIONSHIP_ISDISABLED
		End Get
		Set
			If (Me._RELATIONSHIP_ISDISABLED.Equals(value) = false) Then
				Me.OnRELATIONSHIP_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RELATIONSHIP_ISDISABLED = value
				Me.SendPropertyChanged("RELATIONSHIP_ISDISABLED")
				Me.OnRELATIONSHIP_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RELIGION")>  _
Partial Public Class MAS_RELIGION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RELIGION_ID As Integer
	
	Private _RELIGION_CODE As System.Nullable(Of Integer)
	
	Private _RELIGION_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRELIGION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRELIGION_IDChanged()
    End Sub
    Partial Private Sub OnRELIGION_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRELIGION_CODEChanged()
    End Sub
    Partial Private Sub OnRELIGION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnRELIGION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RELIGION_ID() As Integer
		Get
			Return Me._RELIGION_ID
		End Get
		Set
			If ((Me._RELIGION_ID = value)  _
						= false) Then
				Me.OnRELIGION_IDChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_ID = value
				Me.SendPropertyChanged("RELIGION_ID")
				Me.OnRELIGION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_CODE", DbType:="Int")>  _
	Public Property RELIGION_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._RELIGION_CODE
		End Get
		Set
			If (Me._RELIGION_CODE.Equals(value) = false) Then
				Me.OnRELIGION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_CODE = value
				Me.SendPropertyChanged("RELIGION_CODE")
				Me.OnRELIGION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property RELIGION_DESCRIPTION() As String
		Get
			Return Me._RELIGION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._RELIGION_DESCRIPTION, value) = false) Then
				Me.OnRELIGION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_DESCRIPTION = value
				Me.SendPropertyChanged("RELIGION_DESCRIPTION")
				Me.OnRELIGION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RELIGION_DETAIL")>  _
Partial Public Class MAS_RELIGION_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RELIGION_DETAIL_ID As Integer
	
	Private _FK_RELIGION_DETAIL_ID As System.Nullable(Of Integer)
	
	Private _RELIGION_DETAIL_CODE As System.Nullable(Of Integer)
	
	Private _RELIGION_DETAIL_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnFK_RELIGION_DETAIL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_RELIGION_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_CODEChanged()
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnRELIGION_DETAIL_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_DETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RELIGION_DETAIL_ID() As Integer
		Get
			Return Me._RELIGION_DETAIL_ID
		End Get
		Set
			If ((Me._RELIGION_DETAIL_ID = value)  _
						= false) Then
				Me.OnRELIGION_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_DETAIL_ID = value
				Me.SendPropertyChanged("RELIGION_DETAIL_ID")
				Me.OnRELIGION_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_RELIGION_DETAIL_ID", DbType:="Int")>  _
	Public Property FK_RELIGION_DETAIL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_RELIGION_DETAIL_ID
		End Get
		Set
			If (Me._FK_RELIGION_DETAIL_ID.Equals(value) = false) Then
				Me.OnFK_RELIGION_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_RELIGION_DETAIL_ID = value
				Me.SendPropertyChanged("FK_RELIGION_DETAIL_ID")
				Me.OnFK_RELIGION_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_DETAIL_CODE", DbType:="Int")>  _
	Public Property RELIGION_DETAIL_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._RELIGION_DETAIL_CODE
		End Get
		Set
			If (Me._RELIGION_DETAIL_CODE.Equals(value) = false) Then
				Me.OnRELIGION_DETAIL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_DETAIL_CODE = value
				Me.SendPropertyChanged("RELIGION_DETAIL_CODE")
				Me.OnRELIGION_DETAIL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELIGION_DETAIL_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property RELIGION_DETAIL_DESCRIPTION() As String
		Get
			Return Me._RELIGION_DETAIL_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._RELIGION_DETAIL_DESCRIPTION, value) = false) Then
				Me.OnRELIGION_DETAIL_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._RELIGION_DETAIL_DESCRIPTION = value
				Me.SendPropertyChanged("RELIGION_DETAIL_DESCRIPTION")
				Me.OnRELIGION_DETAIL_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RESIDENTROLE")>  _
Partial Public Class MAS_RESIDENTROLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RESIDENTROLE_ID As Integer
	
	Private _RESIDENTROLE_CODE As String
	
	Private _RESIDENTROLE_RESIDENTROLENAME As String
	
	Private _RESIDENTROLE_ENNAME As String
	
	Private _RESIDENTROLE_NOTE As String
	
	Private _RESIDENTROLE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRESIDENTROLE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRESIDENTROLE_IDChanged()
    End Sub
    Partial Private Sub OnRESIDENTROLE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRESIDENTROLE_CODEChanged()
    End Sub
    Partial Private Sub OnRESIDENTROLE_RESIDENTROLENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRESIDENTROLE_RESIDENTROLENAMEChanged()
    End Sub
    Partial Private Sub OnRESIDENTROLE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRESIDENTROLE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRESIDENTROLE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRESIDENTROLE_NOTEChanged()
    End Sub
    Partial Private Sub OnRESIDENTROLE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRESIDENTROLE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RESIDENTROLE_ID() As Integer
		Get
			Return Me._RESIDENTROLE_ID
		End Get
		Set
			If ((Me._RESIDENTROLE_ID = value)  _
						= false) Then
				Me.OnRESIDENTROLE_IDChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_ID = value
				Me.SendPropertyChanged("RESIDENTROLE_ID")
				Me.OnRESIDENTROLE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_CODE", DbType:="NVarChar(50)")>  _
	Public Property RESIDENTROLE_CODE() As String
		Get
			Return Me._RESIDENTROLE_CODE
		End Get
		Set
			If (String.Equals(Me._RESIDENTROLE_CODE, value) = false) Then
				Me.OnRESIDENTROLE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_CODE = value
				Me.SendPropertyChanged("RESIDENTROLE_CODE")
				Me.OnRESIDENTROLE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_RESIDENTROLENAME", DbType:="NVarChar(MAX)")>  _
	Public Property RESIDENTROLE_RESIDENTROLENAME() As String
		Get
			Return Me._RESIDENTROLE_RESIDENTROLENAME
		End Get
		Set
			If (String.Equals(Me._RESIDENTROLE_RESIDENTROLENAME, value) = false) Then
				Me.OnRESIDENTROLE_RESIDENTROLENAMEChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_RESIDENTROLENAME = value
				Me.SendPropertyChanged("RESIDENTROLE_RESIDENTROLENAME")
				Me.OnRESIDENTROLE_RESIDENTROLENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RESIDENTROLE_ENNAME() As String
		Get
			Return Me._RESIDENTROLE_ENNAME
		End Get
		Set
			If (String.Equals(Me._RESIDENTROLE_ENNAME, value) = false) Then
				Me.OnRESIDENTROLE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_ENNAME = value
				Me.SendPropertyChanged("RESIDENTROLE_ENNAME")
				Me.OnRESIDENTROLE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RESIDENTROLE_NOTE() As String
		Get
			Return Me._RESIDENTROLE_NOTE
		End Get
		Set
			If (String.Equals(Me._RESIDENTROLE_NOTE, value) = false) Then
				Me.OnRESIDENTROLE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_NOTE = value
				Me.SendPropertyChanged("RESIDENTROLE_NOTE")
				Me.OnRESIDENTROLE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESIDENTROLE_ISDISABLED", DbType:="Int")>  _
	Public Property RESIDENTROLE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RESIDENTROLE_ISDISABLED
		End Get
		Set
			If (Me._RESIDENTROLE_ISDISABLED.Equals(value) = false) Then
				Me.OnRESIDENTROLE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RESIDENTROLE_ISDISABLED = value
				Me.SendPropertyChanged("RESIDENTROLE_ISDISABLED")
				Me.OnRESIDENTROLE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RESULTPATIENT")>  _
Partial Public Class MAS_RESULTPATIENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RESULTPATIENT_ID As Integer
	
	Private _RESULTPATIENT_CODE As String
	
	Private _RESULTPATIENT_NAME As String
	
	Private _RESULTPATIENT_ENNAME As String
	
	Private _RESULTPATIENT_NOTE As String
	
	Private _RESULTPATIENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRESULTPATIENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRESULTPATIENT_IDChanged()
    End Sub
    Partial Private Sub OnRESULTPATIENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTPATIENT_CODEChanged()
    End Sub
    Partial Private Sub OnRESULTPATIENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTPATIENT_NAMEChanged()
    End Sub
    Partial Private Sub OnRESULTPATIENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTPATIENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnRESULTPATIENT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTPATIENT_NOTEChanged()
    End Sub
    Partial Private Sub OnRESULTPATIENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRESULTPATIENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RESULTPATIENT_ID() As Integer
		Get
			Return Me._RESULTPATIENT_ID
		End Get
		Set
			If ((Me._RESULTPATIENT_ID = value)  _
						= false) Then
				Me.OnRESULTPATIENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_ID = value
				Me.SendPropertyChanged("RESULTPATIENT_ID")
				Me.OnRESULTPATIENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property RESULTPATIENT_CODE() As String
		Get
			Return Me._RESULTPATIENT_CODE
		End Get
		Set
			If (String.Equals(Me._RESULTPATIENT_CODE, value) = false) Then
				Me.OnRESULTPATIENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_CODE = value
				Me.SendPropertyChanged("RESULTPATIENT_CODE")
				Me.OnRESULTPATIENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RESULTPATIENT_NAME() As String
		Get
			Return Me._RESULTPATIENT_NAME
		End Get
		Set
			If (String.Equals(Me._RESULTPATIENT_NAME, value) = false) Then
				Me.OnRESULTPATIENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_NAME = value
				Me.SendPropertyChanged("RESULTPATIENT_NAME")
				Me.OnRESULTPATIENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property RESULTPATIENT_ENNAME() As String
		Get
			Return Me._RESULTPATIENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._RESULTPATIENT_ENNAME, value) = false) Then
				Me.OnRESULTPATIENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_ENNAME = value
				Me.SendPropertyChanged("RESULTPATIENT_ENNAME")
				Me.OnRESULTPATIENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property RESULTPATIENT_NOTE() As String
		Get
			Return Me._RESULTPATIENT_NOTE
		End Get
		Set
			If (String.Equals(Me._RESULTPATIENT_NOTE, value) = false) Then
				Me.OnRESULTPATIENT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_NOTE = value
				Me.SendPropertyChanged("RESULTPATIENT_NOTE")
				Me.OnRESULTPATIENT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULTPATIENT_ISDISABLED", DbType:="Int")>  _
	Public Property RESULTPATIENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._RESULTPATIENT_ISDISABLED
		End Get
		Set
			If (Me._RESULTPATIENT_ISDISABLED.Equals(value) = false) Then
				Me.OnRESULTPATIENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._RESULTPATIENT_ISDISABLED = value
				Me.SendPropertyChanged("RESULTPATIENT_ISDISABLED")
				Me.OnRESULTPATIENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RHGROUP")>  _
Partial Public Class MAS_RHGROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RHGROUP_ID As Integer
	
	Private _RHGROUP_CODE As System.Nullable(Of Integer)
	
	Private _RHGROUP_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRHGROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRHGROUP_IDChanged()
    End Sub
    Partial Private Sub OnRHGROUP_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRHGROUP_CODEChanged()
    End Sub
    Partial Private Sub OnRHGROUP_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnRHGROUP_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RHGROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RHGROUP_ID() As Integer
		Get
			Return Me._RHGROUP_ID
		End Get
		Set
			If ((Me._RHGROUP_ID = value)  _
						= false) Then
				Me.OnRHGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._RHGROUP_ID = value
				Me.SendPropertyChanged("RHGROUP_ID")
				Me.OnRHGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RHGROUP_CODE", DbType:="Int")>  _
	Public Property RHGROUP_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._RHGROUP_CODE
		End Get
		Set
			If (Me._RHGROUP_CODE.Equals(value) = false) Then
				Me.OnRHGROUP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._RHGROUP_CODE = value
				Me.SendPropertyChanged("RHGROUP_CODE")
				Me.OnRHGROUP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RHGROUP_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property RHGROUP_DESCRIPTION() As String
		Get
			Return Me._RHGROUP_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._RHGROUP_DESCRIPTION, value) = false) Then
				Me.OnRHGROUP_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._RHGROUP_DESCRIPTION = value
				Me.SendPropertyChanged("RHGROUP_DESCRIPTION")
				Me.OnRHGROUP_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Room")>  _
Partial Public Class MAS_Room
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Room As System.Nullable(Of Integer)
	
	Private _Room_Name As String
	
	Private _Create_date As System.Nullable(Of Date)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Date)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_RoomChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_RoomChanged()
    End Sub
    Partial Private Sub OnRoom_NameChanging(value As String)
    End Sub
    Partial Private Sub OnRoom_NameChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Room", DbType:="Int")>  _
	Public Property ID_Room() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Room
		End Get
		Set
			If (Me._ID_Room.Equals(value) = false) Then
				Me.OnID_RoomChanging(value)
				Me.SendPropertyChanging
				Me._ID_Room = value
				Me.SendPropertyChanged("ID_Room")
				Me.OnID_RoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Room_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Room_Name() As String
		Get
			Return Me._Room_Name
		End Get
		Set
			If (String.Equals(Me._Room_Name, value) = false) Then
				Me.OnRoom_NameChanging(value)
				Me.SendPropertyChanging
				Me._Room_Name = value
				Me.SendPropertyChanged("Room_Name")
				Me.OnRoom_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="DateTime")>  _
	Public Property Create_date() As System.Nullable(Of Date)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="DateTime")>  _
	Public Property Update_date() As System.Nullable(Of Date)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ROOMPATIENT")>  _
Partial Public Class MAS_ROOMPATIENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ROOMPATIENT_ID As Integer
	
	Private _ROOMPATIENT_ROOMKEY As System.Nullable(Of Integer)
	
	Private _ROOMPATIENT_CODE As String
	
	Private _ROOMPATIENT_ROOMNAME As String
	
	Private _ROOMPATIENT_ENNAME As String
	
	Private _ROOMPATIENT_SERVICEUNITKEY As String
	
	Private _ROOMPATIENT_FLOORKEY As String
	
	Private _ROOMPATIENT_NOTE As String
	
	Private _ROOMPATIENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _ROOMPATIENT_CURRENTPRICE As String
	
	Private _ROOMPATIENT_CDGITEMTOPIC As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnROOMPATIENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnROOMPATIENT_IDChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_ROOMKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROOMPATIENT_ROOMKEYChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_CODEChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_ROOMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_ROOMNAMEChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_SERVICEUNITKEYChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_FLOORKEYChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_FLOORKEYChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_NOTEChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROOMPATIENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_CURRENTPRICEChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_CURRENTPRICEChanged()
    End Sub
    Partial Private Sub OnROOMPATIENT_CDGITEMTOPICChanging(value As String)
    End Sub
    Partial Private Sub OnROOMPATIENT_CDGITEMTOPICChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ROOMPATIENT_ID() As Integer
		Get
			Return Me._ROOMPATIENT_ID
		End Get
		Set
			If ((Me._ROOMPATIENT_ID = value)  _
						= false) Then
				Me.OnROOMPATIENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_ID = value
				Me.SendPropertyChanged("ROOMPATIENT_ID")
				Me.OnROOMPATIENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_ROOMKEY", DbType:="Int")>  _
	Public Property ROOMPATIENT_ROOMKEY() As System.Nullable(Of Integer)
		Get
			Return Me._ROOMPATIENT_ROOMKEY
		End Get
		Set
			If (Me._ROOMPATIENT_ROOMKEY.Equals(value) = false) Then
				Me.OnROOMPATIENT_ROOMKEYChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_ROOMKEY = value
				Me.SendPropertyChanged("ROOMPATIENT_ROOMKEY")
				Me.OnROOMPATIENT_ROOMKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_CODE", DbType:="NVarChar(50)")>  _
	Public Property ROOMPATIENT_CODE() As String
		Get
			Return Me._ROOMPATIENT_CODE
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_CODE, value) = false) Then
				Me.OnROOMPATIENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_CODE = value
				Me.SendPropertyChanged("ROOMPATIENT_CODE")
				Me.OnROOMPATIENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_ROOMNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ROOMPATIENT_ROOMNAME() As String
		Get
			Return Me._ROOMPATIENT_ROOMNAME
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_ROOMNAME, value) = false) Then
				Me.OnROOMPATIENT_ROOMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_ROOMNAME = value
				Me.SendPropertyChanged("ROOMPATIENT_ROOMNAME")
				Me.OnROOMPATIENT_ROOMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property ROOMPATIENT_ENNAME() As String
		Get
			Return Me._ROOMPATIENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_ENNAME, value) = false) Then
				Me.OnROOMPATIENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_ENNAME = value
				Me.SendPropertyChanged("ROOMPATIENT_ENNAME")
				Me.OnROOMPATIENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_SERVICEUNITKEY", DbType:="NVarChar(50)")>  _
	Public Property ROOMPATIENT_SERVICEUNITKEY() As String
		Get
			Return Me._ROOMPATIENT_SERVICEUNITKEY
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_SERVICEUNITKEY, value) = false) Then
				Me.OnROOMPATIENT_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_SERVICEUNITKEY = value
				Me.SendPropertyChanged("ROOMPATIENT_SERVICEUNITKEY")
				Me.OnROOMPATIENT_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_FLOORKEY", DbType:="NVarChar(50)")>  _
	Public Property ROOMPATIENT_FLOORKEY() As String
		Get
			Return Me._ROOMPATIENT_FLOORKEY
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_FLOORKEY, value) = false) Then
				Me.OnROOMPATIENT_FLOORKEYChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_FLOORKEY = value
				Me.SendPropertyChanged("ROOMPATIENT_FLOORKEY")
				Me.OnROOMPATIENT_FLOORKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ROOMPATIENT_NOTE() As String
		Get
			Return Me._ROOMPATIENT_NOTE
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_NOTE, value) = false) Then
				Me.OnROOMPATIENT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_NOTE = value
				Me.SendPropertyChanged("ROOMPATIENT_NOTE")
				Me.OnROOMPATIENT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_ISDISABLED", DbType:="Int")>  _
	Public Property ROOMPATIENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._ROOMPATIENT_ISDISABLED
		End Get
		Set
			If (Me._ROOMPATIENT_ISDISABLED.Equals(value) = false) Then
				Me.OnROOMPATIENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_ISDISABLED = value
				Me.SendPropertyChanged("ROOMPATIENT_ISDISABLED")
				Me.OnROOMPATIENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_CURRENTPRICE", DbType:="NVarChar(MAX)")>  _
	Public Property ROOMPATIENT_CURRENTPRICE() As String
		Get
			Return Me._ROOMPATIENT_CURRENTPRICE
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_CURRENTPRICE, value) = false) Then
				Me.OnROOMPATIENT_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_CURRENTPRICE = value
				Me.SendPropertyChanged("ROOMPATIENT_CURRENTPRICE")
				Me.OnROOMPATIENT_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMPATIENT_CDGITEMTOPIC", DbType:="NVarChar(50)")>  _
	Public Property ROOMPATIENT_CDGITEMTOPIC() As String
		Get
			Return Me._ROOMPATIENT_CDGITEMTOPIC
		End Get
		Set
			If (String.Equals(Me._ROOMPATIENT_CDGITEMTOPIC, value) = false) Then
				Me.OnROOMPATIENT_CDGITEMTOPICChanging(value)
				Me.SendPropertyChanging
				Me._ROOMPATIENT_CDGITEMTOPIC = value
				Me.SendPropertyChanged("ROOMPATIENT_CDGITEMTOPIC")
				Me.OnROOMPATIENT_CDGITEMTOPICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SEARCH_DRUG")>  _
Partial Public Class MAS_SEARCH_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEARCH_DRUG_ID As Integer
	
	Private _SEARCH_DRUG_CODE As String
	
	Private _SEARCH_DRUG_NAME As String
	
	Private _SEARCH_DRUG_ENNAME As String
	
	Private _SEARCH_DRUG_NOTE As String
	
	Private _SEARCH_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEARCH_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSEARCH_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSEARCH_DRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSEARCH_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSEARCH_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnSEARCH_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEARCH_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEARCH_DRUG_ID() As Integer
		Get
			Return Me._SEARCH_DRUG_ID
		End Get
		Set
			If ((Me._SEARCH_DRUG_ID = value)  _
						= false) Then
				Me.OnSEARCH_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_ID = value
				Me.SendPropertyChanged("SEARCH_DRUG_ID")
				Me.OnSEARCH_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property SEARCH_DRUG_CODE() As String
		Get
			Return Me._SEARCH_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._SEARCH_DRUG_CODE, value) = false) Then
				Me.OnSEARCH_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_CODE = value
				Me.SendPropertyChanged("SEARCH_DRUG_CODE")
				Me.OnSEARCH_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SEARCH_DRUG_NAME() As String
		Get
			Return Me._SEARCH_DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._SEARCH_DRUG_NAME, value) = false) Then
				Me.OnSEARCH_DRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_NAME = value
				Me.SendPropertyChanged("SEARCH_DRUG_NAME")
				Me.OnSEARCH_DRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SEARCH_DRUG_ENNAME() As String
		Get
			Return Me._SEARCH_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._SEARCH_DRUG_ENNAME, value) = false) Then
				Me.OnSEARCH_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_ENNAME = value
				Me.SendPropertyChanged("SEARCH_DRUG_ENNAME")
				Me.OnSEARCH_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SEARCH_DRUG_NOTE() As String
		Get
			Return Me._SEARCH_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._SEARCH_DRUG_NOTE, value) = false) Then
				Me.OnSEARCH_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_NOTE = value
				Me.SendPropertyChanged("SEARCH_DRUG_NOTE")
				Me.OnSEARCH_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEARCH_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property SEARCH_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SEARCH_DRUG_ISDISABLED
		End Get
		Set
			If (Me._SEARCH_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnSEARCH_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SEARCH_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("SEARCH_DRUG_ISDISABLED")
				Me.OnSEARCH_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SENSITIVECULTURE")>  _
Partial Public Class MAS_SENSITIVECULTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SENSITIVECULTURE_ID As Integer
	
	Private _SENSITIVECULTURE_CODE As String
	
	Private _SENSITIVECULTURE_SENSITIVECULTURE As String
	
	Private _SENSITIVECULTURE_ENNAME As String
	
	Private _SENSITIVECULTURE_NOTE As String
	
	Private _SENSITIVECULTURE_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_IDChanged()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_CODEChanged()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_SENSITIVECULTUREChanging(value As String)
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_SENSITIVECULTUREChanged()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_NOTEChanged()
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSENSITIVECULTURE_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SENSITIVECULTURE_ID() As Integer
		Get
			Return Me._SENSITIVECULTURE_ID
		End Get
		Set
			If ((Me._SENSITIVECULTURE_ID = value)  _
						= false) Then
				Me.OnSENSITIVECULTURE_IDChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_ID = value
				Me.SendPropertyChanged("SENSITIVECULTURE_ID")
				Me.OnSENSITIVECULTURE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_CODE", DbType:="NVarChar(50)")>  _
	Public Property SENSITIVECULTURE_CODE() As String
		Get
			Return Me._SENSITIVECULTURE_CODE
		End Get
		Set
			If (String.Equals(Me._SENSITIVECULTURE_CODE, value) = false) Then
				Me.OnSENSITIVECULTURE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_CODE = value
				Me.SendPropertyChanged("SENSITIVECULTURE_CODE")
				Me.OnSENSITIVECULTURE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_SENSITIVECULTURE", DbType:="NVarChar(200)")>  _
	Public Property SENSITIVECULTURE_SENSITIVECULTURE() As String
		Get
			Return Me._SENSITIVECULTURE_SENSITIVECULTURE
		End Get
		Set
			If (String.Equals(Me._SENSITIVECULTURE_SENSITIVECULTURE, value) = false) Then
				Me.OnSENSITIVECULTURE_SENSITIVECULTUREChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_SENSITIVECULTURE = value
				Me.SendPropertyChanged("SENSITIVECULTURE_SENSITIVECULTURE")
				Me.OnSENSITIVECULTURE_SENSITIVECULTUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SENSITIVECULTURE_ENNAME() As String
		Get
			Return Me._SENSITIVECULTURE_ENNAME
		End Get
		Set
			If (String.Equals(Me._SENSITIVECULTURE_ENNAME, value) = false) Then
				Me.OnSENSITIVECULTURE_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_ENNAME = value
				Me.SendPropertyChanged("SENSITIVECULTURE_ENNAME")
				Me.OnSENSITIVECULTURE_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_NOTE", DbType:="NVarChar(200)")>  _
	Public Property SENSITIVECULTURE_NOTE() As String
		Get
			Return Me._SENSITIVECULTURE_NOTE
		End Get
		Set
			If (String.Equals(Me._SENSITIVECULTURE_NOTE, value) = false) Then
				Me.OnSENSITIVECULTURE_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_NOTE = value
				Me.SendPropertyChanged("SENSITIVECULTURE_NOTE")
				Me.OnSENSITIVECULTURE_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENSITIVECULTURE_ISDISABLED", DbType:="Int")>  _
	Public Property SENSITIVECULTURE_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SENSITIVECULTURE_ISDISABLED
		End Get
		Set
			If (Me._SENSITIVECULTURE_ISDISABLED.Equals(value) = false) Then
				Me.OnSENSITIVECULTURE_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SENSITIVECULTURE_ISDISABLED = value
				Me.SendPropertyChanged("SENSITIVECULTURE_ISDISABLED")
				Me.OnSENSITIVECULTURE_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SERVICE_HS_MAIN")>  _
Partial Public Class MAS_SERVICE_HS_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FK_PROCEDURE As System.Nullable(Of Integer)
	
	Private _HOSPITAL_ID As System.Nullable(Of Integer)
	
	Private _HOSPITAL_NAME As String
	
	Private _SERVICE_CHARGE As System.Nullable(Of Decimal)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PROCEDUREChanged()
    End Sub
    Partial Private Sub OnHOSPITAL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOSPITAL_IDChanged()
    End Sub
    Partial Private Sub OnHOSPITAL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITAL_NAMEChanged()
    End Sub
    Partial Private Sub OnSERVICE_CHARGEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSERVICE_CHARGEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PROCEDURE", DbType:="Int")>  _
	Public Property FK_PROCEDURE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PROCEDURE
		End Get
		Set
			If (Me._FK_PROCEDURE.Equals(value) = false) Then
				Me.OnFK_PROCEDUREChanging(value)
				Me.SendPropertyChanging
				Me._FK_PROCEDURE = value
				Me.SendPropertyChanged("FK_PROCEDURE")
				Me.OnFK_PROCEDUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITAL_ID", DbType:="Int")>  _
	Public Property HOSPITAL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HOSPITAL_ID
		End Get
		Set
			If (Me._HOSPITAL_ID.Equals(value) = false) Then
				Me.OnHOSPITAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITAL_ID = value
				Me.SendPropertyChanged("HOSPITAL_ID")
				Me.OnHOSPITAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITAL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property HOSPITAL_NAME() As String
		Get
			Return Me._HOSPITAL_NAME
		End Get
		Set
			If (String.Equals(Me._HOSPITAL_NAME, value) = false) Then
				Me.OnHOSPITAL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITAL_NAME = value
				Me.SendPropertyChanged("HOSPITAL_NAME")
				Me.OnHOSPITAL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_CHARGE", DbType:="Decimal(18,0)")>  _
	Public Property SERVICE_CHARGE() As System.Nullable(Of Decimal)
		Get
			Return Me._SERVICE_CHARGE
		End Get
		Set
			If (Me._SERVICE_CHARGE.Equals(value) = false) Then
				Me.OnSERVICE_CHARGEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_CHARGE = value
				Me.SendPropertyChanged("SERVICE_CHARGE")
				Me.OnSERVICE_CHARGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SERVICE_UNIT")>  _
Partial Public Class MAS_SERVICE_UNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SERVICE_UNIT_ID As Integer
	
	Private _SERVICE_UNIT_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_DEPARTMENTKRY As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_CODE As String
	
	Private _SERVICE_UNIT_SERVICENAME As String
	
	Private _SERVICE_UNIT_ENNAME As String
	
	Private _SERVICE_UNIT_SPECIALITYKEY As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_NOTE As String
	
	Private _SERVICE_UNIT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_SERVICEUNITTYPEKEY As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_INTISSUEREQSEQKEY As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_HASWAREHOUSE As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ABBRNAME As String
	
	Private _SERVICE_UNIT_CONSUMEWAREHOUSE As String
	
	Private _SERVICE_UNIT_DEFMEDWAREHOUSE As String
	
	Private _SERVICE_UNIT_ISANC As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISLR As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISNR As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISICU As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_INTTELNO As String
	
	Private _SERVICE_UNIT_ISER As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISHNREGISENABLED As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISHC As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISOR As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_HASNOMRVISITBORROW As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_ISUNREG As System.Nullable(Of Integer)
	
	Private _SERVICE_UNIT_HASNODOCTOR As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_DEPARTMENTKRYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_DEPARTMENTKRYChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_CODEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICENAMEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SPECIALITYKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SPECIALITYKEYChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_NOTEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICEUNITTYPEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_SERVICEUNITTYPEKEYChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_INTISSUEREQSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_INTISSUEREQSEQKEYChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASWAREHOUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASWAREHOUSEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_CONSUMEWAREHOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_CONSUMEWAREHOUSEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_DEFMEDWAREHOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_DEFMEDWAREHOUSEChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISANCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISANCChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISLRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISLRChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISNRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISNRChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISICUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISICUChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_INTTELNOChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICE_UNIT_INTTELNOChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISERChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISHNREGISENABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISHNREGISENABLEDChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISHCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISHCChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISORChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASNOMRVISITBORROWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASNOMRVISITBORROWChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISUNREGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_ISUNREGChanged()
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASNODOCTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICE_UNIT_HASNODOCTORChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SERVICE_UNIT_ID() As Integer
		Get
			Return Me._SERVICE_UNIT_ID
		End Get
		Set
			If ((Me._SERVICE_UNIT_ID = value)  _
						= false) Then
				Me.OnSERVICE_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ID = value
				Me.SendPropertyChanged("SERVICE_UNIT_ID")
				Me.OnSERVICE_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property SERVICE_UNIT_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_SERVICEUNITKEY
		End Get
		Set
			If (Me._SERVICE_UNIT_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_SERVICEUNITKEY = value
				Me.SendPropertyChanged("SERVICE_UNIT_SERVICEUNITKEY")
				Me.OnSERVICE_UNIT_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_DEPARTMENTKRY", DbType:="Int")>  _
	Public Property SERVICE_UNIT_DEPARTMENTKRY() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_DEPARTMENTKRY
		End Get
		Set
			If (Me._SERVICE_UNIT_DEPARTMENTKRY.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_DEPARTMENTKRYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_DEPARTMENTKRY = value
				Me.SendPropertyChanged("SERVICE_UNIT_DEPARTMENTKRY")
				Me.OnSERVICE_UNIT_DEPARTMENTKRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_CODE", DbType:="NVarChar(50)")>  _
	Public Property SERVICE_UNIT_CODE() As String
		Get
			Return Me._SERVICE_UNIT_CODE
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_CODE, value) = false) Then
				Me.OnSERVICE_UNIT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_CODE = value
				Me.SendPropertyChanged("SERVICE_UNIT_CODE")
				Me.OnSERVICE_UNIT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_SERVICENAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICE_UNIT_SERVICENAME() As String
		Get
			Return Me._SERVICE_UNIT_SERVICENAME
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_SERVICENAME, value) = false) Then
				Me.OnSERVICE_UNIT_SERVICENAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_SERVICENAME = value
				Me.SendPropertyChanged("SERVICE_UNIT_SERVICENAME")
				Me.OnSERVICE_UNIT_SERVICENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICE_UNIT_ENNAME() As String
		Get
			Return Me._SERVICE_UNIT_ENNAME
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_ENNAME, value) = false) Then
				Me.OnSERVICE_UNIT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ENNAME = value
				Me.SendPropertyChanged("SERVICE_UNIT_ENNAME")
				Me.OnSERVICE_UNIT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_SPECIALITYKEY", DbType:="Int")>  _
	Public Property SERVICE_UNIT_SPECIALITYKEY() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_SPECIALITYKEY
		End Get
		Set
			If (Me._SERVICE_UNIT_SPECIALITYKEY.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_SPECIALITYKEYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_SPECIALITYKEY = value
				Me.SendPropertyChanged("SERVICE_UNIT_SPECIALITYKEY")
				Me.OnSERVICE_UNIT_SPECIALITYKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICE_UNIT_NOTE() As String
		Get
			Return Me._SERVICE_UNIT_NOTE
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_NOTE, value) = false) Then
				Me.OnSERVICE_UNIT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_NOTE = value
				Me.SendPropertyChanged("SERVICE_UNIT_NOTE")
				Me.OnSERVICE_UNIT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISDISABLED", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISDISABLED
		End Get
		Set
			If (Me._SERVICE_UNIT_ISDISABLED.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISDISABLED = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISDISABLED")
				Me.OnSERVICE_UNIT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_SERVICEUNITTYPEKEY", DbType:="Int")>  _
	Public Property SERVICE_UNIT_SERVICEUNITTYPEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_SERVICEUNITTYPEKEY
		End Get
		Set
			If (Me._SERVICE_UNIT_SERVICEUNITTYPEKEY.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_SERVICEUNITTYPEKEYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_SERVICEUNITTYPEKEY = value
				Me.SendPropertyChanged("SERVICE_UNIT_SERVICEUNITTYPEKEY")
				Me.OnSERVICE_UNIT_SERVICEUNITTYPEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_INTISSUEREQSEQKEY", DbType:="Int")>  _
	Public Property SERVICE_UNIT_INTISSUEREQSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_INTISSUEREQSEQKEY
		End Get
		Set
			If (Me._SERVICE_UNIT_INTISSUEREQSEQKEY.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_INTISSUEREQSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_INTISSUEREQSEQKEY = value
				Me.SendPropertyChanged("SERVICE_UNIT_INTISSUEREQSEQKEY")
				Me.OnSERVICE_UNIT_INTISSUEREQSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_HASWAREHOUSE", DbType:="Int")>  _
	Public Property SERVICE_UNIT_HASWAREHOUSE() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_HASWAREHOUSE
		End Get
		Set
			If (Me._SERVICE_UNIT_HASWAREHOUSE.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_HASWAREHOUSEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_HASWAREHOUSE = value
				Me.SendPropertyChanged("SERVICE_UNIT_HASWAREHOUSE")
				Me.OnSERVICE_UNIT_HASWAREHOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ABBRNAME", DbType:="NVarChar(50)")>  _
	Public Property SERVICE_UNIT_ABBRNAME() As String
		Get
			Return Me._SERVICE_UNIT_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_ABBRNAME, value) = false) Then
				Me.OnSERVICE_UNIT_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ABBRNAME = value
				Me.SendPropertyChanged("SERVICE_UNIT_ABBRNAME")
				Me.OnSERVICE_UNIT_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_CONSUMEWAREHOUSE", DbType:="NVarChar(50)")>  _
	Public Property SERVICE_UNIT_CONSUMEWAREHOUSE() As String
		Get
			Return Me._SERVICE_UNIT_CONSUMEWAREHOUSE
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_CONSUMEWAREHOUSE, value) = false) Then
				Me.OnSERVICE_UNIT_CONSUMEWAREHOUSEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_CONSUMEWAREHOUSE = value
				Me.SendPropertyChanged("SERVICE_UNIT_CONSUMEWAREHOUSE")
				Me.OnSERVICE_UNIT_CONSUMEWAREHOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_DEFMEDWAREHOUSE", DbType:="NVarChar(50)")>  _
	Public Property SERVICE_UNIT_DEFMEDWAREHOUSE() As String
		Get
			Return Me._SERVICE_UNIT_DEFMEDWAREHOUSE
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_DEFMEDWAREHOUSE, value) = false) Then
				Me.OnSERVICE_UNIT_DEFMEDWAREHOUSEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_DEFMEDWAREHOUSE = value
				Me.SendPropertyChanged("SERVICE_UNIT_DEFMEDWAREHOUSE")
				Me.OnSERVICE_UNIT_DEFMEDWAREHOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISANC", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISANC() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISANC
		End Get
		Set
			If (Me._SERVICE_UNIT_ISANC.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISANCChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISANC = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISANC")
				Me.OnSERVICE_UNIT_ISANCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISLR", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISLR() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISLR
		End Get
		Set
			If (Me._SERVICE_UNIT_ISLR.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISLRChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISLR = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISLR")
				Me.OnSERVICE_UNIT_ISLRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISNR", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISNR() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISNR
		End Get
		Set
			If (Me._SERVICE_UNIT_ISNR.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISNRChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISNR = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISNR")
				Me.OnSERVICE_UNIT_ISNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISICU", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISICU() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISICU
		End Get
		Set
			If (Me._SERVICE_UNIT_ISICU.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISICUChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISICU = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISICU")
				Me.OnSERVICE_UNIT_ISICUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_INTTELNO", DbType:="NVarChar(50)")>  _
	Public Property SERVICE_UNIT_INTTELNO() As String
		Get
			Return Me._SERVICE_UNIT_INTTELNO
		End Get
		Set
			If (String.Equals(Me._SERVICE_UNIT_INTTELNO, value) = false) Then
				Me.OnSERVICE_UNIT_INTTELNOChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_INTTELNO = value
				Me.SendPropertyChanged("SERVICE_UNIT_INTTELNO")
				Me.OnSERVICE_UNIT_INTTELNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISER", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISER() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISER
		End Get
		Set
			If (Me._SERVICE_UNIT_ISER.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISERChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISER = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISER")
				Me.OnSERVICE_UNIT_ISERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISHNREGISENABLED", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISHNREGISENABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISHNREGISENABLED
		End Get
		Set
			If (Me._SERVICE_UNIT_ISHNREGISENABLED.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISHNREGISENABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISHNREGISENABLED = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISHNREGISENABLED")
				Me.OnSERVICE_UNIT_ISHNREGISENABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISHC", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISHC() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISHC
		End Get
		Set
			If (Me._SERVICE_UNIT_ISHC.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISHCChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISHC = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISHC")
				Me.OnSERVICE_UNIT_ISHCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISOR", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISOR() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISOR
		End Get
		Set
			If (Me._SERVICE_UNIT_ISOR.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISORChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISOR = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISOR")
				Me.OnSERVICE_UNIT_ISORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_HASNOMRVISITBORROW", DbType:="Int")>  _
	Public Property SERVICE_UNIT_HASNOMRVISITBORROW() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_HASNOMRVISITBORROW
		End Get
		Set
			If (Me._SERVICE_UNIT_HASNOMRVISITBORROW.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_HASNOMRVISITBORROWChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_HASNOMRVISITBORROW = value
				Me.SendPropertyChanged("SERVICE_UNIT_HASNOMRVISITBORROW")
				Me.OnSERVICE_UNIT_HASNOMRVISITBORROWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_ISUNREG", DbType:="Int")>  _
	Public Property SERVICE_UNIT_ISUNREG() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_ISUNREG
		End Get
		Set
			If (Me._SERVICE_UNIT_ISUNREG.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_ISUNREGChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_ISUNREG = value
				Me.SendPropertyChanged("SERVICE_UNIT_ISUNREG")
				Me.OnSERVICE_UNIT_ISUNREGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICE_UNIT_HASNODOCTOR", DbType:="Int")>  _
	Public Property SERVICE_UNIT_HASNODOCTOR() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICE_UNIT_HASNODOCTOR
		End Get
		Set
			If (Me._SERVICE_UNIT_HASNODOCTOR.Equals(value) = false) Then
				Me.OnSERVICE_UNIT_HASNODOCTORChanging(value)
				Me.SendPropertyChanging
				Me._SERVICE_UNIT_HASNODOCTOR = value
				Me.SendPropertyChanged("SERVICE_UNIT_HASNODOCTOR")
				Me.OnSERVICE_UNIT_HASNODOCTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SERVICEHEALS")>  _
Partial Public Class MAS_SERVICEHEAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SERVICEHEALS_ID As Integer
	
	Private _SERVICEHEALS_CODE As String
	
	Private _SERVICEHEALS_SEQ As String
	
	Private _SERVICEHEALS_NAME As String
	
	Private _SERVICEHEALS_ABBRNAME As String
	
	Private _SERVICEHEALS_NUMBER As String
	
	Private _SERVICEHEALS_FK_HEALS As System.Nullable(Of Integer)
	
	Private _SERVICEHEALS_FK_HEALSNAME As String
	
	Private _SERVICEHEALS_REMARK As String
	
	Private _SERVICEHEALS_ISHOSPITALPAY As System.Nullable(Of Boolean)
	
	Private _SERVICEHEALS_ISNOTUSE As System.Nullable(Of Boolean)
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _SERVICEHEALS_CURRENTPRICE As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSERVICEHEALS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERVICEHEALS_IDChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_CODEChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_SEQChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_SEQChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_NAMEChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_NUMBERChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_FK_HEALSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICEHEALS_FK_HEALSChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_FK_HEALSNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_FK_HEALSNAMEChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICEHEALS_REMARKChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_ISHOSPITALPAYChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSERVICEHEALS_ISHOSPITALPAYChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_ISNOTUSEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSERVICEHEALS_ISNOTUSEChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnSERVICEHEALS_CURRENTPRICEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSERVICEHEALS_CURRENTPRICEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SERVICEHEALS_ID() As Integer
		Get
			Return Me._SERVICEHEALS_ID
		End Get
		Set
			If ((Me._SERVICEHEALS_ID = value)  _
						= false) Then
				Me.OnSERVICEHEALS_IDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_ID = value
				Me.SendPropertyChanged("SERVICEHEALS_ID")
				Me.OnSERVICEHEALS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_CODE", DbType:="NVarChar(50)")>  _
	Public Property SERVICEHEALS_CODE() As String
		Get
			Return Me._SERVICEHEALS_CODE
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_CODE, value) = false) Then
				Me.OnSERVICEHEALS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_CODE = value
				Me.SendPropertyChanged("SERVICEHEALS_CODE")
				Me.OnSERVICEHEALS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_SEQ", DbType:="NVarChar(50)")>  _
	Public Property SERVICEHEALS_SEQ() As String
		Get
			Return Me._SERVICEHEALS_SEQ
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_SEQ, value) = false) Then
				Me.OnSERVICEHEALS_SEQChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_SEQ = value
				Me.SendPropertyChanged("SERVICEHEALS_SEQ")
				Me.OnSERVICEHEALS_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICEHEALS_NAME() As String
		Get
			Return Me._SERVICEHEALS_NAME
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_NAME, value) = false) Then
				Me.OnSERVICEHEALS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_NAME = value
				Me.SendPropertyChanged("SERVICEHEALS_NAME")
				Me.OnSERVICEHEALS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_ABBRNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICEHEALS_ABBRNAME() As String
		Get
			Return Me._SERVICEHEALS_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_ABBRNAME, value) = false) Then
				Me.OnSERVICEHEALS_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_ABBRNAME = value
				Me.SendPropertyChanged("SERVICEHEALS_ABBRNAME")
				Me.OnSERVICEHEALS_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICEHEALS_NUMBER() As String
		Get
			Return Me._SERVICEHEALS_NUMBER
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_NUMBER, value) = false) Then
				Me.OnSERVICEHEALS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_NUMBER = value
				Me.SendPropertyChanged("SERVICEHEALS_NUMBER")
				Me.OnSERVICEHEALS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_FK_HEALS", DbType:="Int")>  _
	Public Property SERVICEHEALS_FK_HEALS() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICEHEALS_FK_HEALS
		End Get
		Set
			If (Me._SERVICEHEALS_FK_HEALS.Equals(value) = false) Then
				Me.OnSERVICEHEALS_FK_HEALSChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_FK_HEALS = value
				Me.SendPropertyChanged("SERVICEHEALS_FK_HEALS")
				Me.OnSERVICEHEALS_FK_HEALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_FK_HEALSNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICEHEALS_FK_HEALSNAME() As String
		Get
			Return Me._SERVICEHEALS_FK_HEALSNAME
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_FK_HEALSNAME, value) = false) Then
				Me.OnSERVICEHEALS_FK_HEALSNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_FK_HEALSNAME = value
				Me.SendPropertyChanged("SERVICEHEALS_FK_HEALSNAME")
				Me.OnSERVICEHEALS_FK_HEALSNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICEHEALS_REMARK() As String
		Get
			Return Me._SERVICEHEALS_REMARK
		End Get
		Set
			If (String.Equals(Me._SERVICEHEALS_REMARK, value) = false) Then
				Me.OnSERVICEHEALS_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_REMARK = value
				Me.SendPropertyChanged("SERVICEHEALS_REMARK")
				Me.OnSERVICEHEALS_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_ISHOSPITALPAY", DbType:="Bit")>  _
	Public Property SERVICEHEALS_ISHOSPITALPAY() As System.Nullable(Of Boolean)
		Get
			Return Me._SERVICEHEALS_ISHOSPITALPAY
		End Get
		Set
			If (Me._SERVICEHEALS_ISHOSPITALPAY.Equals(value) = false) Then
				Me.OnSERVICEHEALS_ISHOSPITALPAYChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_ISHOSPITALPAY = value
				Me.SendPropertyChanged("SERVICEHEALS_ISHOSPITALPAY")
				Me.OnSERVICEHEALS_ISHOSPITALPAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_ISNOTUSE", DbType:="Bit")>  _
	Public Property SERVICEHEALS_ISNOTUSE() As System.Nullable(Of Boolean)
		Get
			Return Me._SERVICEHEALS_ISNOTUSE
		End Get
		Set
			If (Me._SERVICEHEALS_ISNOTUSE.Equals(value) = false) Then
				Me.OnSERVICEHEALS_ISNOTUSEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_ISNOTUSE = value
				Me.SendPropertyChanged("SERVICEHEALS_ISNOTUSE")
				Me.OnSERVICEHEALS_ISNOTUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICEHEALS_CURRENTPRICE", DbType:="Decimal(18,0)")>  _
	Public Property SERVICEHEALS_CURRENTPRICE() As System.Nullable(Of Decimal)
		Get
			Return Me._SERVICEHEALS_CURRENTPRICE
		End Get
		Set
			If (Me._SERVICEHEALS_CURRENTPRICE.Equals(value) = false) Then
				Me.OnSERVICEHEALS_CURRENTPRICEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICEHEALS_CURRENTPRICE = value
				Me.SendPropertyChanged("SERVICEHEALS_CURRENTPRICE")
				Me.OnSERVICEHEALS_CURRENTPRICEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SERVICES")>  _
Partial Public Class MAS_SERVICE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SERVICES_ID As Integer
	
	Private _SERVICES_CODE As String
	
	Private _SERVICES_DERVICENAME As String
	
	Private _SERVICES_ENNAME As String
	
	Private _SERVICES_NOTE As String
	
	Private _SERVICES_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSERVICES_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERVICES_IDChanged()
    End Sub
    Partial Private Sub OnSERVICES_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICES_CODEChanged()
    End Sub
    Partial Private Sub OnSERVICES_DERVICENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICES_DERVICENAMEChanged()
    End Sub
    Partial Private Sub OnSERVICES_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICES_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSERVICES_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSERVICES_NOTEChanged()
    End Sub
    Partial Private Sub OnSERVICES_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVICES_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SERVICES_ID() As Integer
		Get
			Return Me._SERVICES_ID
		End Get
		Set
			If ((Me._SERVICES_ID = value)  _
						= false) Then
				Me.OnSERVICES_IDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_ID = value
				Me.SendPropertyChanged("SERVICES_ID")
				Me.OnSERVICES_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_CODE", DbType:="NVarChar(50)")>  _
	Public Property SERVICES_CODE() As String
		Get
			Return Me._SERVICES_CODE
		End Get
		Set
			If (String.Equals(Me._SERVICES_CODE, value) = false) Then
				Me.OnSERVICES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_CODE = value
				Me.SendPropertyChanged("SERVICES_CODE")
				Me.OnSERVICES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_DERVICENAME", DbType:="NVarChar(200)")>  _
	Public Property SERVICES_DERVICENAME() As String
		Get
			Return Me._SERVICES_DERVICENAME
		End Get
		Set
			If (String.Equals(Me._SERVICES_DERVICENAME, value) = false) Then
				Me.OnSERVICES_DERVICENAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_DERVICENAME = value
				Me.SendPropertyChanged("SERVICES_DERVICENAME")
				Me.OnSERVICES_DERVICENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property SERVICES_ENNAME() As String
		Get
			Return Me._SERVICES_ENNAME
		End Get
		Set
			If (String.Equals(Me._SERVICES_ENNAME, value) = false) Then
				Me.OnSERVICES_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_ENNAME = value
				Me.SendPropertyChanged("SERVICES_ENNAME")
				Me.OnSERVICES_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SERVICES_NOTE() As String
		Get
			Return Me._SERVICES_NOTE
		End Get
		Set
			If (String.Equals(Me._SERVICES_NOTE, value) = false) Then
				Me.OnSERVICES_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_NOTE = value
				Me.SendPropertyChanged("SERVICES_NOTE")
				Me.OnSERVICES_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVICES_ISDISABLED", DbType:="Int")>  _
	Public Property SERVICES_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SERVICES_ISDISABLED
		End Get
		Set
			If (Me._SERVICES_ISDISABLED.Equals(value) = false) Then
				Me.OnSERVICES_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SERVICES_ISDISABLED = value
				Me.SendPropertyChanged("SERVICES_ISDISABLED")
				Me.OnSERVICES_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SERVPLACE")>  _
Partial Public Class MAS_SERVPLACE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SERVPLACE_ID As Integer
	
	Private _SERVPLACE_CODE As System.Nullable(Of Integer)
	
	Private _SERVPLACE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSERVPLACE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERVPLACE_IDChanged()
    End Sub
    Partial Private Sub OnSERVPLACE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSERVPLACE_CODEChanged()
    End Sub
    Partial Private Sub OnSERVPLACE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSERVPLACE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVPLACE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SERVPLACE_ID() As Integer
		Get
			Return Me._SERVPLACE_ID
		End Get
		Set
			If ((Me._SERVPLACE_ID = value)  _
						= false) Then
				Me.OnSERVPLACE_IDChanging(value)
				Me.SendPropertyChanging
				Me._SERVPLACE_ID = value
				Me.SendPropertyChanged("SERVPLACE_ID")
				Me.OnSERVPLACE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVPLACE_CODE", DbType:="Int")>  _
	Public Property SERVPLACE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._SERVPLACE_CODE
		End Get
		Set
			If (Me._SERVPLACE_CODE.Equals(value) = false) Then
				Me.OnSERVPLACE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SERVPLACE_CODE = value
				Me.SendPropertyChanged("SERVPLACE_CODE")
				Me.OnSERVPLACE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERVPLACE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property SERVPLACE_DESCRIPTION() As String
		Get
			Return Me._SERVPLACE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._SERVPLACE_DESCRIPTION, value) = false) Then
				Me.OnSERVPLACE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._SERVPLACE_DESCRIPTION = value
				Me.SendPropertyChanged("SERVPLACE_DESCRIPTION")
				Me.OnSERVPLACE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SEVERITY")>  _
Partial Public Class MAS_SEVERITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEVERITY_ID As Integer
	
	Private _SEVERITY_CODE As String
	
	Private _SEVERITY_SEVERITYNAME As String
	
	Private _SEVERITY_ENNAME As String
	
	Private _SEVERITY_NOTE As String
	
	Private _SEVERITY_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEVERITY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEVERITY_IDChanged()
    End Sub
    Partial Private Sub OnSEVERITY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSEVERITY_CODEChanged()
    End Sub
    Partial Private Sub OnSEVERITY_SEVERITYNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSEVERITY_SEVERITYNAMEChanged()
    End Sub
    Partial Private Sub OnSEVERITY_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSEVERITY_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSEVERITY_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSEVERITY_NOTEChanged()
    End Sub
    Partial Private Sub OnSEVERITY_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEVERITY_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEVERITY_ID() As Integer
		Get
			Return Me._SEVERITY_ID
		End Get
		Set
			If ((Me._SEVERITY_ID = value)  _
						= false) Then
				Me.OnSEVERITY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_ID = value
				Me.SendPropertyChanged("SEVERITY_ID")
				Me.OnSEVERITY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_CODE", DbType:="NVarChar(50)")>  _
	Public Property SEVERITY_CODE() As String
		Get
			Return Me._SEVERITY_CODE
		End Get
		Set
			If (String.Equals(Me._SEVERITY_CODE, value) = false) Then
				Me.OnSEVERITY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_CODE = value
				Me.SendPropertyChanged("SEVERITY_CODE")
				Me.OnSEVERITY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_SEVERITYNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SEVERITY_SEVERITYNAME() As String
		Get
			Return Me._SEVERITY_SEVERITYNAME
		End Get
		Set
			If (String.Equals(Me._SEVERITY_SEVERITYNAME, value) = false) Then
				Me.OnSEVERITY_SEVERITYNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_SEVERITYNAME = value
				Me.SendPropertyChanged("SEVERITY_SEVERITYNAME")
				Me.OnSEVERITY_SEVERITYNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SEVERITY_ENNAME() As String
		Get
			Return Me._SEVERITY_ENNAME
		End Get
		Set
			If (String.Equals(Me._SEVERITY_ENNAME, value) = false) Then
				Me.OnSEVERITY_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_ENNAME = value
				Me.SendPropertyChanged("SEVERITY_ENNAME")
				Me.OnSEVERITY_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SEVERITY_NOTE() As String
		Get
			Return Me._SEVERITY_NOTE
		End Get
		Set
			If (String.Equals(Me._SEVERITY_NOTE, value) = false) Then
				Me.OnSEVERITY_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_NOTE = value
				Me.SendPropertyChanged("SEVERITY_NOTE")
				Me.OnSEVERITY_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEVERITY_ISDISABLED", DbType:="Int")>  _
	Public Property SEVERITY_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SEVERITY_ISDISABLED
		End Get
		Set
			If (Me._SEVERITY_ISDISABLED.Equals(value) = false) Then
				Me.OnSEVERITY_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SEVERITY_ISDISABLED = value
				Me.SendPropertyChanged("SEVERITY_ISDISABLED")
				Me.OnSEVERITY_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SEX")>  _
Partial Public Class MAS_SEX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEX_ID As Integer
	
	Private _SEX_CODE As System.Nullable(Of Integer)
	
	Private _SEX_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEX_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEX_IDChanged()
    End Sub
    Partial Private Sub OnSEX_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEX_CODEChanged()
    End Sub
    Partial Private Sub OnSEX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSEX_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEX_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEX_ID() As Integer
		Get
			Return Me._SEX_ID
		End Get
		Set
			If ((Me._SEX_ID = value)  _
						= false) Then
				Me.OnSEX_IDChanging(value)
				Me.SendPropertyChanging
				Me._SEX_ID = value
				Me.SendPropertyChanged("SEX_ID")
				Me.OnSEX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEX_CODE", DbType:="Int")>  _
	Public Property SEX_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._SEX_CODE
		End Get
		Set
			If (Me._SEX_CODE.Equals(value) = false) Then
				Me.OnSEX_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SEX_CODE = value
				Me.SendPropertyChanged("SEX_CODE")
				Me.OnSEX_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEX_NAME", DbType:="VarChar(MAX)")>  _
	Public Property SEX_NAME() As String
		Get
			Return Me._SEX_NAME
		End Get
		Set
			If (String.Equals(Me._SEX_NAME, value) = false) Then
				Me.OnSEX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SEX_NAME = value
				Me.SendPropertyChanged("SEX_NAME")
				Me.OnSEX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SPECIALIZATION")>  _
Partial Public Class MAS_SPECIALIZATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SPECIALIZATION_ID As Integer
	
	Private _SPECIALIZATION_CODE As String
	
	Private _SPECIALIZATION_PROFESSIONKEY As String
	
	Private _SPECIALIZATION_SPECIALNAME As String
	
	Private _SPECIALIZATION_ENNAME As String
	
	Private _SPECIALIZATION_NOTE As String
	
	Private _SPECIALIZATION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _SPECIALIZATION_ABBRNAME As String
	
	Private _SPECIALIZATION_F12CLINICKEY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSPECIALIZATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSPECIALIZATION_IDChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_PROFESSIONKEYChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_PROFESSIONKEYChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_SPECIALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_SPECIALNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_NOTEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPECIALIZATION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_ABBRNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_ABBRNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_F12CLINICKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPECIALIZATION_F12CLINICKEYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SPECIALIZATION_ID() As Integer
		Get
			Return Me._SPECIALIZATION_ID
		End Get
		Set
			If ((Me._SPECIALIZATION_ID = value)  _
						= false) Then
				Me.OnSPECIALIZATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_ID = value
				Me.SendPropertyChanged("SPECIALIZATION_ID")
				Me.OnSPECIALIZATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_CODE", DbType:="NVarChar(50)")>  _
	Public Property SPECIALIZATION_CODE() As String
		Get
			Return Me._SPECIALIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_CODE, value) = false) Then
				Me.OnSPECIALIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_CODE = value
				Me.SendPropertyChanged("SPECIALIZATION_CODE")
				Me.OnSPECIALIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_PROFESSIONKEY", DbType:="NVarChar(50)")>  _
	Public Property SPECIALIZATION_PROFESSIONKEY() As String
		Get
			Return Me._SPECIALIZATION_PROFESSIONKEY
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_PROFESSIONKEY, value) = false) Then
				Me.OnSPECIALIZATION_PROFESSIONKEYChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_PROFESSIONKEY = value
				Me.SendPropertyChanged("SPECIALIZATION_PROFESSIONKEY")
				Me.OnSPECIALIZATION_PROFESSIONKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_SPECIALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_SPECIALNAME() As String
		Get
			Return Me._SPECIALIZATION_SPECIALNAME
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_SPECIALNAME, value) = false) Then
				Me.OnSPECIALIZATION_SPECIALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_SPECIALNAME = value
				Me.SendPropertyChanged("SPECIALIZATION_SPECIALNAME")
				Me.OnSPECIALIZATION_SPECIALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_ENNAME() As String
		Get
			Return Me._SPECIALIZATION_ENNAME
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_ENNAME, value) = false) Then
				Me.OnSPECIALIZATION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_ENNAME = value
				Me.SendPropertyChanged("SPECIALIZATION_ENNAME")
				Me.OnSPECIALIZATION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_NOTE() As String
		Get
			Return Me._SPECIALIZATION_NOTE
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_NOTE, value) = false) Then
				Me.OnSPECIALIZATION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_NOTE = value
				Me.SendPropertyChanged("SPECIALIZATION_NOTE")
				Me.OnSPECIALIZATION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_ISDISABLED", DbType:="Int")>  _
	Public Property SPECIALIZATION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SPECIALIZATION_ISDISABLED
		End Get
		Set
			If (Me._SPECIALIZATION_ISDISABLED.Equals(value) = false) Then
				Me.OnSPECIALIZATION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_ISDISABLED = value
				Me.SendPropertyChanged("SPECIALIZATION_ISDISABLED")
				Me.OnSPECIALIZATION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_ABBRNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_ABBRNAME() As String
		Get
			Return Me._SPECIALIZATION_ABBRNAME
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_ABBRNAME, value) = false) Then
				Me.OnSPECIALIZATION_ABBRNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_ABBRNAME = value
				Me.SendPropertyChanged("SPECIALIZATION_ABBRNAME")
				Me.OnSPECIALIZATION_ABBRNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_F12CLINICKEY", DbType:="Int")>  _
	Public Property SPECIALIZATION_F12CLINICKEY() As System.Nullable(Of Integer)
		Get
			Return Me._SPECIALIZATION_F12CLINICKEY
		End Get
		Set
			If (Me._SPECIALIZATION_F12CLINICKEY.Equals(value) = false) Then
				Me.OnSPECIALIZATION_F12CLINICKEYChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_F12CLINICKEY = value
				Me.SendPropertyChanged("SPECIALIZATION_F12CLINICKEY")
				Me.OnSPECIALIZATION_F12CLINICKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SPECIALIZATION_EXTRA")>  _
Partial Public Class MAS_SPECIALIZATION_EXTRA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SPECIALIZATION_EXTRA_ID As Integer
	
	Private _SPECIALIZATION_EXTRA_CODE As String
	
	Private _SPECIALIZATION_EXTRA_SPECIALKEY As String
	
	Private _SPECIALIZATION_EXTRA_SPECIALNAME As String
	
	Private _SPECIALIZATION_EXTRA_ENNAME As String
	
	Private _SPECIALIZATION_EXTRA_NOTE As String
	
	Private _SPECIALIZATION_EXTRA_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_IDChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_CODEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_SPECIALKEYChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_SPECIALKEYChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_SPECIALNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_SPECIALNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_NOTEChanged()
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPECIALIZATION_EXTRA_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SPECIALIZATION_EXTRA_ID() As Integer
		Get
			Return Me._SPECIALIZATION_EXTRA_ID
		End Get
		Set
			If ((Me._SPECIALIZATION_EXTRA_ID = value)  _
						= false) Then
				Me.OnSPECIALIZATION_EXTRA_IDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_ID = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_ID")
				Me.OnSPECIALIZATION_EXTRA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_CODE", DbType:="NVarChar(50)")>  _
	Public Property SPECIALIZATION_EXTRA_CODE() As String
		Get
			Return Me._SPECIALIZATION_EXTRA_CODE
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_EXTRA_CODE, value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_CODE = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_CODE")
				Me.OnSPECIALIZATION_EXTRA_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_SPECIALKEY", DbType:="NVarChar(50)")>  _
	Public Property SPECIALIZATION_EXTRA_SPECIALKEY() As String
		Get
			Return Me._SPECIALIZATION_EXTRA_SPECIALKEY
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_EXTRA_SPECIALKEY, value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_SPECIALKEYChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_SPECIALKEY = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_SPECIALKEY")
				Me.OnSPECIALIZATION_EXTRA_SPECIALKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_SPECIALNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_EXTRA_SPECIALNAME() As String
		Get
			Return Me._SPECIALIZATION_EXTRA_SPECIALNAME
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_EXTRA_SPECIALNAME, value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_SPECIALNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_SPECIALNAME = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_SPECIALNAME")
				Me.OnSPECIALIZATION_EXTRA_SPECIALNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_EXTRA_ENNAME() As String
		Get
			Return Me._SPECIALIZATION_EXTRA_ENNAME
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_EXTRA_ENNAME, value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_ENNAME = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_ENNAME")
				Me.OnSPECIALIZATION_EXTRA_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIALIZATION_EXTRA_NOTE() As String
		Get
			Return Me._SPECIALIZATION_EXTRA_NOTE
		End Get
		Set
			If (String.Equals(Me._SPECIALIZATION_EXTRA_NOTE, value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_NOTE = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_NOTE")
				Me.OnSPECIALIZATION_EXTRA_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALIZATION_EXTRA_ISDISABLED", DbType:="Int")>  _
	Public Property SPECIALIZATION_EXTRA_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SPECIALIZATION_EXTRA_ISDISABLED
		End Get
		Set
			If (Me._SPECIALIZATION_EXTRA_ISDISABLED.Equals(value) = false) Then
				Me.OnSPECIALIZATION_EXTRA_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIALIZATION_EXTRA_ISDISABLED = value
				Me.SendPropertyChanged("SPECIALIZATION_EXTRA_ISDISABLED")
				Me.OnSPECIALIZATION_EXTRA_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SPECIFIC_FOOD")>  _
Partial Public Class MAS_SPECIFIC_FOOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SPECIFIC_FOOD_ID As Integer
	
	Private _SPECIFIC_FOOD_CODE As String
	
	Private _SPECIFIC_FOOD_NAME As String
	
	Private _SPECIFIC_FOOD_ENNAME As String
	
	Private _SPECIFIC_FOOD_NOTE As String
	
	Private _SPECIFIC_FOOD_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_IDChanged()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_CODEChanged()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_NAMEChanged()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_NOTEChanged()
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPECIFIC_FOOD_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SPECIFIC_FOOD_ID() As Integer
		Get
			Return Me._SPECIFIC_FOOD_ID
		End Get
		Set
			If ((Me._SPECIFIC_FOOD_ID = value)  _
						= false) Then
				Me.OnSPECIFIC_FOOD_IDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_ID = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_ID")
				Me.OnSPECIFIC_FOOD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIFIC_FOOD_CODE() As String
		Get
			Return Me._SPECIFIC_FOOD_CODE
		End Get
		Set
			If (String.Equals(Me._SPECIFIC_FOOD_CODE, value) = false) Then
				Me.OnSPECIFIC_FOOD_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_CODE = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_CODE")
				Me.OnSPECIFIC_FOOD_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIFIC_FOOD_NAME() As String
		Get
			Return Me._SPECIFIC_FOOD_NAME
		End Get
		Set
			If (String.Equals(Me._SPECIFIC_FOOD_NAME, value) = false) Then
				Me.OnSPECIFIC_FOOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_NAME = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_NAME")
				Me.OnSPECIFIC_FOOD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIFIC_FOOD_ENNAME() As String
		Get
			Return Me._SPECIFIC_FOOD_ENNAME
		End Get
		Set
			If (String.Equals(Me._SPECIFIC_FOOD_ENNAME, value) = false) Then
				Me.OnSPECIFIC_FOOD_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_ENNAME = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_ENNAME")
				Me.OnSPECIFIC_FOOD_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIFIC_FOOD_NOTE() As String
		Get
			Return Me._SPECIFIC_FOOD_NOTE
		End Get
		Set
			If (String.Equals(Me._SPECIFIC_FOOD_NOTE, value) = false) Then
				Me.OnSPECIFIC_FOOD_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_NOTE = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_NOTE")
				Me.OnSPECIFIC_FOOD_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIFIC_FOOD_ISDISABLED", DbType:="Int")>  _
	Public Property SPECIFIC_FOOD_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._SPECIFIC_FOOD_ISDISABLED
		End Get
		Set
			If (Me._SPECIFIC_FOOD_ISDISABLED.Equals(value) = false) Then
				Me.OnSPECIFIC_FOOD_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIFIC_FOOD_ISDISABLED = value
				Me.SendPropertyChanged("SPECIFIC_FOOD_ISDISABLED")
				Me.OnSPECIFIC_FOOD_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SPECIMEN")>  _
Partial Public Class MAS_SPECIMEN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SPECIMEN_ID As Integer
	
	Private _SPECIMEN_KEY As System.Nullable(Of Integer)
	
	Private _SPECIMEN_CODE As String
	
	Private _SPECIMEN_NAME As String
	
	Private _SPECIMEN_ENNAME As String
	
	Private _SPECIMEN_UNIT As String
	
	Private _SPECIMEN_NOTE As String
	
	Private _SPECIMEN_ISDISABLED As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSPECIMEN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSPECIMEN_IDChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPECIMEN_KEYChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIMEN_CODEChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIMEN_NAMEChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIMEN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIMEN_UNITChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIMEN_NOTEChanged()
    End Sub
    Partial Private Sub OnSPECIMEN_ISDISABLEDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSPECIMEN_ISDISABLEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SPECIMEN_ID() As Integer
		Get
			Return Me._SPECIMEN_ID
		End Get
		Set
			If ((Me._SPECIMEN_ID = value)  _
						= false) Then
				Me.OnSPECIMEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_ID = value
				Me.SendPropertyChanged("SPECIMEN_ID")
				Me.OnSPECIMEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_KEY", DbType:="Int")>  _
	Public Property SPECIMEN_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._SPECIMEN_KEY
		End Get
		Set
			If (Me._SPECIMEN_KEY.Equals(value) = false) Then
				Me.OnSPECIMEN_KEYChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_KEY = value
				Me.SendPropertyChanged("SPECIMEN_KEY")
				Me.OnSPECIMEN_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_CODE", DbType:="NVarChar(10)")>  _
	Public Property SPECIMEN_CODE() As String
		Get
			Return Me._SPECIMEN_CODE
		End Get
		Set
			If (String.Equals(Me._SPECIMEN_CODE, value) = false) Then
				Me.OnSPECIMEN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_CODE = value
				Me.SendPropertyChanged("SPECIMEN_CODE")
				Me.OnSPECIMEN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_NAME", DbType:="NVarChar(100)")>  _
	Public Property SPECIMEN_NAME() As String
		Get
			Return Me._SPECIMEN_NAME
		End Get
		Set
			If (String.Equals(Me._SPECIMEN_NAME, value) = false) Then
				Me.OnSPECIMEN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_NAME = value
				Me.SendPropertyChanged("SPECIMEN_NAME")
				Me.OnSPECIMEN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_ENNAME", DbType:="NVarChar(100)")>  _
	Public Property SPECIMEN_ENNAME() As String
		Get
			Return Me._SPECIMEN_ENNAME
		End Get
		Set
			If (String.Equals(Me._SPECIMEN_ENNAME, value) = false) Then
				Me.OnSPECIMEN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_ENNAME = value
				Me.SendPropertyChanged("SPECIMEN_ENNAME")
				Me.OnSPECIMEN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_UNIT", DbType:="NVarChar(100)")>  _
	Public Property SPECIMEN_UNIT() As String
		Get
			Return Me._SPECIMEN_UNIT
		End Get
		Set
			If (String.Equals(Me._SPECIMEN_UNIT, value) = false) Then
				Me.OnSPECIMEN_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_UNIT = value
				Me.SendPropertyChanged("SPECIMEN_UNIT")
				Me.OnSPECIMEN_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIMEN_NOTE() As String
		Get
			Return Me._SPECIMEN_NOTE
		End Get
		Set
			If (String.Equals(Me._SPECIMEN_NOTE, value) = false) Then
				Me.OnSPECIMEN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_NOTE = value
				Me.SendPropertyChanged("SPECIMEN_NOTE")
				Me.OnSPECIMEN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIMEN_ISDISABLED", DbType:="Bit")>  _
	Public Property SPECIMEN_ISDISABLED() As System.Nullable(Of Boolean)
		Get
			Return Me._SPECIMEN_ISDISABLED
		End Get
		Set
			If (Me._SPECIMEN_ISDISABLED.Equals(value) = false) Then
				Me.OnSPECIMEN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._SPECIMEN_ISDISABLED = value
				Me.SendPropertyChanged("SPECIMEN_ISDISABLED")
				Me.OnSPECIMEN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS")>  _
Partial Public Class MAS_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STATUS_ID As Integer
	
	Private _STATUS_CODE As String
	
	Private _STATUS_STATUSNAME As String
	
	Private _STATUS_ENNAME As String
	
	Private _STATUS_NOTE As String
	
	Private _STATUS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _F12MARRIAGE As System.Nullable(Of Integer)
	
	Private _F18MARRIAGE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CODEChanged()
    End Sub
    Partial Private Sub OnSTATUS_STATUSNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_STATUSNAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NOTEChanged()
    End Sub
    Partial Private Sub OnSTATUS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnF12MARRIAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnF12MARRIAGEChanged()
    End Sub
    Partial Private Sub OnF18MARRIAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnF18MARRIAGEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STATUS_ID() As Integer
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If ((Me._STATUS_ID = value)  _
						= false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CODE", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CODE() As String
		Get
			Return Me._STATUS_CODE
		End Get
		Set
			If (String.Equals(Me._STATUS_CODE, value) = false) Then
				Me.OnSTATUS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CODE = value
				Me.SendPropertyChanged("STATUS_CODE")
				Me.OnSTATUS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_STATUSNAME", DbType:="NVarChar(50)")>  _
	Public Property STATUS_STATUSNAME() As String
		Get
			Return Me._STATUS_STATUSNAME
		End Get
		Set
			If (String.Equals(Me._STATUS_STATUSNAME, value) = false) Then
				Me.OnSTATUS_STATUSNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_STATUSNAME = value
				Me.SendPropertyChanged("STATUS_STATUSNAME")
				Me.OnSTATUS_STATUSNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ENNAME", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ENNAME() As String
		Get
			Return Me._STATUS_ENNAME
		End Get
		Set
			If (String.Equals(Me._STATUS_ENNAME, value) = false) Then
				Me.OnSTATUS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ENNAME = value
				Me.SendPropertyChanged("STATUS_ENNAME")
				Me.OnSTATUS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NOTE", DbType:="NVarChar(50)")>  _
	Public Property STATUS_NOTE() As String
		Get
			Return Me._STATUS_NOTE
		End Get
		Set
			If (String.Equals(Me._STATUS_NOTE, value) = false) Then
				Me.OnSTATUS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NOTE = value
				Me.SendPropertyChanged("STATUS_NOTE")
				Me.OnSTATUS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ISDISABLED", DbType:="Int")>  _
	Public Property STATUS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ISDISABLED
		End Get
		Set
			If (Me._STATUS_ISDISABLED.Equals(value) = false) Then
				Me.OnSTATUS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ISDISABLED = value
				Me.SendPropertyChanged("STATUS_ISDISABLED")
				Me.OnSTATUS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F12MARRIAGE", DbType:="Int")>  _
	Public Property F12MARRIAGE() As System.Nullable(Of Integer)
		Get
			Return Me._F12MARRIAGE
		End Get
		Set
			If (Me._F12MARRIAGE.Equals(value) = false) Then
				Me.OnF12MARRIAGEChanging(value)
				Me.SendPropertyChanging
				Me._F12MARRIAGE = value
				Me.SendPropertyChanged("F12MARRIAGE")
				Me.OnF12MARRIAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F18MARRIAGE", DbType:="Int")>  _
	Public Property F18MARRIAGE() As System.Nullable(Of Integer)
		Get
			Return Me._F18MARRIAGE
		End Get
		Set
			If (Me._F18MARRIAGE.Equals(value) = false) Then
				Me.OnF18MARRIAGEChanging(value)
				Me.SendPropertyChanging
				Me._F18MARRIAGE = value
				Me.SendPropertyChanged("F18MARRIAGE")
				Me.OnF18MARRIAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS_RECEIPT")>  _
Partial Public Class MAS_STATUS_RECEIPT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STATUS_RECEIPT_ID As Integer
	
	Private _STATUS_RECEIPT_CODE As String
	
	Private _STATUS_RECEIPT_NAME As String
	
	Private _STATUS_RECEIPT_ENNAME As String
	
	Private _STATUS_RECEIPT_NOTE As String
	
	Private _STATUS_RECEIPT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_CODEChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_NOTEChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_RECEIPT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STATUS_RECEIPT_ID() As Integer
		Get
			Return Me._STATUS_RECEIPT_ID
		End Get
		Set
			If ((Me._STATUS_RECEIPT_ID = value)  _
						= false) Then
				Me.OnSTATUS_RECEIPT_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_ID = value
				Me.SendPropertyChanged("STATUS_RECEIPT_ID")
				Me.OnSTATUS_RECEIPT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_RECEIPT_CODE() As String
		Get
			Return Me._STATUS_RECEIPT_CODE
		End Get
		Set
			If (String.Equals(Me._STATUS_RECEIPT_CODE, value) = false) Then
				Me.OnSTATUS_RECEIPT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_CODE = value
				Me.SendPropertyChanged("STATUS_RECEIPT_CODE")
				Me.OnSTATUS_RECEIPT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_RECEIPT_NAME() As String
		Get
			Return Me._STATUS_RECEIPT_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_RECEIPT_NAME, value) = false) Then
				Me.OnSTATUS_RECEIPT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_NAME = value
				Me.SendPropertyChanged("STATUS_RECEIPT_NAME")
				Me.OnSTATUS_RECEIPT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_RECEIPT_ENNAME() As String
		Get
			Return Me._STATUS_RECEIPT_ENNAME
		End Get
		Set
			If (String.Equals(Me._STATUS_RECEIPT_ENNAME, value) = false) Then
				Me.OnSTATUS_RECEIPT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_ENNAME = value
				Me.SendPropertyChanged("STATUS_RECEIPT_ENNAME")
				Me.OnSTATUS_RECEIPT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_RECEIPT_NOTE() As String
		Get
			Return Me._STATUS_RECEIPT_NOTE
		End Get
		Set
			If (String.Equals(Me._STATUS_RECEIPT_NOTE, value) = false) Then
				Me.OnSTATUS_RECEIPT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_NOTE = value
				Me.SendPropertyChanged("STATUS_RECEIPT_NOTE")
				Me.OnSTATUS_RECEIPT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT_ISDISABLED", DbType:="Int")>  _
	Public Property STATUS_RECEIPT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_RECEIPT_ISDISABLED
		End Get
		Set
			If (Me._STATUS_RECEIPT_ISDISABLED.Equals(value) = false) Then
				Me.OnSTATUS_RECEIPT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT_ISDISABLED = value
				Me.SendPropertyChanged("STATUS_RECEIPT_ISDISABLED")
				Me.OnSTATUS_RECEIPT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUSPATIENT")>  _
Partial Public Class MAS_STATUSPATIENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STATUSPATIENT_ID As Integer
	
	Private _STATUSPATIENT_IPTCATEGORY As System.Nullable(Of Integer)
	
	Private _STATUSPATIENT_CODE As String
	
	Private _STATUSPATIENT_STATUSNAME As String
	
	Private _STATUSPATIENT_ENNAME As String
	
	Private _STATUSPATIENT_NOTE As String
	
	Private _STATUSPATIENT_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTATUSPATIENT_IDChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_IPTCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSPATIENT_IPTCATEGORYChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSPATIENT_CODEChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_STATUSNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSPATIENT_STATUSNAMEChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSPATIENT_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSPATIENT_NOTEChanged()
    End Sub
    Partial Private Sub OnSTATUSPATIENT_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSPATIENT_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STATUSPATIENT_ID() As Integer
		Get
			Return Me._STATUSPATIENT_ID
		End Get
		Set
			If ((Me._STATUSPATIENT_ID = value)  _
						= false) Then
				Me.OnSTATUSPATIENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_ID = value
				Me.SendPropertyChanged("STATUSPATIENT_ID")
				Me.OnSTATUSPATIENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_IPTCATEGORY", DbType:="Int")>  _
	Public Property STATUSPATIENT_IPTCATEGORY() As System.Nullable(Of Integer)
		Get
			Return Me._STATUSPATIENT_IPTCATEGORY
		End Get
		Set
			If (Me._STATUSPATIENT_IPTCATEGORY.Equals(value) = false) Then
				Me.OnSTATUSPATIENT_IPTCATEGORYChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_IPTCATEGORY = value
				Me.SendPropertyChanged("STATUSPATIENT_IPTCATEGORY")
				Me.OnSTATUSPATIENT_IPTCATEGORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_CODE", DbType:="NVarChar(50)")>  _
	Public Property STATUSPATIENT_CODE() As String
		Get
			Return Me._STATUSPATIENT_CODE
		End Get
		Set
			If (String.Equals(Me._STATUSPATIENT_CODE, value) = false) Then
				Me.OnSTATUSPATIENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_CODE = value
				Me.SendPropertyChanged("STATUSPATIENT_CODE")
				Me.OnSTATUSPATIENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_STATUSNAME", DbType:="NVarChar(200)")>  _
	Public Property STATUSPATIENT_STATUSNAME() As String
		Get
			Return Me._STATUSPATIENT_STATUSNAME
		End Get
		Set
			If (String.Equals(Me._STATUSPATIENT_STATUSNAME, value) = false) Then
				Me.OnSTATUSPATIENT_STATUSNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_STATUSNAME = value
				Me.SendPropertyChanged("STATUSPATIENT_STATUSNAME")
				Me.OnSTATUSPATIENT_STATUSNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUSPATIENT_ENNAME() As String
		Get
			Return Me._STATUSPATIENT_ENNAME
		End Get
		Set
			If (String.Equals(Me._STATUSPATIENT_ENNAME, value) = false) Then
				Me.OnSTATUSPATIENT_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_ENNAME = value
				Me.SendPropertyChanged("STATUSPATIENT_ENNAME")
				Me.OnSTATUSPATIENT_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property STATUSPATIENT_NOTE() As String
		Get
			Return Me._STATUSPATIENT_NOTE
		End Get
		Set
			If (String.Equals(Me._STATUSPATIENT_NOTE, value) = false) Then
				Me.OnSTATUSPATIENT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_NOTE = value
				Me.SendPropertyChanged("STATUSPATIENT_NOTE")
				Me.OnSTATUSPATIENT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUSPATIENT_ISDISABLED", DbType:="Int")>  _
	Public Property STATUSPATIENT_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._STATUSPATIENT_ISDISABLED
		End Get
		Set
			If (Me._STATUSPATIENT_ISDISABLED.Equals(value) = false) Then
				Me.OnSTATUSPATIENT_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._STATUSPATIENT_ISDISABLED = value
				Me.SendPropertyChanged("STATUSPATIENT_ISDISABLED")
				Me.OnSTATUSPATIENT_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STYLEDRUG")>  _
Partial Public Class MAS_STYLEDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STYLEDRUG_ID As Integer
	
	Private _STYLEDRUG_CODE As String
	
	Private _STYLEDRUG_STYLENAME As String
	
	Private _STYLEDRUG_ENNAME As String
	
	Private _STYLEDRUG_NOTE As String
	
	Private _STYLEDRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTYLEDRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTYLEDRUG_IDChanged()
    End Sub
    Partial Private Sub OnSTYLEDRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEDRUG_CODEChanged()
    End Sub
    Partial Private Sub OnSTYLEDRUG_STYLENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEDRUG_STYLENAMEChanged()
    End Sub
    Partial Private Sub OnSTYLEDRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEDRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSTYLEDRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEDRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnSTYLEDRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYLEDRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STYLEDRUG_ID() As Integer
		Get
			Return Me._STYLEDRUG_ID
		End Get
		Set
			If ((Me._STYLEDRUG_ID = value)  _
						= false) Then
				Me.OnSTYLEDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_ID = value
				Me.SendPropertyChanged("STYLEDRUG_ID")
				Me.OnSTYLEDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property STYLEDRUG_CODE() As String
		Get
			Return Me._STYLEDRUG_CODE
		End Get
		Set
			If (String.Equals(Me._STYLEDRUG_CODE, value) = false) Then
				Me.OnSTYLEDRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_CODE = value
				Me.SendPropertyChanged("STYLEDRUG_CODE")
				Me.OnSTYLEDRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_STYLENAME", DbType:="NVarChar(200)")>  _
	Public Property STYLEDRUG_STYLENAME() As String
		Get
			Return Me._STYLEDRUG_STYLENAME
		End Get
		Set
			If (String.Equals(Me._STYLEDRUG_STYLENAME, value) = false) Then
				Me.OnSTYLEDRUG_STYLENAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_STYLENAME = value
				Me.SendPropertyChanged("STYLEDRUG_STYLENAME")
				Me.OnSTYLEDRUG_STYLENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property STYLEDRUG_ENNAME() As String
		Get
			Return Me._STYLEDRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._STYLEDRUG_ENNAME, value) = false) Then
				Me.OnSTYLEDRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_ENNAME = value
				Me.SendPropertyChanged("STYLEDRUG_ENNAME")
				Me.OnSTYLEDRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property STYLEDRUG_NOTE() As String
		Get
			Return Me._STYLEDRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._STYLEDRUG_NOTE, value) = false) Then
				Me.OnSTYLEDRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_NOTE = value
				Me.SendPropertyChanged("STYLEDRUG_NOTE")
				Me.OnSTYLEDRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEDRUG_ISDISABLED", DbType:="Int")>  _
	Public Property STYLEDRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._STYLEDRUG_ISDISABLED
		End Get
		Set
			If (Me._STYLEDRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnSTYLEDRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._STYLEDRUG_ISDISABLED = value
				Me.SendPropertyChanged("STYLEDRUG_ISDISABLED")
				Me.OnSTYLEDRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STYLEHOSPITAL")>  _
Partial Public Class MAS_STYLEHOSPITAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STYLEHOSPITAL_ID As Integer
	
	Private _STYLEHOSPITAL_CODE As String
	
	Private _STYLEHOSPITAL_STYLENAME As String
	
	Private _STYLEHOSPITAL_ENNAME As String
	
	Private _STYLEHOSPITAL_NOTE As String
	
	Private _STYLEHOSPITAL_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_IDChanged()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_CODEChanged()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_STYLENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_STYLENAMEChanged()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_ENNAMEChanged()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_NOTEChanged()
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYLEHOSPITAL_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STYLEHOSPITAL_ID() As Integer
		Get
			Return Me._STYLEHOSPITAL_ID
		End Get
		Set
			If ((Me._STYLEHOSPITAL_ID = value)  _
						= false) Then
				Me.OnSTYLEHOSPITAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_ID = value
				Me.SendPropertyChanged("STYLEHOSPITAL_ID")
				Me.OnSTYLEHOSPITAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_CODE", DbType:="NVarChar(50)")>  _
	Public Property STYLEHOSPITAL_CODE() As String
		Get
			Return Me._STYLEHOSPITAL_CODE
		End Get
		Set
			If (String.Equals(Me._STYLEHOSPITAL_CODE, value) = false) Then
				Me.OnSTYLEHOSPITAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_CODE = value
				Me.SendPropertyChanged("STYLEHOSPITAL_CODE")
				Me.OnSTYLEHOSPITAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_STYLENAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYLEHOSPITAL_STYLENAME() As String
		Get
			Return Me._STYLEHOSPITAL_STYLENAME
		End Get
		Set
			If (String.Equals(Me._STYLEHOSPITAL_STYLENAME, value) = false) Then
				Me.OnSTYLEHOSPITAL_STYLENAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_STYLENAME = value
				Me.SendPropertyChanged("STYLEHOSPITAL_STYLENAME")
				Me.OnSTYLEHOSPITAL_STYLENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYLEHOSPITAL_ENNAME() As String
		Get
			Return Me._STYLEHOSPITAL_ENNAME
		End Get
		Set
			If (String.Equals(Me._STYLEHOSPITAL_ENNAME, value) = false) Then
				Me.OnSTYLEHOSPITAL_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_ENNAME = value
				Me.SendPropertyChanged("STYLEHOSPITAL_ENNAME")
				Me.OnSTYLEHOSPITAL_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property STYLEHOSPITAL_NOTE() As String
		Get
			Return Me._STYLEHOSPITAL_NOTE
		End Get
		Set
			If (String.Equals(Me._STYLEHOSPITAL_NOTE, value) = false) Then
				Me.OnSTYLEHOSPITAL_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_NOTE = value
				Me.SendPropertyChanged("STYLEHOSPITAL_NOTE")
				Me.OnSTYLEHOSPITAL_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYLEHOSPITAL_ISDISABLED", DbType:="Int")>  _
	Public Property STYLEHOSPITAL_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._STYLEHOSPITAL_ISDISABLED
		End Get
		Set
			If (Me._STYLEHOSPITAL_ISDISABLED.Equals(value) = false) Then
				Me.OnSTYLEHOSPITAL_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._STYLEHOSPITAL_ISDISABLED = value
				Me.SendPropertyChanged("STYLEHOSPITAL_ISDISABLED")
				Me.OnSTYLEHOSPITAL_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_Suggestion")>  _
Partial Public Class MAS_Suggestion
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ID_Suggestion_Nurse As System.Nullable(Of Integer)
	
	Private _Suggestion_Nurse As String
	
	Private _Create_date As System.Nullable(Of Integer)
	
	Private _Create_by As String
	
	Private _Update_date As System.Nullable(Of Integer)
	
	Private _Update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnID_Suggestion_NurseChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_Suggestion_NurseChanged()
    End Sub
    Partial Private Sub OnSuggestion_NurseChanging(value As String)
    End Sub
    Partial Private Sub OnSuggestion_NurseChanged()
    End Sub
    Partial Private Sub OnCreate_dateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreate_dateChanged()
    End Sub
    Partial Private Sub OnCreate_byChanging(value As String)
    End Sub
    Partial Private Sub OnCreate_byChanged()
    End Sub
    Partial Private Sub OnUpdate_dateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUpdate_dateChanged()
    End Sub
    Partial Private Sub OnUpdate_byChanging(value As String)
    End Sub
    Partial Private Sub OnUpdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_Suggestion_Nurse", DbType:="Int")>  _
	Public Property ID_Suggestion_Nurse() As System.Nullable(Of Integer)
		Get
			Return Me._ID_Suggestion_Nurse
		End Get
		Set
			If (Me._ID_Suggestion_Nurse.Equals(value) = false) Then
				Me.OnID_Suggestion_NurseChanging(value)
				Me.SendPropertyChanging
				Me._ID_Suggestion_Nurse = value
				Me.SendPropertyChanged("ID_Suggestion_Nurse")
				Me.OnID_Suggestion_NurseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suggestion_Nurse", DbType:="NVarChar(MAX)")>  _
	Public Property Suggestion_Nurse() As String
		Get
			Return Me._Suggestion_Nurse
		End Get
		Set
			If (String.Equals(Me._Suggestion_Nurse, value) = false) Then
				Me.OnSuggestion_NurseChanging(value)
				Me.SendPropertyChanging
				Me._Suggestion_Nurse = value
				Me.SendPropertyChanged("Suggestion_Nurse")
				Me.OnSuggestion_NurseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_date", DbType:="Int")>  _
	Public Property Create_date() As System.Nullable(Of Integer)
		Get
			Return Me._Create_date
		End Get
		Set
			If (Me._Create_date.Equals(value) = false) Then
				Me.OnCreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Create_date = value
				Me.SendPropertyChanged("Create_date")
				Me.OnCreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Create_by", DbType:="NVarChar(MAX)")>  _
	Public Property Create_by() As String
		Get
			Return Me._Create_by
		End Get
		Set
			If (String.Equals(Me._Create_by, value) = false) Then
				Me.OnCreate_byChanging(value)
				Me.SendPropertyChanging
				Me._Create_by = value
				Me.SendPropertyChanged("Create_by")
				Me.OnCreate_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_date", DbType:="Int")>  _
	Public Property Update_date() As System.Nullable(Of Integer)
		Get
			Return Me._Update_date
		End Get
		Set
			If (Me._Update_date.Equals(value) = false) Then
				Me.OnUpdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._Update_date = value
				Me.SendPropertyChanged("Update_date")
				Me.OnUpdate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Update_by", DbType:="NVarChar(MAX)")>  _
	Public Property Update_by() As String
		Get
			Return Me._Update_by
		End Get
		Set
			If (String.Equals(Me._Update_by, value) = false) Then
				Me.OnUpdate_byChanging(value)
				Me.SendPropertyChanging
				Me._Update_by = value
				Me.SendPropertyChanged("Update_by")
				Me.OnUpdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SYMPTOP")>  _
Partial Public Class MAS_SYMPTOP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SYMPTOP_ID As Integer
	
	Private _SYMPTOP_CODE As String
	
	Private _SYMPTOP_ICD10 As String
	
	Private _SYMPTOP_DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSYMPTOP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSYMPTOP_IDChanged()
    End Sub
    Partial Private Sub OnSYMPTOP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSYMPTOP_CODEChanged()
    End Sub
    Partial Private Sub OnSYMPTOP_ICD10Changing(value As String)
    End Sub
    Partial Private Sub OnSYMPTOP_ICD10Changed()
    End Sub
    Partial Private Sub OnSYMPTOP_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnSYMPTOP_DETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYMPTOP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SYMPTOP_ID() As Integer
		Get
			Return Me._SYMPTOP_ID
		End Get
		Set
			If ((Me._SYMPTOP_ID = value)  _
						= false) Then
				Me.OnSYMPTOP_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYMPTOP_ID = value
				Me.SendPropertyChanged("SYMPTOP_ID")
				Me.OnSYMPTOP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYMPTOP_CODE", DbType:="VarChar(50)")>  _
	Public Property SYMPTOP_CODE() As String
		Get
			Return Me._SYMPTOP_CODE
		End Get
		Set
			If (String.Equals(Me._SYMPTOP_CODE, value) = false) Then
				Me.OnSYMPTOP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SYMPTOP_CODE = value
				Me.SendPropertyChanged("SYMPTOP_CODE")
				Me.OnSYMPTOP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYMPTOP_ICD10", DbType:="VarChar(MAX)")>  _
	Public Property SYMPTOP_ICD10() As String
		Get
			Return Me._SYMPTOP_ICD10
		End Get
		Set
			If (String.Equals(Me._SYMPTOP_ICD10, value) = false) Then
				Me.OnSYMPTOP_ICD10Changing(value)
				Me.SendPropertyChanging
				Me._SYMPTOP_ICD10 = value
				Me.SendPropertyChanged("SYMPTOP_ICD10")
				Me.OnSYMPTOP_ICD10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYMPTOP_DETAIL", DbType:="VarChar(MAX)")>  _
	Public Property SYMPTOP_DETAIL() As String
		Get
			Return Me._SYMPTOP_DETAIL
		End Get
		Set
			If (String.Equals(Me._SYMPTOP_DETAIL, value) = false) Then
				Me.OnSYMPTOP_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._SYMPTOP_DETAIL = value
				Me.SendPropertyChanged("SYMPTOP_DETAIL")
				Me.OnSYMPTOP_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TAKEDRUG")>  _
Partial Public Class MAS_TAKEDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TAKEDRUG_ID As Integer
	
	Private _TAKEDRUG_DRUGSPCLKEY As System.Nullable(Of Integer)
	
	Private _TAKEDRUG_CODE As String
	
	Private _TAKEDRUG_TAKENAME As String
	
	Private _TAKEDRUG_ENNAME As String
	
	Private _TAKEDRUG_NOTE As String
	
	Private _TAKEDRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTAKEDRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTAKEDRUG_IDChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_DRUGSPCLKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAKEDRUG_DRUGSPCLKEYChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTAKEDRUG_CODEChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_TAKENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTAKEDRUG_TAKENAMEChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTAKEDRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTAKEDRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnTAKEDRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAKEDRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TAKEDRUG_ID() As Integer
		Get
			Return Me._TAKEDRUG_ID
		End Get
		Set
			If ((Me._TAKEDRUG_ID = value)  _
						= false) Then
				Me.OnTAKEDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_ID = value
				Me.SendPropertyChanged("TAKEDRUG_ID")
				Me.OnTAKEDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_DRUGSPCLKEY", DbType:="Int")>  _
	Public Property TAKEDRUG_DRUGSPCLKEY() As System.Nullable(Of Integer)
		Get
			Return Me._TAKEDRUG_DRUGSPCLKEY
		End Get
		Set
			If (Me._TAKEDRUG_DRUGSPCLKEY.Equals(value) = false) Then
				Me.OnTAKEDRUG_DRUGSPCLKEYChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_DRUGSPCLKEY = value
				Me.SendPropertyChanged("TAKEDRUG_DRUGSPCLKEY")
				Me.OnTAKEDRUG_DRUGSPCLKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property TAKEDRUG_CODE() As String
		Get
			Return Me._TAKEDRUG_CODE
		End Get
		Set
			If (String.Equals(Me._TAKEDRUG_CODE, value) = false) Then
				Me.OnTAKEDRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_CODE = value
				Me.SendPropertyChanged("TAKEDRUG_CODE")
				Me.OnTAKEDRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_TAKENAME", DbType:="NVarChar(MAX)")>  _
	Public Property TAKEDRUG_TAKENAME() As String
		Get
			Return Me._TAKEDRUG_TAKENAME
		End Get
		Set
			If (String.Equals(Me._TAKEDRUG_TAKENAME, value) = false) Then
				Me.OnTAKEDRUG_TAKENAMEChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_TAKENAME = value
				Me.SendPropertyChanged("TAKEDRUG_TAKENAME")
				Me.OnTAKEDRUG_TAKENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TAKEDRUG_ENNAME() As String
		Get
			Return Me._TAKEDRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._TAKEDRUG_ENNAME, value) = false) Then
				Me.OnTAKEDRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_ENNAME = value
				Me.SendPropertyChanged("TAKEDRUG_ENNAME")
				Me.OnTAKEDRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TAKEDRUG_NOTE() As String
		Get
			Return Me._TAKEDRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._TAKEDRUG_NOTE, value) = false) Then
				Me.OnTAKEDRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_NOTE = value
				Me.SendPropertyChanged("TAKEDRUG_NOTE")
				Me.OnTAKEDRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAKEDRUG_ISDISABLED", DbType:="Int")>  _
	Public Property TAKEDRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TAKEDRUG_ISDISABLED
		End Get
		Set
			If (Me._TAKEDRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnTAKEDRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TAKEDRUG_ISDISABLED = value
				Me.SendPropertyChanged("TAKEDRUG_ISDISABLED")
				Me.OnTAKEDRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TEMPALTEQUESTIONS")>  _
Partial Public Class MAS_TEMPALTEQUESTION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TEMPALTEQUESTIONS_ID As Integer
	
	Private _TEMPALTEQUESTIONS_CODE As String
	
	Private _TEMPALTEQUESTIONS_NAME As String
	
	Private _TEMPALTEQUESTIONS_ENNAME As String
	
	Private _TEMPALTEQUESTIONS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_IDChanged()
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_CODEChanged()
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_NAMEChanged()
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPALTEQUESTIONS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPALTEQUESTIONS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TEMPALTEQUESTIONS_ID() As Integer
		Get
			Return Me._TEMPALTEQUESTIONS_ID
		End Get
		Set
			If ((Me._TEMPALTEQUESTIONS_ID = value)  _
						= false) Then
				Me.OnTEMPALTEQUESTIONS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPALTEQUESTIONS_ID = value
				Me.SendPropertyChanged("TEMPALTEQUESTIONS_ID")
				Me.OnTEMPALTEQUESTIONS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPALTEQUESTIONS_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property TEMPALTEQUESTIONS_CODE() As String
		Get
			Return Me._TEMPALTEQUESTIONS_CODE
		End Get
		Set
			If (String.Equals(Me._TEMPALTEQUESTIONS_CODE, value) = false) Then
				Me.OnTEMPALTEQUESTIONS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TEMPALTEQUESTIONS_CODE = value
				Me.SendPropertyChanged("TEMPALTEQUESTIONS_CODE")
				Me.OnTEMPALTEQUESTIONS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPALTEQUESTIONS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TEMPALTEQUESTIONS_NAME() As String
		Get
			Return Me._TEMPALTEQUESTIONS_NAME
		End Get
		Set
			If (String.Equals(Me._TEMPALTEQUESTIONS_NAME, value) = false) Then
				Me.OnTEMPALTEQUESTIONS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TEMPALTEQUESTIONS_NAME = value
				Me.SendPropertyChanged("TEMPALTEQUESTIONS_NAME")
				Me.OnTEMPALTEQUESTIONS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPALTEQUESTIONS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TEMPALTEQUESTIONS_ENNAME() As String
		Get
			Return Me._TEMPALTEQUESTIONS_ENNAME
		End Get
		Set
			If (String.Equals(Me._TEMPALTEQUESTIONS_ENNAME, value) = false) Then
				Me.OnTEMPALTEQUESTIONS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TEMPALTEQUESTIONS_ENNAME = value
				Me.SendPropertyChanged("TEMPALTEQUESTIONS_ENNAME")
				Me.OnTEMPALTEQUESTIONS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPALTEQUESTIONS_ISDISABLED", DbType:="Int")>  _
	Public Property TEMPALTEQUESTIONS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPALTEQUESTIONS_ISDISABLED
		End Get
		Set
			If (Me._TEMPALTEQUESTIONS_ISDISABLED.Equals(value) = false) Then
				Me.OnTEMPALTEQUESTIONS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPALTEQUESTIONS_ISDISABLED = value
				Me.SendPropertyChanged("TEMPALTEQUESTIONS_ISDISABLED")
				Me.OnTEMPALTEQUESTIONS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TIME")>  _
Partial Public Class MAS_TIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TIME_ID As Integer
	
	Private _TIME_CODE As String
	
	Private _TIME_NAME As String
	
	Private _TIME_TIME As System.Nullable(Of System.TimeSpan)
	
	Private _TIME_ENNAME As String
	
	Private _TIME_NOTE As String
	
	Private _TIME_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _TIME_OCLOCK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTIME_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTIME_IDChanged()
    End Sub
    Partial Private Sub OnTIME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_CODEChanged()
    End Sub
    Partial Private Sub OnTIME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_NAMEChanged()
    End Sub
    Partial Private Sub OnTIME_TIMEChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnTIME_TIMEChanged()
    End Sub
    Partial Private Sub OnTIME_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTIME_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_NOTEChanged()
    End Sub
    Partial Private Sub OnTIME_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTIME_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnTIME_OCLOCKChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_OCLOCKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TIME_ID() As Integer
		Get
			Return Me._TIME_ID
		End Get
		Set
			If ((Me._TIME_ID = value)  _
						= false) Then
				Me.OnTIME_IDChanging(value)
				Me.SendPropertyChanging
				Me._TIME_ID = value
				Me.SendPropertyChanged("TIME_ID")
				Me.OnTIME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_CODE() As String
		Get
			Return Me._TIME_CODE
		End Get
		Set
			If (String.Equals(Me._TIME_CODE, value) = false) Then
				Me.OnTIME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_CODE = value
				Me.SendPropertyChanged("TIME_CODE")
				Me.OnTIME_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_NAME() As String
		Get
			Return Me._TIME_NAME
		End Get
		Set
			If (String.Equals(Me._TIME_NAME, value) = false) Then
				Me.OnTIME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_NAME = value
				Me.SendPropertyChanged("TIME_NAME")
				Me.OnTIME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_TIME", DbType:="Time")>  _
	Public Property TIME_TIME() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._TIME_TIME
		End Get
		Set
			If (Me._TIME_TIME.Equals(value) = false) Then
				Me.OnTIME_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_TIME = value
				Me.SendPropertyChanged("TIME_TIME")
				Me.OnTIME_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_ENNAME() As String
		Get
			Return Me._TIME_ENNAME
		End Get
		Set
			If (String.Equals(Me._TIME_ENNAME, value) = false) Then
				Me.OnTIME_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_ENNAME = value
				Me.SendPropertyChanged("TIME_ENNAME")
				Me.OnTIME_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_NOTE() As String
		Get
			Return Me._TIME_NOTE
		End Get
		Set
			If (String.Equals(Me._TIME_NOTE, value) = false) Then
				Me.OnTIME_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_NOTE = value
				Me.SendPropertyChanged("TIME_NOTE")
				Me.OnTIME_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_ISDISABLED", DbType:="Int")>  _
	Public Property TIME_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TIME_ISDISABLED
		End Get
		Set
			If (Me._TIME_ISDISABLED.Equals(value) = false) Then
				Me.OnTIME_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TIME_ISDISABLED = value
				Me.SendPropertyChanged("TIME_ISDISABLED")
				Me.OnTIME_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_OCLOCK", DbType:="NVarChar(MAX)")>  _
	Public Property TIME_OCLOCK() As String
		Get
			Return Me._TIME_OCLOCK
		End Get
		Set
			If (String.Equals(Me._TIME_OCLOCK, value) = false) Then
				Me.OnTIME_OCLOCKChanging(value)
				Me.SendPropertyChanging
				Me._TIME_OCLOCK = value
				Me.SendPropertyChanged("TIME_OCLOCK")
				Me.OnTIME_OCLOCKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TOILET")>  _
Partial Public Class MAS_TOILET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TOILET_ID As Integer
	
	Private _TOILET_CODE As System.Nullable(Of Integer)
	
	Private _TOILET_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTOILET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTOILET_IDChanged()
    End Sub
    Partial Private Sub OnTOILET_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTOILET_CODEChanged()
    End Sub
    Partial Private Sub OnTOILET_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTOILET_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOILET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TOILET_ID() As Integer
		Get
			Return Me._TOILET_ID
		End Get
		Set
			If ((Me._TOILET_ID = value)  _
						= false) Then
				Me.OnTOILET_IDChanging(value)
				Me.SendPropertyChanging
				Me._TOILET_ID = value
				Me.SendPropertyChanged("TOILET_ID")
				Me.OnTOILET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOILET_CODE", DbType:="Int")>  _
	Public Property TOILET_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._TOILET_CODE
		End Get
		Set
			If (Me._TOILET_CODE.Equals(value) = false) Then
				Me.OnTOILET_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TOILET_CODE = value
				Me.SendPropertyChanged("TOILET_CODE")
				Me.OnTOILET_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOILET_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property TOILET_DESCRIPTION() As String
		Get
			Return Me._TOILET_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TOILET_DESCRIPTION, value) = false) Then
				Me.OnTOILET_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TOILET_DESCRIPTION = value
				Me.SendPropertyChanged("TOILET_DESCRIPTION")
				Me.OnTOILET_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TRANSMISSION")>  _
Partial Public Class MAS_TRANSMISSION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRANSMISSION_ID As Integer
	
	Private _TRANSMISSION_CODE As String
	
	Private _TRANSMISSION_NAME As String
	
	Private _TRANSMISSION_ENNAME As String
	
	Private _TRANSMISSION_UNIT As String
	
	Private _TRANSMISSION_NOTE As String
	
	Private _TRANSMISSION_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ACTIVEFLAG As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRANSMISSION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRANSMISSION_IDChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSMISSION_CODEChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSMISSION_NAMEChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSMISSION_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSMISSION_UNITChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSMISSION_NOTEChanged()
    End Sub
    Partial Private Sub OnTRANSMISSION_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSMISSION_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnACTIVEFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TRANSMISSION_ID() As Integer
		Get
			Return Me._TRANSMISSION_ID
		End Get
		Set
			If ((Me._TRANSMISSION_ID = value)  _
						= false) Then
				Me.OnTRANSMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_ID = value
				Me.SendPropertyChanged("TRANSMISSION_ID")
				Me.OnTRANSMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_CODE", DbType:="NVarChar(50)")>  _
	Public Property TRANSMISSION_CODE() As String
		Get
			Return Me._TRANSMISSION_CODE
		End Get
		Set
			If (String.Equals(Me._TRANSMISSION_CODE, value) = false) Then
				Me.OnTRANSMISSION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_CODE = value
				Me.SendPropertyChanged("TRANSMISSION_CODE")
				Me.OnTRANSMISSION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSMISSION_NAME() As String
		Get
			Return Me._TRANSMISSION_NAME
		End Get
		Set
			If (String.Equals(Me._TRANSMISSION_NAME, value) = false) Then
				Me.OnTRANSMISSION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_NAME = value
				Me.SendPropertyChanged("TRANSMISSION_NAME")
				Me.OnTRANSMISSION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSMISSION_ENNAME() As String
		Get
			Return Me._TRANSMISSION_ENNAME
		End Get
		Set
			If (String.Equals(Me._TRANSMISSION_ENNAME, value) = false) Then
				Me.OnTRANSMISSION_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_ENNAME = value
				Me.SendPropertyChanged("TRANSMISSION_ENNAME")
				Me.OnTRANSMISSION_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSMISSION_UNIT() As String
		Get
			Return Me._TRANSMISSION_UNIT
		End Get
		Set
			If (String.Equals(Me._TRANSMISSION_UNIT, value) = false) Then
				Me.OnTRANSMISSION_UNITChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_UNIT = value
				Me.SendPropertyChanged("TRANSMISSION_UNIT")
				Me.OnTRANSMISSION_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSMISSION_NOTE() As String
		Get
			Return Me._TRANSMISSION_NOTE
		End Get
		Set
			If (String.Equals(Me._TRANSMISSION_NOTE, value) = false) Then
				Me.OnTRANSMISSION_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_NOTE = value
				Me.SendPropertyChanged("TRANSMISSION_NOTE")
				Me.OnTRANSMISSION_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSMISSION_ISDISABLED", DbType:="Int")>  _
	Public Property TRANSMISSION_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSMISSION_ISDISABLED
		End Get
		Set
			If (Me._TRANSMISSION_ISDISABLED.Equals(value) = false) Then
				Me.OnTRANSMISSION_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSMISSION_ISDISABLED = value
				Me.SendPropertyChanged("TRANSMISSION_ISDISABLED")
				Me.OnTRANSMISSION_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFLAG", DbType:="Bit")>  _
	Public Property ACTIVEFLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFLAG
		End Get
		Set
			If (Me._ACTIVEFLAG.Equals(value) = false) Then
				Me.OnACTIVEFLAGChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFLAG = value
				Me.SendPropertyChanged("ACTIVEFLAG")
				Me.OnACTIVEFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TRIGGERS")>  _
Partial Public Class MAS_TRIGGER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRIGGERS_ID As Integer
	
	Private _TRIGGERS_CODE As String
	
	Private _TRIGGERS_NAME As String
	
	Private _TRIGGERS_ENNAME As String
	
	Private _TRIGGERS_NOTE As String
	
	Private _TRIGGERS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRIGGERS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRIGGERS_IDChanged()
    End Sub
    Partial Private Sub OnTRIGGERS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTRIGGERS_CODEChanged()
    End Sub
    Partial Private Sub OnTRIGGERS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRIGGERS_NAMEChanged()
    End Sub
    Partial Private Sub OnTRIGGERS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRIGGERS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTRIGGERS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTRIGGERS_NOTEChanged()
    End Sub
    Partial Private Sub OnTRIGGERS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRIGGERS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TRIGGERS_ID() As Integer
		Get
			Return Me._TRIGGERS_ID
		End Get
		Set
			If ((Me._TRIGGERS_ID = value)  _
						= false) Then
				Me.OnTRIGGERS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_ID = value
				Me.SendPropertyChanged("TRIGGERS_ID")
				Me.OnTRIGGERS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property TRIGGERS_CODE() As String
		Get
			Return Me._TRIGGERS_CODE
		End Get
		Set
			If (String.Equals(Me._TRIGGERS_CODE, value) = false) Then
				Me.OnTRIGGERS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_CODE = value
				Me.SendPropertyChanged("TRIGGERS_CODE")
				Me.OnTRIGGERS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRIGGERS_NAME() As String
		Get
			Return Me._TRIGGERS_NAME
		End Get
		Set
			If (String.Equals(Me._TRIGGERS_NAME, value) = false) Then
				Me.OnTRIGGERS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_NAME = value
				Me.SendPropertyChanged("TRIGGERS_NAME")
				Me.OnTRIGGERS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRIGGERS_ENNAME() As String
		Get
			Return Me._TRIGGERS_ENNAME
		End Get
		Set
			If (String.Equals(Me._TRIGGERS_ENNAME, value) = false) Then
				Me.OnTRIGGERS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_ENNAME = value
				Me.SendPropertyChanged("TRIGGERS_ENNAME")
				Me.OnTRIGGERS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TRIGGERS_NOTE() As String
		Get
			Return Me._TRIGGERS_NOTE
		End Get
		Set
			If (String.Equals(Me._TRIGGERS_NOTE, value) = false) Then
				Me.OnTRIGGERS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_NOTE = value
				Me.SendPropertyChanged("TRIGGERS_NOTE")
				Me.OnTRIGGERS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIGGERS_ISDISABLED", DbType:="Int")>  _
	Public Property TRIGGERS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TRIGGERS_ISDISABLED
		End Get
		Set
			If (Me._TRIGGERS_ISDISABLED.Equals(value) = false) Then
				Me.OnTRIGGERS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TRIGGERS_ISDISABLED = value
				Me.SendPropertyChanged("TRIGGERS_ISDISABLED")
				Me.OnTRIGGERS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPE_IN")>  _
Partial Public Class MAS_TYPE_IN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPE_IN_IDA As Integer
	
	Private _TYPE_IN_NUMBER As System.Nullable(Of Integer)
	
	Private _TYPE_IN_DESCRIPTION As String
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPE_IN_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPE_IN_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_IN_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IN_NUMBERChanged()
    End Sub
    Partial Private Sub OnTYPE_IN_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_IN_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_IN_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPE_IN_IDA() As Integer
		Get
			Return Me._TYPE_IN_IDA
		End Get
		Set
			If ((Me._TYPE_IN_IDA = value)  _
						= false) Then
				Me.OnTYPE_IN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_IN_IDA = value
				Me.SendPropertyChanged("TYPE_IN_IDA")
				Me.OnTYPE_IN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_IN_NUMBER", DbType:="Int")>  _
	Public Property TYPE_IN_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_IN_NUMBER
		End Get
		Set
			If (Me._TYPE_IN_NUMBER.Equals(value) = false) Then
				Me.OnTYPE_IN_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_IN_NUMBER = value
				Me.SendPropertyChanged("TYPE_IN_NUMBER")
				Me.OnTYPE_IN_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_IN_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_IN_DESCRIPTION() As String
		Get
			Return Me._TYPE_IN_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPE_IN_DESCRIPTION, value) = false) Then
				Me.OnTYPE_IN_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_IN_DESCRIPTION = value
				Me.SendPropertyChanged("TYPE_IN_DESCRIPTION")
				Me.OnTYPE_IN_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPE_OUT")>  _
Partial Public Class MAS_TYPE_OUT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPE_OUT_IDA As Integer
	
	Private _TYPE_OUT_NUMBER As System.Nullable(Of Integer)
	
	Private _TYPE_OUT_DESCRIPTION As String
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPE_OUT_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPE_OUT_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_OUT_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_OUT_NUMBERChanged()
    End Sub
    Partial Private Sub OnTYPE_OUT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_OUT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_OUT_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPE_OUT_IDA() As Integer
		Get
			Return Me._TYPE_OUT_IDA
		End Get
		Set
			If ((Me._TYPE_OUT_IDA = value)  _
						= false) Then
				Me.OnTYPE_OUT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_OUT_IDA = value
				Me.SendPropertyChanged("TYPE_OUT_IDA")
				Me.OnTYPE_OUT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_OUT_NUMBER", DbType:="Int")>  _
	Public Property TYPE_OUT_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_OUT_NUMBER
		End Get
		Set
			If (Me._TYPE_OUT_NUMBER.Equals(value) = false) Then
				Me.OnTYPE_OUT_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_OUT_NUMBER = value
				Me.SendPropertyChanged("TYPE_OUT_NUMBER")
				Me.OnTYPE_OUT_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_OUT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_OUT_DESCRIPTION() As String
		Get
			Return Me._TYPE_OUT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPE_OUT_DESCRIPTION, value) = false) Then
				Me.OnTYPE_OUT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_OUT_DESCRIPTION = value
				Me.SendPropertyChanged("TYPE_OUT_DESCRIPTION")
				Me.OnTYPE_OUT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPE_SERV")>  _
Partial Public Class MAS_TYPE_SERV
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPE_SERV_IDA As Integer
	
	Private _TYPE_SERV_CODE As String
	
	Private _TYPE_SERV_DESCRIPTION As String
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPE_SERV_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPE_SERV_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_SERV_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SERV_CODEChanged()
    End Sub
    Partial Private Sub OnTYPE_SERV_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SERV_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SERV_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPE_SERV_IDA() As Integer
		Get
			Return Me._TYPE_SERV_IDA
		End Get
		Set
			If ((Me._TYPE_SERV_IDA = value)  _
						= false) Then
				Me.OnTYPE_SERV_IDAChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SERV_IDA = value
				Me.SendPropertyChanged("TYPE_SERV_IDA")
				Me.OnTYPE_SERV_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SERV_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SERV_CODE() As String
		Get
			Return Me._TYPE_SERV_CODE
		End Get
		Set
			If (String.Equals(Me._TYPE_SERV_CODE, value) = false) Then
				Me.OnTYPE_SERV_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SERV_CODE = value
				Me.SendPropertyChanged("TYPE_SERV_CODE")
				Me.OnTYPE_SERV_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SERV_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SERV_DESCRIPTION() As String
		Get
			Return Me._TYPE_SERV_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPE_SERV_DESCRIPTION, value) = false) Then
				Me.OnTYPE_SERV_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SERV_DESCRIPTION = value
				Me.SendPropertyChanged("TYPE_SERV_DESCRIPTION")
				Me.OnTYPE_SERV_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEADDRESS")>  _
Partial Public Class MAS_TYPEADDRESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEADDRESS_ID As Integer
	
	Private _TYPEADDRESS_CODE As String
	
	Private _TYPEADDRESS_TYPEADDNAME As String
	
	Private _TYPEADDRESS_ENNAME As String
	
	Private _TYPEADDRESS_NOTE As String
	
	Private _TYPEADDRESS_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEADDRESS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEADDRESS_IDChanged()
    End Sub
    Partial Private Sub OnTYPEADDRESS_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEADDRESS_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEADDRESS_TYPEADDNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEADDRESS_TYPEADDNAMEChanged()
    End Sub
    Partial Private Sub OnTYPEADDRESS_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEADDRESS_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTYPEADDRESS_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEADDRESS_NOTEChanged()
    End Sub
    Partial Private Sub OnTYPEADDRESS_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEADDRESS_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEADDRESS_ID() As Integer
		Get
			Return Me._TYPEADDRESS_ID
		End Get
		Set
			If ((Me._TYPEADDRESS_ID = value)  _
						= false) Then
				Me.OnTYPEADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_ID = value
				Me.SendPropertyChanged("TYPEADDRESS_ID")
				Me.OnTYPEADDRESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_CODE", DbType:="NVarChar(50)")>  _
	Public Property TYPEADDRESS_CODE() As String
		Get
			Return Me._TYPEADDRESS_CODE
		End Get
		Set
			If (String.Equals(Me._TYPEADDRESS_CODE, value) = false) Then
				Me.OnTYPEADDRESS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_CODE = value
				Me.SendPropertyChanged("TYPEADDRESS_CODE")
				Me.OnTYPEADDRESS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_TYPEADDNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPEADDRESS_TYPEADDNAME() As String
		Get
			Return Me._TYPEADDRESS_TYPEADDNAME
		End Get
		Set
			If (String.Equals(Me._TYPEADDRESS_TYPEADDNAME, value) = false) Then
				Me.OnTYPEADDRESS_TYPEADDNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_TYPEADDNAME = value
				Me.SendPropertyChanged("TYPEADDRESS_TYPEADDNAME")
				Me.OnTYPEADDRESS_TYPEADDNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPEADDRESS_ENNAME() As String
		Get
			Return Me._TYPEADDRESS_ENNAME
		End Get
		Set
			If (String.Equals(Me._TYPEADDRESS_ENNAME, value) = false) Then
				Me.OnTYPEADDRESS_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_ENNAME = value
				Me.SendPropertyChanged("TYPEADDRESS_ENNAME")
				Me.OnTYPEADDRESS_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPEADDRESS_NOTE() As String
		Get
			Return Me._TYPEADDRESS_NOTE
		End Get
		Set
			If (String.Equals(Me._TYPEADDRESS_NOTE, value) = false) Then
				Me.OnTYPEADDRESS_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_NOTE = value
				Me.SendPropertyChanged("TYPEADDRESS_NOTE")
				Me.OnTYPEADDRESS_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEADDRESS_ISDISABLED", DbType:="Int")>  _
	Public Property TYPEADDRESS_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPEADDRESS_ISDISABLED
		End Get
		Set
			If (Me._TYPEADDRESS_ISDISABLED.Equals(value) = false) Then
				Me.OnTYPEADDRESS_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEADDRESS_ISDISABLED = value
				Me.SendPropertyChanged("TYPEADDRESS_ISDISABLED")
				Me.OnTYPEADDRESS_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEAREA")>  _
Partial Public Class MAS_TYPEAREA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEAREA_ID As Integer
	
	Private _TYPEAREA_CODE As System.Nullable(Of Integer)
	
	Private _TYPEAREA_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEAREA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEAREA_IDChanged()
    End Sub
    Partial Private Sub OnTYPEAREA_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEAREA_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEAREA_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEAREA_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEAREA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEAREA_ID() As Integer
		Get
			Return Me._TYPEAREA_ID
		End Get
		Set
			If ((Me._TYPEAREA_ID = value)  _
						= false) Then
				Me.OnTYPEAREA_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEAREA_ID = value
				Me.SendPropertyChanged("TYPEAREA_ID")
				Me.OnTYPEAREA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEAREA_CODE", DbType:="Int")>  _
	Public Property TYPEAREA_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPEAREA_CODE
		End Get
		Set
			If (Me._TYPEAREA_CODE.Equals(value) = false) Then
				Me.OnTYPEAREA_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEAREA_CODE = value
				Me.SendPropertyChanged("TYPEAREA_CODE")
				Me.OnTYPEAREA_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEAREA_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property TYPEAREA_DESCRIPTION() As String
		Get
			Return Me._TYPEAREA_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPEAREA_DESCRIPTION, value) = false) Then
				Me.OnTYPEAREA_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPEAREA_DESCRIPTION = value
				Me.SendPropertyChanged("TYPEAREA_DESCRIPTION")
				Me.OnTYPEAREA_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEBORROW")>  _
Partial Public Class MAS_TYPEBORROW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEBORROW_ID As Integer
	
	Private _TYPEBORROW_CODE As String
	
	Private _TYPEBORROW_NAME As String
	
	Private _TYPEBORROW_ENNAME As String
	
	Private _TYPEBORROW_NOTE As String
	
	Private _TYPEBORROW_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEBORROW_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEBORROW_IDChanged()
    End Sub
    Partial Private Sub OnTYPEBORROW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEBORROW_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEBORROW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEBORROW_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPEBORROW_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEBORROW_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTYPEBORROW_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEBORROW_NOTEChanged()
    End Sub
    Partial Private Sub OnTYPEBORROW_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEBORROW_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEBORROW_ID() As Integer
		Get
			Return Me._TYPEBORROW_ID
		End Get
		Set
			If ((Me._TYPEBORROW_ID = value)  _
						= false) Then
				Me.OnTYPEBORROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_ID = value
				Me.SendPropertyChanged("TYPEBORROW_ID")
				Me.OnTYPEBORROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_CODE", DbType:="NVarChar(50)")>  _
	Public Property TYPEBORROW_CODE() As String
		Get
			Return Me._TYPEBORROW_CODE
		End Get
		Set
			If (String.Equals(Me._TYPEBORROW_CODE, value) = false) Then
				Me.OnTYPEBORROW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_CODE = value
				Me.SendPropertyChanged("TYPEBORROW_CODE")
				Me.OnTYPEBORROW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_NAME", DbType:="NVarChar(200)")>  _
	Public Property TYPEBORROW_NAME() As String
		Get
			Return Me._TYPEBORROW_NAME
		End Get
		Set
			If (String.Equals(Me._TYPEBORROW_NAME, value) = false) Then
				Me.OnTYPEBORROW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_NAME = value
				Me.SendPropertyChanged("TYPEBORROW_NAME")
				Me.OnTYPEBORROW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPEBORROW_ENNAME() As String
		Get
			Return Me._TYPEBORROW_ENNAME
		End Get
		Set
			If (String.Equals(Me._TYPEBORROW_ENNAME, value) = false) Then
				Me.OnTYPEBORROW_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_ENNAME = value
				Me.SendPropertyChanged("TYPEBORROW_ENNAME")
				Me.OnTYPEBORROW_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_NOTE", DbType:="NVarChar(200)")>  _
	Public Property TYPEBORROW_NOTE() As String
		Get
			Return Me._TYPEBORROW_NOTE
		End Get
		Set
			If (String.Equals(Me._TYPEBORROW_NOTE, value) = false) Then
				Me.OnTYPEBORROW_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_NOTE = value
				Me.SendPropertyChanged("TYPEBORROW_NOTE")
				Me.OnTYPEBORROW_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEBORROW_ISDISABLED", DbType:="Int")>  _
	Public Property TYPEBORROW_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPEBORROW_ISDISABLED
		End Get
		Set
			If (Me._TYPEBORROW_ISDISABLED.Equals(value) = false) Then
				Me.OnTYPEBORROW_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEBORROW_ISDISABLED = value
				Me.SendPropertyChanged("TYPEBORROW_ISDISABLED")
				Me.OnTYPEBORROW_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPECLINIC")>  _
Partial Public Class MAS_TYPECLINIC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPECLINIC_ID As Integer
	
	Private _TYPECLINIC_CODE As String
	
	Private _TYPECLINIC_TYPECLINICNAME As String
	
	Private _TYPECLINIC_ISDISABLED As System.Nullable(Of Integer)
	
	Private _TYPECLINIC_NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPECLINIC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPECLINIC_IDChanged()
    End Sub
    Partial Private Sub OnTYPECLINIC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPECLINIC_CODEChanged()
    End Sub
    Partial Private Sub OnTYPECLINIC_TYPECLINICNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPECLINIC_TYPECLINICNAMEChanged()
    End Sub
    Partial Private Sub OnTYPECLINIC_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPECLINIC_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnTYPECLINIC_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPECLINIC_NOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECLINIC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPECLINIC_ID() As Integer
		Get
			Return Me._TYPECLINIC_ID
		End Get
		Set
			If ((Me._TYPECLINIC_ID = value)  _
						= false) Then
				Me.OnTYPECLINIC_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPECLINIC_ID = value
				Me.SendPropertyChanged("TYPECLINIC_ID")
				Me.OnTYPECLINIC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECLINIC_CODE", DbType:="NVarChar(50)")>  _
	Public Property TYPECLINIC_CODE() As String
		Get
			Return Me._TYPECLINIC_CODE
		End Get
		Set
			If (String.Equals(Me._TYPECLINIC_CODE, value) = false) Then
				Me.OnTYPECLINIC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPECLINIC_CODE = value
				Me.SendPropertyChanged("TYPECLINIC_CODE")
				Me.OnTYPECLINIC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECLINIC_TYPECLINICNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPECLINIC_TYPECLINICNAME() As String
		Get
			Return Me._TYPECLINIC_TYPECLINICNAME
		End Get
		Set
			If (String.Equals(Me._TYPECLINIC_TYPECLINICNAME, value) = false) Then
				Me.OnTYPECLINIC_TYPECLINICNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPECLINIC_TYPECLINICNAME = value
				Me.SendPropertyChanged("TYPECLINIC_TYPECLINICNAME")
				Me.OnTYPECLINIC_TYPECLINICNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECLINIC_ISDISABLED", DbType:="Int")>  _
	Public Property TYPECLINIC_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPECLINIC_ISDISABLED
		End Get
		Set
			If (Me._TYPECLINIC_ISDISABLED.Equals(value) = false) Then
				Me.OnTYPECLINIC_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPECLINIC_ISDISABLED = value
				Me.SendPropertyChanged("TYPECLINIC_ISDISABLED")
				Me.OnTYPECLINIC_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECLINIC_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPECLINIC_NOTE() As String
		Get
			Return Me._TYPECLINIC_NOTE
		End Get
		Set
			If (String.Equals(Me._TYPECLINIC_NOTE, value) = false) Then
				Me.OnTYPECLINIC_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TYPECLINIC_NOTE = value
				Me.SendPropertyChanged("TYPECLINIC_NOTE")
				Me.OnTYPECLINIC_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPECOST")>  _
Partial Public Class MAS_TYPECOST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPECOST_ID As Integer
	
	Private _TYPECOST_CODE As String
	
	Private _TYPECOST_TYOECOSTNAME As String
	
	Private _TYPECOST_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPECOST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPECOST_IDChanged()
    End Sub
    Partial Private Sub OnTYPECOST_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPECOST_CODEChanged()
    End Sub
    Partial Private Sub OnTYPECOST_TYOECOSTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPECOST_TYOECOSTNAMEChanged()
    End Sub
    Partial Private Sub OnTYPECOST_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPECOST_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECOST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPECOST_ID() As Integer
		Get
			Return Me._TYPECOST_ID
		End Get
		Set
			If ((Me._TYPECOST_ID = value)  _
						= false) Then
				Me.OnTYPECOST_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPECOST_ID = value
				Me.SendPropertyChanged("TYPECOST_ID")
				Me.OnTYPECOST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECOST_CODE", DbType:="NVarChar(50)")>  _
	Public Property TYPECOST_CODE() As String
		Get
			Return Me._TYPECOST_CODE
		End Get
		Set
			If (String.Equals(Me._TYPECOST_CODE, value) = false) Then
				Me.OnTYPECOST_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPECOST_CODE = value
				Me.SendPropertyChanged("TYPECOST_CODE")
				Me.OnTYPECOST_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECOST_TYOECOSTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPECOST_TYOECOSTNAME() As String
		Get
			Return Me._TYPECOST_TYOECOSTNAME
		End Get
		Set
			If (String.Equals(Me._TYPECOST_TYOECOSTNAME, value) = false) Then
				Me.OnTYPECOST_TYOECOSTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPECOST_TYOECOSTNAME = value
				Me.SendPropertyChanged("TYPECOST_TYOECOSTNAME")
				Me.OnTYPECOST_TYOECOSTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPECOST_ISDISABLED", DbType:="Int")>  _
	Public Property TYPECOST_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPECOST_ISDISABLED
		End Get
		Set
			If (Me._TYPECOST_ISDISABLED.Equals(value) = false) Then
				Me.OnTYPECOST_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPECOST_ISDISABLED = value
				Me.SendPropertyChanged("TYPECOST_ISDISABLED")
				Me.OnTYPECOST_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEDISCH")>  _
Partial Public Class MAS_TYPEDISCH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEDISCH_ID As Integer
	
	Private _TYPEDISCH_CODE As String
	
	Private _TYPEDISCH_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEDISCH_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEDISCH_IDChanged()
    End Sub
    Partial Private Sub OnTYPEDISCH_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEDISCH_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEDISCH_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEDISCH_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDISCH_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEDISCH_ID() As Integer
		Get
			Return Me._TYPEDISCH_ID
		End Get
		Set
			If ((Me._TYPEDISCH_ID = value)  _
						= false) Then
				Me.OnTYPEDISCH_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDISCH_ID = value
				Me.SendPropertyChanged("TYPEDISCH_ID")
				Me.OnTYPEDISCH_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDISCH_CODE", DbType:="VarChar(MAX)")>  _
	Public Property TYPEDISCH_CODE() As String
		Get
			Return Me._TYPEDISCH_CODE
		End Get
		Set
			If (String.Equals(Me._TYPEDISCH_CODE, value) = false) Then
				Me.OnTYPEDISCH_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDISCH_CODE = value
				Me.SendPropertyChanged("TYPEDISCH_CODE")
				Me.OnTYPEDISCH_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDISCH_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property TYPEDISCH_DESCRIPTION() As String
		Get
			Return Me._TYPEDISCH_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPEDISCH_DESCRIPTION, value) = false) Then
				Me.OnTYPEDISCH_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDISCH_DESCRIPTION = value
				Me.SendPropertyChanged("TYPEDISCH_DESCRIPTION")
				Me.OnTYPEDISCH_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEDX")>  _
Partial Public Class MAS_TYPEDX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEDX_ID As Integer
	
	Private _TYPEDX_CODE As System.Nullable(Of Integer)
	
	Private _TYPEDX_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEDX_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEDX_IDChanged()
    End Sub
    Partial Private Sub OnTYPEDX_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEDX_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEDX_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEDX_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDX_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEDX_ID() As Integer
		Get
			Return Me._TYPEDX_ID
		End Get
		Set
			If ((Me._TYPEDX_ID = value)  _
						= false) Then
				Me.OnTYPEDX_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDX_ID = value
				Me.SendPropertyChanged("TYPEDX_ID")
				Me.OnTYPEDX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDX_CODE", DbType:="Int")>  _
	Public Property TYPEDX_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPEDX_CODE
		End Get
		Set
			If (Me._TYPEDX_CODE.Equals(value) = false) Then
				Me.OnTYPEDX_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDX_CODE = value
				Me.SendPropertyChanged("TYPEDX_CODE")
				Me.OnTYPEDX_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEDX_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property TYPEDX_DESCRIPTION() As String
		Get
			Return Me._TYPEDX_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPEDX_DESCRIPTION, value) = false) Then
				Me.OnTYPEDX_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPEDX_DESCRIPTION = value
				Me.SendPropertyChanged("TYPEDX_DESCRIPTION")
				Me.OnTYPEDX_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPELAB")>  _
Partial Public Class MAS_TYPELAB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPELAB_ID As Integer
	
	Private _TYPELAB_CODE As String
	
	Private _TYPELAB_TLABITEMNAME As String
	
	Private _TYPELAB_ENNAME As String
	
	Private _TYPELAB_NOTE As String
	
	Private _TYPELAB_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPELAB_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPELAB_IDChanged()
    End Sub
    Partial Private Sub OnTYPELAB_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPELAB_CODEChanged()
    End Sub
    Partial Private Sub OnTYPELAB_TLABITEMNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPELAB_TLABITEMNAMEChanged()
    End Sub
    Partial Private Sub OnTYPELAB_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPELAB_ENNAMEChanged()
    End Sub
    Partial Private Sub OnTYPELAB_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPELAB_NOTEChanged()
    End Sub
    Partial Private Sub OnTYPELAB_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPELAB_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPELAB_ID() As Integer
		Get
			Return Me._TYPELAB_ID
		End Get
		Set
			If ((Me._TYPELAB_ID = value)  _
						= false) Then
				Me.OnTYPELAB_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_ID = value
				Me.SendPropertyChanged("TYPELAB_ID")
				Me.OnTYPELAB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_CODE", DbType:="NVarChar(50)")>  _
	Public Property TYPELAB_CODE() As String
		Get
			Return Me._TYPELAB_CODE
		End Get
		Set
			If (String.Equals(Me._TYPELAB_CODE, value) = false) Then
				Me.OnTYPELAB_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_CODE = value
				Me.SendPropertyChanged("TYPELAB_CODE")
				Me.OnTYPELAB_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_TLABITEMNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPELAB_TLABITEMNAME() As String
		Get
			Return Me._TYPELAB_TLABITEMNAME
		End Get
		Set
			If (String.Equals(Me._TYPELAB_TLABITEMNAME, value) = false) Then
				Me.OnTYPELAB_TLABITEMNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_TLABITEMNAME = value
				Me.SendPropertyChanged("TYPELAB_TLABITEMNAME")
				Me.OnTYPELAB_TLABITEMNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_ENNAME", DbType:="NVarChar(200)")>  _
	Public Property TYPELAB_ENNAME() As String
		Get
			Return Me._TYPELAB_ENNAME
		End Get
		Set
			If (String.Equals(Me._TYPELAB_ENNAME, value) = false) Then
				Me.OnTYPELAB_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_ENNAME = value
				Me.SendPropertyChanged("TYPELAB_ENNAME")
				Me.OnTYPELAB_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPELAB_NOTE() As String
		Get
			Return Me._TYPELAB_NOTE
		End Get
		Set
			If (String.Equals(Me._TYPELAB_NOTE, value) = false) Then
				Me.OnTYPELAB_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_NOTE = value
				Me.SendPropertyChanged("TYPELAB_NOTE")
				Me.OnTYPELAB_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPELAB_ISDISABLED", DbType:="Int")>  _
	Public Property TYPELAB_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPELAB_ISDISABLED
		End Get
		Set
			If (Me._TYPELAB_ISDISABLED.Equals(value) = false) Then
				Me.OnTYPELAB_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPELAB_ISDISABLED = value
				Me.SendPropertyChanged("TYPELAB_ISDISABLED")
				Me.OnTYPELAB_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPEOUT")>  _
Partial Public Class MAS_TYPEOUT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPEOUT_ID As Integer
	
	Private _TYPEOUT_CODE As System.Nullable(Of Integer)
	
	Private _TYPEOUT_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPEOUT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPEOUT_IDChanged()
    End Sub
    Partial Private Sub OnTYPEOUT_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEOUT_CODEChanged()
    End Sub
    Partial Private Sub OnTYPEOUT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEOUT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEOUT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPEOUT_ID() As Integer
		Get
			Return Me._TYPEOUT_ID
		End Get
		Set
			If ((Me._TYPEOUT_ID = value)  _
						= false) Then
				Me.OnTYPEOUT_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPEOUT_ID = value
				Me.SendPropertyChanged("TYPEOUT_ID")
				Me.OnTYPEOUT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEOUT_CODE", DbType:="Int")>  _
	Public Property TYPEOUT_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPEOUT_CODE
		End Get
		Set
			If (Me._TYPEOUT_CODE.Equals(value) = false) Then
				Me.OnTYPEOUT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPEOUT_CODE = value
				Me.SendPropertyChanged("TYPEOUT_CODE")
				Me.OnTYPEOUT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPEOUT_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property TYPEOUT_DESCRIPTION() As String
		Get
			Return Me._TYPEOUT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPEOUT_DESCRIPTION, value) = false) Then
				Me.OnTYPEOUT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPEOUT_DESCRIPTION = value
				Me.SendPropertyChanged("TYPEOUT_DESCRIPTION")
				Me.OnTYPEOUT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPESTAFF")>  _
Partial Public Class MAS_TYPESTAFF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TYPESTAFF_ID As Integer
	
	Private _TYPESTAFF_CODE As System.Nullable(Of Integer)
	
	Private _TYPESTAFF_TYPESTAFF As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPESTAFF_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTYPESTAFF_IDChanged()
    End Sub
    Partial Private Sub OnTYPESTAFF_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPESTAFF_CODEChanged()
    End Sub
    Partial Private Sub OnTYPESTAFF_TYPESTAFFChanging(value As String)
    End Sub
    Partial Private Sub OnTYPESTAFF_TYPESTAFFChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPESTAFF_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TYPESTAFF_ID() As Integer
		Get
			Return Me._TYPESTAFF_ID
		End Get
		Set
			If ((Me._TYPESTAFF_ID = value)  _
						= false) Then
				Me.OnTYPESTAFF_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPESTAFF_ID = value
				Me.SendPropertyChanged("TYPESTAFF_ID")
				Me.OnTYPESTAFF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPESTAFF_CODE", DbType:="Int")>  _
	Public Property TYPESTAFF_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPESTAFF_CODE
		End Get
		Set
			If (Me._TYPESTAFF_CODE.Equals(value) = false) Then
				Me.OnTYPESTAFF_CODEChanging(value)
				Me.SendPropertyChanging
				Me._TYPESTAFF_CODE = value
				Me.SendPropertyChanged("TYPESTAFF_CODE")
				Me.OnTYPESTAFF_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPESTAFF_TYPESTAFF", DbType:="NVarChar(200)")>  _
	Public Property TYPESTAFF_TYPESTAFF() As String
		Get
			Return Me._TYPESTAFF_TYPESTAFF
		End Get
		Set
			If (String.Equals(Me._TYPESTAFF_TYPESTAFF, value) = false) Then
				Me.OnTYPESTAFF_TYPESTAFFChanging(value)
				Me.SendPropertyChanging
				Me._TYPESTAFF_TYPESTAFF = value
				Me.SendPropertyChanged("TYPESTAFF_TYPESTAFF")
				Me.OnTYPESTAFF_TYPESTAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_UNIT_MAIN")>  _
Partial Public Class MAS_UNIT_MAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UNIT_MAIN_ID As Integer
	
	Private _UNIT_MAIN_UNITNAME As String
	
	Private _UNIT_MAIN_ENNAME As String
	
	Private _UNIT_MAIN_NOTE As String
	
	Private _UNIT_MAIN_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUNIT_MAIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUNIT_MAIN_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_MAIN_UNITNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_MAIN_UNITNAMEChanged()
    End Sub
    Partial Private Sub OnUNIT_MAIN_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_MAIN_ENNAMEChanged()
    End Sub
    Partial Private Sub OnUNIT_MAIN_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_MAIN_NOTEChanged()
    End Sub
    Partial Private Sub OnUNIT_MAIN_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_MAIN_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_MAIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UNIT_MAIN_ID() As Integer
		Get
			Return Me._UNIT_MAIN_ID
		End Get
		Set
			If ((Me._UNIT_MAIN_ID = value)  _
						= false) Then
				Me.OnUNIT_MAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_MAIN_ID = value
				Me.SendPropertyChanged("UNIT_MAIN_ID")
				Me.OnUNIT_MAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_MAIN_UNITNAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_MAIN_UNITNAME() As String
		Get
			Return Me._UNIT_MAIN_UNITNAME
		End Get
		Set
			If (String.Equals(Me._UNIT_MAIN_UNITNAME, value) = false) Then
				Me.OnUNIT_MAIN_UNITNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_MAIN_UNITNAME = value
				Me.SendPropertyChanged("UNIT_MAIN_UNITNAME")
				Me.OnUNIT_MAIN_UNITNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_MAIN_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_MAIN_ENNAME() As String
		Get
			Return Me._UNIT_MAIN_ENNAME
		End Get
		Set
			If (String.Equals(Me._UNIT_MAIN_ENNAME, value) = false) Then
				Me.OnUNIT_MAIN_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_MAIN_ENNAME = value
				Me.SendPropertyChanged("UNIT_MAIN_ENNAME")
				Me.OnUNIT_MAIN_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_MAIN_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_MAIN_NOTE() As String
		Get
			Return Me._UNIT_MAIN_NOTE
		End Get
		Set
			If (String.Equals(Me._UNIT_MAIN_NOTE, value) = false) Then
				Me.OnUNIT_MAIN_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_MAIN_NOTE = value
				Me.SendPropertyChanged("UNIT_MAIN_NOTE")
				Me.OnUNIT_MAIN_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_MAIN_ISDISABLED", DbType:="Int")>  _
	Public Property UNIT_MAIN_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_MAIN_ISDISABLED
		End Get
		Set
			If (Me._UNIT_MAIN_ISDISABLED.Equals(value) = false) Then
				Me.OnUNIT_MAIN_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_MAIN_ISDISABLED = value
				Me.SendPropertyChanged("UNIT_MAIN_ISDISABLED")
				Me.OnUNIT_MAIN_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_UNITDRUG")>  _
Partial Public Class MAS_UNITDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UNITDRUG_ID As Integer
	
	Private _UNITDRUG_CODE As String
	
	Private _UNITDRUG_UNITDRUGNAME As String
	
	Private _UNITDRUG_ENNAME As String
	
	Private _UNITDRUG_NOTE As String
	
	Private _UNITDRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUNITDRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUNITDRUG_IDChanged()
    End Sub
    Partial Private Sub OnUNITDRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnUNITDRUG_CODEChanged()
    End Sub
    Partial Private Sub OnUNITDRUG_UNITDRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNITDRUG_UNITDRUGNAMEChanged()
    End Sub
    Partial Private Sub OnUNITDRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNITDRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnUNITDRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnUNITDRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnUNITDRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNITDRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UNITDRUG_ID() As Integer
		Get
			Return Me._UNITDRUG_ID
		End Get
		Set
			If ((Me._UNITDRUG_ID = value)  _
						= false) Then
				Me.OnUNITDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_ID = value
				Me.SendPropertyChanged("UNITDRUG_ID")
				Me.OnUNITDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property UNITDRUG_CODE() As String
		Get
			Return Me._UNITDRUG_CODE
		End Get
		Set
			If (String.Equals(Me._UNITDRUG_CODE, value) = false) Then
				Me.OnUNITDRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_CODE = value
				Me.SendPropertyChanged("UNITDRUG_CODE")
				Me.OnUNITDRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_UNITDRUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNITDRUG_UNITDRUGNAME() As String
		Get
			Return Me._UNITDRUG_UNITDRUGNAME
		End Get
		Set
			If (String.Equals(Me._UNITDRUG_UNITDRUGNAME, value) = false) Then
				Me.OnUNITDRUG_UNITDRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_UNITDRUGNAME = value
				Me.SendPropertyChanged("UNITDRUG_UNITDRUGNAME")
				Me.OnUNITDRUG_UNITDRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNITDRUG_ENNAME() As String
		Get
			Return Me._UNITDRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._UNITDRUG_ENNAME, value) = false) Then
				Me.OnUNITDRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_ENNAME = value
				Me.SendPropertyChanged("UNITDRUG_ENNAME")
				Me.OnUNITDRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property UNITDRUG_NOTE() As String
		Get
			Return Me._UNITDRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._UNITDRUG_NOTE, value) = false) Then
				Me.OnUNITDRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_NOTE = value
				Me.SendPropertyChanged("UNITDRUG_NOTE")
				Me.OnUNITDRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITDRUG_ISDISABLED", DbType:="Int")>  _
	Public Property UNITDRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._UNITDRUG_ISDISABLED
		End Get
		Set
			If (Me._UNITDRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnUNITDRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._UNITDRUG_ISDISABLED = value
				Me.SendPropertyChanged("UNITDRUG_ISDISABLED")
				Me.OnUNITDRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_USAGEDRUG")>  _
Partial Public Class MAS_USAGEDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USAGEDRUG_ID As Integer
	
	Private _USAGEDRUG_CODE As String
	
	Private _USAGEDRUG_USAGERUGNAME As String
	
	Private _USAGEDRUG_ENNAME As String
	
	Private _USAGEDRUG_NOTE As String
	
	Private _USAGEDRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSAGEDRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSAGEDRUG_IDChanged()
    End Sub
    Partial Private Sub OnUSAGEDRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnUSAGEDRUG_CODEChanged()
    End Sub
    Partial Private Sub OnUSAGEDRUG_USAGERUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSAGEDRUG_USAGERUGNAMEChanged()
    End Sub
    Partial Private Sub OnUSAGEDRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSAGEDRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnUSAGEDRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnUSAGEDRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnUSAGEDRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSAGEDRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USAGEDRUG_ID() As Integer
		Get
			Return Me._USAGEDRUG_ID
		End Get
		Set
			If ((Me._USAGEDRUG_ID = value)  _
						= false) Then
				Me.OnUSAGEDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_ID = value
				Me.SendPropertyChanged("USAGEDRUG_ID")
				Me.OnUSAGEDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property USAGEDRUG_CODE() As String
		Get
			Return Me._USAGEDRUG_CODE
		End Get
		Set
			If (String.Equals(Me._USAGEDRUG_CODE, value) = false) Then
				Me.OnUSAGEDRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_CODE = value
				Me.SendPropertyChanged("USAGEDRUG_CODE")
				Me.OnUSAGEDRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_USAGERUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property USAGEDRUG_USAGERUGNAME() As String
		Get
			Return Me._USAGEDRUG_USAGERUGNAME
		End Get
		Set
			If (String.Equals(Me._USAGEDRUG_USAGERUGNAME, value) = false) Then
				Me.OnUSAGEDRUG_USAGERUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_USAGERUGNAME = value
				Me.SendPropertyChanged("USAGEDRUG_USAGERUGNAME")
				Me.OnUSAGEDRUG_USAGERUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property USAGEDRUG_ENNAME() As String
		Get
			Return Me._USAGEDRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._USAGEDRUG_ENNAME, value) = false) Then
				Me.OnUSAGEDRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_ENNAME = value
				Me.SendPropertyChanged("USAGEDRUG_ENNAME")
				Me.OnUSAGEDRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property USAGEDRUG_NOTE() As String
		Get
			Return Me._USAGEDRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._USAGEDRUG_NOTE, value) = false) Then
				Me.OnUSAGEDRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_NOTE = value
				Me.SendPropertyChanged("USAGEDRUG_NOTE")
				Me.OnUSAGEDRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USAGEDRUG_ISDISABLED", DbType:="Int")>  _
	Public Property USAGEDRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._USAGEDRUG_ISDISABLED
		End Get
		Set
			If (Me._USAGEDRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnUSAGEDRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._USAGEDRUG_ISDISABLED = value
				Me.SendPropertyChanged("USAGEDRUG_ISDISABLED")
				Me.OnUSAGEDRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_USEDRUG")>  _
Partial Public Class MAS_USEDRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USEDRUG_ID As Integer
	
	Private _USEDRUG_CODE As String
	
	Private _USEDRUG_USEDRUGNAME As String
	
	Private _USEDRUG_ENNAME As String
	
	Private _USEDRUG_NOTE As String
	
	Private _USEDRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSEDRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSEDRUG_IDChanged()
    End Sub
    Partial Private Sub OnUSEDRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEDRUG_CODEChanged()
    End Sub
    Partial Private Sub OnUSEDRUG_USEDRUGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEDRUG_USEDRUGNAMEChanged()
    End Sub
    Partial Private Sub OnUSEDRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEDRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnUSEDRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEDRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnUSEDRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSEDRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USEDRUG_ID() As Integer
		Get
			Return Me._USEDRUG_ID
		End Get
		Set
			If ((Me._USEDRUG_ID = value)  _
						= false) Then
				Me.OnUSEDRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_ID = value
				Me.SendPropertyChanged("USEDRUG_ID")
				Me.OnUSEDRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property USEDRUG_CODE() As String
		Get
			Return Me._USEDRUG_CODE
		End Get
		Set
			If (String.Equals(Me._USEDRUG_CODE, value) = false) Then
				Me.OnUSEDRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_CODE = value
				Me.SendPropertyChanged("USEDRUG_CODE")
				Me.OnUSEDRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_USEDRUGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property USEDRUG_USEDRUGNAME() As String
		Get
			Return Me._USEDRUG_USEDRUGNAME
		End Get
		Set
			If (String.Equals(Me._USEDRUG_USEDRUGNAME, value) = false) Then
				Me.OnUSEDRUG_USEDRUGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_USEDRUGNAME = value
				Me.SendPropertyChanged("USEDRUG_USEDRUGNAME")
				Me.OnUSEDRUG_USEDRUGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property USEDRUG_ENNAME() As String
		Get
			Return Me._USEDRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._USEDRUG_ENNAME, value) = false) Then
				Me.OnUSEDRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_ENNAME = value
				Me.SendPropertyChanged("USEDRUG_ENNAME")
				Me.OnUSEDRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property USEDRUG_NOTE() As String
		Get
			Return Me._USEDRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._USEDRUG_NOTE, value) = false) Then
				Me.OnUSEDRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_NOTE = value
				Me.SendPropertyChanged("USEDRUG_NOTE")
				Me.OnUSEDRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USEDRUG_ISDISABLED", DbType:="Int")>  _
	Public Property USEDRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._USEDRUG_ISDISABLED
		End Get
		Set
			If (Me._USEDRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnUSEDRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._USEDRUG_ISDISABLED = value
				Me.SendPropertyChanged("USEDRUG_ISDISABLED")
				Me.OnUSEDRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_VENTILATION")>  _
Partial Public Class MAS_VENTILATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VENTILATION_ID As Integer
	
	Private _VENTILATION_CODE As System.Nullable(Of Integer)
	
	Private _VENTILATION_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVENTILATION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVENTILATION_IDChanged()
    End Sub
    Partial Private Sub OnVENTILATION_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVENTILATION_CODEChanged()
    End Sub
    Partial Private Sub OnVENTILATION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnVENTILATION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VENTILATION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property VENTILATION_ID() As Integer
		Get
			Return Me._VENTILATION_ID
		End Get
		Set
			If ((Me._VENTILATION_ID = value)  _
						= false) Then
				Me.OnVENTILATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._VENTILATION_ID = value
				Me.SendPropertyChanged("VENTILATION_ID")
				Me.OnVENTILATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VENTILATION_CODE", DbType:="Int")>  _
	Public Property VENTILATION_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._VENTILATION_CODE
		End Get
		Set
			If (Me._VENTILATION_CODE.Equals(value) = false) Then
				Me.OnVENTILATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._VENTILATION_CODE = value
				Me.SendPropertyChanged("VENTILATION_CODE")
				Me.OnVENTILATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VENTILATION_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property VENTILATION_DESCRIPTION() As String
		Get
			Return Me._VENTILATION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._VENTILATION_DESCRIPTION, value) = false) Then
				Me.OnVENTILATION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._VENTILATION_DESCRIPTION = value
				Me.SendPropertyChanged("VENTILATION_DESCRIPTION")
				Me.OnVENTILATION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_VSTATUS")>  _
Partial Public Class MAS_VSTATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VSTATUS_ID As Integer
	
	Private _VSTATUS_CODE As System.Nullable(Of Integer)
	
	Private _VSTATUS_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVSTATUS_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnVSTATUS_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVSTATUS_CODEChanged()
    End Sub
    Partial Private Sub OnVSTATUS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnVSTATUS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VSTATUS_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property VSTATUS_ID() As Integer
		Get
			Return Me._VSTATUS_ID
		End Get
		Set
			If ((Me._VSTATUS_ID = value)  _
						= false) Then
				Me.OnVSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._VSTATUS_ID = value
				Me.SendPropertyChanged("VSTATUS_ID")
				Me.OnVSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VSTATUS_CODE", DbType:="Int")>  _
	Public Property VSTATUS_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._VSTATUS_CODE
		End Get
		Set
			If (Me._VSTATUS_CODE.Equals(value) = false) Then
				Me.OnVSTATUS_CODEChanging(value)
				Me.SendPropertyChanging
				Me._VSTATUS_CODE = value
				Me.SendPropertyChanged("VSTATUS_CODE")
				Me.OnVSTATUS_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VSTATUS_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property VSTATUS_DESCRIPTION() As String
		Get
			Return Me._VSTATUS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._VSTATUS_DESCRIPTION, value) = false) Then
				Me.OnVSTATUS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._VSTATUS_DESCRIPTION = value
				Me.SendPropertyChanged("VSTATUS_DESCRIPTION")
				Me.OnVSTATUS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_VUCCINE")>  _
Partial Public Class MAS_VUCCINE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _NAME As String
	
	Private _CODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WAREHOUSE_DRUG")>  _
Partial Public Class MAS_WAREHOUSE_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WAREHOUSE_DRUG_ID As Integer
	
	Private _WAREHOUSE_DRUG_WAREHOUSEKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_CODE As String
	
	Private _WAREHOUSE_DRUG_WAREHOUSENAME As String
	
	Private _WAREHOUSE_DRUG_ENNAME As String
	
	Private _WAREHOUSE_DRUG_NOTE As String
	
	Private _WAREHOUSE_DRUG_SERVICEUNITKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_NORECEIVE As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_ISMEDWAREHOUSE As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_USEBASEUNITFORISSUSE As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_ISAUTOTRANFERREQ As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_MAXSTOCKDAY As String
	
	Private _WAREHOUSE_DRUG_REORDERSTOCKDAY As String
	
	Private _WAREHOUSE_DRUG_ISSUSERATEDAY As String
	
	Private _WAREHOUSE_DRUG_ISDISABLED As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_RECEIVESEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_RECEIVERETURNSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_TRANSFERSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_PRODUCTIONSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_ADJUSTSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_INTISSUEKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_ISSUERETURNSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_TRANSFERREQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_MEDRETURNSEQKEY As System.Nullable(Of Integer)
	
	Private _WAREHOUSE_DRUG_HOSP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_IDChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_WAREHOUSEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_WAREHOUSEKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_CODEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_WAREHOUSENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_WAREHOUSENAMEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ENNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ENNAMEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_NOTEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_SERVICEUNITKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_SERVICEUNITKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_NORECEIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_NORECEIVEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISMEDWAREHOUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISMEDWAREHOUSEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_USEBASEUNITFORISSUSEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_USEBASEUNITFORISSUSEChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISAUTOTRANFERREQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISAUTOTRANFERREQChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_MAXSTOCKDAYChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_MAXSTOCKDAYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_REORDERSTOCKDAYChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_REORDERSTOCKDAYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISSUSERATEDAYChanging(value As String)
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISSUSERATEDAYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISDISABLEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISDISABLEDChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_RECEIVESEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_RECEIVESEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_RECEIVERETURNSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_RECEIVERETURNSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_TRANSFERSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_TRANSFERSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_PRODUCTIONSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_PRODUCTIONSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ADJUSTSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ADJUSTSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_INTISSUEKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_INTISSUEKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISSUERETURNSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_ISSUERETURNSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_TRANSFERREQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_TRANSFERREQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_MEDRETURNSEQKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_MEDRETURNSEQKEYChanged()
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_HOSP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWAREHOUSE_DRUG_HOSP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WAREHOUSE_DRUG_ID() As Integer
		Get
			Return Me._WAREHOUSE_DRUG_ID
		End Get
		Set
			If ((Me._WAREHOUSE_DRUG_ID = value)  _
						= false) Then
				Me.OnWAREHOUSE_DRUG_IDChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ID = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ID")
				Me.OnWAREHOUSE_DRUG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_WAREHOUSEKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_WAREHOUSEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_WAREHOUSEKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_WAREHOUSEKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_WAREHOUSEKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_WAREHOUSEKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_WAREHOUSEKEY")
				Me.OnWAREHOUSE_DRUG_WAREHOUSEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_CODE", DbType:="NVarChar(50)")>  _
	Public Property WAREHOUSE_DRUG_CODE() As String
		Get
			Return Me._WAREHOUSE_DRUG_CODE
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_CODE, value) = false) Then
				Me.OnWAREHOUSE_DRUG_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_CODE = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_CODE")
				Me.OnWAREHOUSE_DRUG_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_WAREHOUSENAME", DbType:="NVarChar(MAX)")>  _
	Public Property WAREHOUSE_DRUG_WAREHOUSENAME() As String
		Get
			Return Me._WAREHOUSE_DRUG_WAREHOUSENAME
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_WAREHOUSENAME, value) = false) Then
				Me.OnWAREHOUSE_DRUG_WAREHOUSENAMEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_WAREHOUSENAME = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_WAREHOUSENAME")
				Me.OnWAREHOUSE_DRUG_WAREHOUSENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ENNAME", DbType:="NVarChar(MAX)")>  _
	Public Property WAREHOUSE_DRUG_ENNAME() As String
		Get
			Return Me._WAREHOUSE_DRUG_ENNAME
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_ENNAME, value) = false) Then
				Me.OnWAREHOUSE_DRUG_ENNAMEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ENNAME = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ENNAME")
				Me.OnWAREHOUSE_DRUG_ENNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property WAREHOUSE_DRUG_NOTE() As String
		Get
			Return Me._WAREHOUSE_DRUG_NOTE
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_NOTE, value) = false) Then
				Me.OnWAREHOUSE_DRUG_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_NOTE = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_NOTE")
				Me.OnWAREHOUSE_DRUG_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_SERVICEUNITKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_SERVICEUNITKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_SERVICEUNITKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_SERVICEUNITKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_SERVICEUNITKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_SERVICEUNITKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_SERVICEUNITKEY")
				Me.OnWAREHOUSE_DRUG_SERVICEUNITKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_NORECEIVE", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_NORECEIVE() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_NORECEIVE
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_NORECEIVE.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_NORECEIVEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_NORECEIVE = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_NORECEIVE")
				Me.OnWAREHOUSE_DRUG_NORECEIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ISMEDWAREHOUSE", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_ISMEDWAREHOUSE() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_ISMEDWAREHOUSE
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_ISMEDWAREHOUSE.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_ISMEDWAREHOUSEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ISMEDWAREHOUSE = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ISMEDWAREHOUSE")
				Me.OnWAREHOUSE_DRUG_ISMEDWAREHOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_USEBASEUNITFORISSUSE", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_USEBASEUNITFORISSUSE() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_USEBASEUNITFORISSUSE
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_USEBASEUNITFORISSUSE.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_USEBASEUNITFORISSUSEChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_USEBASEUNITFORISSUSE = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_USEBASEUNITFORISSUSE")
				Me.OnWAREHOUSE_DRUG_USEBASEUNITFORISSUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ISAUTOTRANFERREQ", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_ISAUTOTRANFERREQ() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_ISAUTOTRANFERREQ
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_ISAUTOTRANFERREQ.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_ISAUTOTRANFERREQChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ISAUTOTRANFERREQ = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ISAUTOTRANFERREQ")
				Me.OnWAREHOUSE_DRUG_ISAUTOTRANFERREQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_MAXSTOCKDAY", DbType:="NVarChar(50)")>  _
	Public Property WAREHOUSE_DRUG_MAXSTOCKDAY() As String
		Get
			Return Me._WAREHOUSE_DRUG_MAXSTOCKDAY
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_MAXSTOCKDAY, value) = false) Then
				Me.OnWAREHOUSE_DRUG_MAXSTOCKDAYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_MAXSTOCKDAY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_MAXSTOCKDAY")
				Me.OnWAREHOUSE_DRUG_MAXSTOCKDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_REORDERSTOCKDAY", DbType:="NVarChar(50)")>  _
	Public Property WAREHOUSE_DRUG_REORDERSTOCKDAY() As String
		Get
			Return Me._WAREHOUSE_DRUG_REORDERSTOCKDAY
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_REORDERSTOCKDAY, value) = false) Then
				Me.OnWAREHOUSE_DRUG_REORDERSTOCKDAYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_REORDERSTOCKDAY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_REORDERSTOCKDAY")
				Me.OnWAREHOUSE_DRUG_REORDERSTOCKDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ISSUSERATEDAY", DbType:="NVarChar(50)")>  _
	Public Property WAREHOUSE_DRUG_ISSUSERATEDAY() As String
		Get
			Return Me._WAREHOUSE_DRUG_ISSUSERATEDAY
		End Get
		Set
			If (String.Equals(Me._WAREHOUSE_DRUG_ISSUSERATEDAY, value) = false) Then
				Me.OnWAREHOUSE_DRUG_ISSUSERATEDAYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ISSUSERATEDAY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ISSUSERATEDAY")
				Me.OnWAREHOUSE_DRUG_ISSUSERATEDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ISDISABLED", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_ISDISABLED() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_ISDISABLED
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_ISDISABLED.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_ISDISABLEDChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ISDISABLED = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ISDISABLED")
				Me.OnWAREHOUSE_DRUG_ISDISABLEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_RECEIVESEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_RECEIVESEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_RECEIVESEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_RECEIVESEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_RECEIVESEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_RECEIVESEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_RECEIVESEQKEY")
				Me.OnWAREHOUSE_DRUG_RECEIVESEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_RECEIVERETURNSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_RECEIVERETURNSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_RECEIVERETURNSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_RECEIVERETURNSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_RECEIVERETURNSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_RECEIVERETURNSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_RECEIVERETURNSEQKEY")
				Me.OnWAREHOUSE_DRUG_RECEIVERETURNSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_TRANSFERSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_TRANSFERSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_TRANSFERSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_TRANSFERSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_TRANSFERSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_TRANSFERSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_TRANSFERSEQKEY")
				Me.OnWAREHOUSE_DRUG_TRANSFERSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_PRODUCTIONSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_PRODUCTIONSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_PRODUCTIONSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_PRODUCTIONSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_PRODUCTIONSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_PRODUCTIONSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_PRODUCTIONSEQKEY")
				Me.OnWAREHOUSE_DRUG_PRODUCTIONSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ADJUSTSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_ADJUSTSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_ADJUSTSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_ADJUSTSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_ADJUSTSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ADJUSTSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ADJUSTSEQKEY")
				Me.OnWAREHOUSE_DRUG_ADJUSTSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_INTISSUEKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_INTISSUEKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_INTISSUEKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_INTISSUEKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_INTISSUEKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_INTISSUEKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_INTISSUEKEY")
				Me.OnWAREHOUSE_DRUG_INTISSUEKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_ISSUERETURNSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_ISSUERETURNSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_ISSUERETURNSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_ISSUERETURNSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_ISSUERETURNSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_ISSUERETURNSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_ISSUERETURNSEQKEY")
				Me.OnWAREHOUSE_DRUG_ISSUERETURNSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_TRANSFERREQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_TRANSFERREQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_TRANSFERREQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_TRANSFERREQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_TRANSFERREQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_TRANSFERREQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_TRANSFERREQKEY")
				Me.OnWAREHOUSE_DRUG_TRANSFERREQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_MEDRETURNSEQKEY", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_MEDRETURNSEQKEY() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_MEDRETURNSEQKEY
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_MEDRETURNSEQKEY.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_MEDRETURNSEQKEYChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_MEDRETURNSEQKEY = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_MEDRETURNSEQKEY")
				Me.OnWAREHOUSE_DRUG_MEDRETURNSEQKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WAREHOUSE_DRUG_HOSP_ID", DbType:="Int")>  _
	Public Property WAREHOUSE_DRUG_HOSP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WAREHOUSE_DRUG_HOSP_ID
		End Get
		Set
			If (Me._WAREHOUSE_DRUG_HOSP_ID.Equals(value) = false) Then
				Me.OnWAREHOUSE_DRUG_HOSP_IDChanging(value)
				Me.SendPropertyChanging
				Me._WAREHOUSE_DRUG_HOSP_ID = value
				Me.SendPropertyChanged("WAREHOUSE_DRUG_HOSP_ID")
				Me.OnWAREHOUSE_DRUG_HOSP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WAREHOUSE_SUBCENTER")>  _
Partial Public Class MAS_WAREHOUSE_SUBCENTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FK_MAS_WAREHOUSE_SUBMAIN As System.Nullable(Of Integer)
	
	Private _SUBCENTER_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFK_MAS_WAREHOUSE_SUBMAINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MAS_WAREHOUSE_SUBMAINChanged()
    End Sub
    Partial Private Sub OnSUBCENTER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSUBCENTER_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MAS_WAREHOUSE_SUBMAIN", DbType:="Int")>  _
	Public Property FK_MAS_WAREHOUSE_SUBMAIN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MAS_WAREHOUSE_SUBMAIN
		End Get
		Set
			If (Me._FK_MAS_WAREHOUSE_SUBMAIN.Equals(value) = false) Then
				Me.OnFK_MAS_WAREHOUSE_SUBMAINChanging(value)
				Me.SendPropertyChanging
				Me._FK_MAS_WAREHOUSE_SUBMAIN = value
				Me.SendPropertyChanged("FK_MAS_WAREHOUSE_SUBMAIN")
				Me.OnFK_MAS_WAREHOUSE_SUBMAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUBCENTER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SUBCENTER_NAME() As String
		Get
			Return Me._SUBCENTER_NAME
		End Get
		Set
			If (String.Equals(Me._SUBCENTER_NAME, value) = false) Then
				Me.OnSUBCENTER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SUBCENTER_NAME = value
				Me.SendPropertyChanged("SUBCENTER_NAME")
				Me.OnSUBCENTER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WAREHOUSE_SUBMAIN")>  _
Partial Public Class MAS_WAREHOUSE_SUBMAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _HOSPITALMAIN_ID As System.Nullable(Of Integer)
	
	Private _HOSPITALMAIN_CODE As String
	
	Private _HOSPITALMAIN_NEME As String
	
	Private _HOUSE_NO As String
	
	Private _SOI As String
	
	Private _MOO As String
	
	Private _STREET As String
	
	Private _DISTRICT As System.Nullable(Of Integer)
	
	Private _AMPHUR As System.Nullable(Of Integer)
	
	Private _PROVINCE As System.Nullable(Of Integer)
	
	Private _COUNTY As System.Nullable(Of Integer)
	
	Private _ADDRESS_STYLE As System.Nullable(Of Integer)
	
	Private _ZIPCODE As String
	
	Private _TEL As String
	
	Private _PHONE As String
	
	Private _EMAIL As String
	
	Private _NOTE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnHOSPITALMAIN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHOSPITALMAIN_IDChanged()
    End Sub
    Partial Private Sub OnHOSPITALMAIN_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALMAIN_CODEChanged()
    End Sub
    Partial Private Sub OnHOSPITALMAIN_NEMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOSPITALMAIN_NEMEChanged()
    End Sub
    Partial Private Sub OnHOUSE_NOChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSE_NOChanged()
    End Sub
    Partial Private Sub OnSOIChanging(value As String)
    End Sub
    Partial Private Sub OnSOIChanged()
    End Sub
    Partial Private Sub OnMOOChanging(value As String)
    End Sub
    Partial Private Sub OnMOOChanged()
    End Sub
    Partial Private Sub OnSTREETChanging(value As String)
    End Sub
    Partial Private Sub OnSTREETChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnAMPHURChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHURChanged()
    End Sub
    Partial Private Sub OnPROVINCEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROVINCEChanged()
    End Sub
    Partial Private Sub OnCOUNTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTYChanged()
    End Sub
    Partial Private Sub OnADDRESS_STYLEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADDRESS_STYLEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnPHONEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALMAIN_ID", DbType:="Int")>  _
	Public Property HOSPITALMAIN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HOSPITALMAIN_ID
		End Get
		Set
			If (Me._HOSPITALMAIN_ID.Equals(value) = false) Then
				Me.OnHOSPITALMAIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALMAIN_ID = value
				Me.SendPropertyChanged("HOSPITALMAIN_ID")
				Me.OnHOSPITALMAIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALMAIN_CODE", DbType:="VarChar(MAX)")>  _
	Public Property HOSPITALMAIN_CODE() As String
		Get
			Return Me._HOSPITALMAIN_CODE
		End Get
		Set
			If (String.Equals(Me._HOSPITALMAIN_CODE, value) = false) Then
				Me.OnHOSPITALMAIN_CODEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALMAIN_CODE = value
				Me.SendPropertyChanged("HOSPITALMAIN_CODE")
				Me.OnHOSPITALMAIN_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOSPITALMAIN_NEME", DbType:="VarChar(MAX)")>  _
	Public Property HOSPITALMAIN_NEME() As String
		Get
			Return Me._HOSPITALMAIN_NEME
		End Get
		Set
			If (String.Equals(Me._HOSPITALMAIN_NEME, value) = false) Then
				Me.OnHOSPITALMAIN_NEMEChanging(value)
				Me.SendPropertyChanging
				Me._HOSPITALMAIN_NEME = value
				Me.SendPropertyChanged("HOSPITALMAIN_NEME")
				Me.OnHOSPITALMAIN_NEMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSE_NO", DbType:="VarChar(MAX)")>  _
	Public Property HOUSE_NO() As String
		Get
			Return Me._HOUSE_NO
		End Get
		Set
			If (String.Equals(Me._HOUSE_NO, value) = false) Then
				Me.OnHOUSE_NOChanging(value)
				Me.SendPropertyChanging
				Me._HOUSE_NO = value
				Me.SendPropertyChanged("HOUSE_NO")
				Me.OnHOUSE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI", DbType:="VarChar(MAX)")>  _
	Public Property SOI() As String
		Get
			Return Me._SOI
		End Get
		Set
			If (String.Equals(Me._SOI, value) = false) Then
				Me.OnSOIChanging(value)
				Me.SendPropertyChanging
				Me._SOI = value
				Me.SendPropertyChanged("SOI")
				Me.OnSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO", DbType:="VarChar(MAX)")>  _
	Public Property MOO() As String
		Get
			Return Me._MOO
		End Get
		Set
			If (String.Equals(Me._MOO, value) = false) Then
				Me.OnMOOChanging(value)
				Me.SendPropertyChanging
				Me._MOO = value
				Me.SendPropertyChanged("MOO")
				Me.OnMOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STREET", DbType:="VarChar(MAX)")>  _
	Public Property STREET() As String
		Get
			Return Me._STREET
		End Get
		Set
			If (String.Equals(Me._STREET, value) = false) Then
				Me.OnSTREETChanging(value)
				Me.SendPropertyChanging
				Me._STREET = value
				Me.SendPropertyChanged("STREET")
				Me.OnSTREETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="Int")>  _
	Public Property DISTRICT() As System.Nullable(Of Integer)
		Get
			Return Me._DISTRICT
		End Get
		Set
			If (Me._DISTRICT.Equals(value) = false) Then
				Me.OnDISTRICTChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT = value
				Me.SendPropertyChanged("DISTRICT")
				Me.OnDISTRICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHUR", DbType:="Int")>  _
	Public Property AMPHUR() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHUR
		End Get
		Set
			If (Me._AMPHUR.Equals(value) = false) Then
				Me.OnAMPHURChanging(value)
				Me.SendPropertyChanging
				Me._AMPHUR = value
				Me.SendPropertyChanged("AMPHUR")
				Me.OnAMPHURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE", DbType:="Int")>  _
	Public Property PROVINCE() As System.Nullable(Of Integer)
		Get
			Return Me._PROVINCE
		End Get
		Set
			If (Me._PROVINCE.Equals(value) = false) Then
				Me.OnPROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE = value
				Me.SendPropertyChanged("PROVINCE")
				Me.OnPROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTY", DbType:="Int")>  _
	Public Property COUNTY() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTY
		End Get
		Set
			If (Me._COUNTY.Equals(value) = false) Then
				Me.OnCOUNTYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTY = value
				Me.SendPropertyChanged("COUNTY")
				Me.OnCOUNTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_STYLE", DbType:="Int")>  _
	Public Property ADDRESS_STYLE() As System.Nullable(Of Integer)
		Get
			Return Me._ADDRESS_STYLE
		End Get
		Set
			If (Me._ADDRESS_STYLE.Equals(value) = false) Then
				Me.OnADDRESS_STYLEChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_STYLE = value
				Me.SendPropertyChanged("ADDRESS_STYLE")
				Me.OnADDRESS_STYLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="VarChar(10)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="VarChar(50)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE", DbType:="VarChar(MAX)")>  _
	Public Property PHONE() As String
		Get
			Return Me._PHONE
		End Get
		Set
			If (String.Equals(Me._PHONE, value) = false) Then
				Me.OnPHONEChanging(value)
				Me.SendPropertyChanging
				Me._PHONE = value
				Me.SendPropertyChanged("PHONE")
				Me.OnPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(50)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE", DbType:="VarChar(MAX)")>  _
	Public Property NOTE() As String
		Get
			Return Me._NOTE
		End Get
		Set
			If (String.Equals(Me._NOTE, value) = false) Then
				Me.OnNOTEChanging(value)
				Me.SendPropertyChanging
				Me._NOTE = value
				Me.SendPropertyChanged("NOTE")
				Me.OnNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WASTERWATER")>  _
Partial Public Class MAS_WASTERWATER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WASTERWATER_ID As Integer
	
	Private _WASTERWATER_CODE As System.Nullable(Of Integer)
	
	Private _WASTERWATER_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWASTERWATER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWASTERWATER_IDChanged()
    End Sub
    Partial Private Sub OnWASTERWATER_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWASTERWATER_CODEChanged()
    End Sub
    Partial Private Sub OnWASTERWATER_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWASTERWATER_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTERWATER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WASTERWATER_ID() As Integer
		Get
			Return Me._WASTERWATER_ID
		End Get
		Set
			If ((Me._WASTERWATER_ID = value)  _
						= false) Then
				Me.OnWASTERWATER_IDChanging(value)
				Me.SendPropertyChanging
				Me._WASTERWATER_ID = value
				Me.SendPropertyChanged("WASTERWATER_ID")
				Me.OnWASTERWATER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTERWATER_CODE", DbType:="Int")>  _
	Public Property WASTERWATER_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._WASTERWATER_CODE
		End Get
		Set
			If (Me._WASTERWATER_CODE.Equals(value) = false) Then
				Me.OnWASTERWATER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WASTERWATER_CODE = value
				Me.SendPropertyChanged("WASTERWATER_CODE")
				Me.OnWASTERWATER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTERWATER_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property WASTERWATER_DESCRIPTION() As String
		Get
			Return Me._WASTERWATER_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WASTERWATER_DESCRIPTION, value) = false) Then
				Me.OnWASTERWATER_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WASTERWATER_DESCRIPTION = value
				Me.SendPropertyChanged("WASTERWATER_DESCRIPTION")
				Me.OnWASTERWATER_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WATER")>  _
Partial Public Class MAS_WATER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WATER_ID As Integer
	
	Private _WATER_CODE As System.Nullable(Of Integer)
	
	Private _WATER_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWATER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWATER_IDChanged()
    End Sub
    Partial Private Sub OnWATER_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWATER_CODEChanged()
    End Sub
    Partial Private Sub OnWATER_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWATER_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WATER_ID() As Integer
		Get
			Return Me._WATER_ID
		End Get
		Set
			If ((Me._WATER_ID = value)  _
						= false) Then
				Me.OnWATER_IDChanging(value)
				Me.SendPropertyChanging
				Me._WATER_ID = value
				Me.SendPropertyChanged("WATER_ID")
				Me.OnWATER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATER_CODE", DbType:="Int")>  _
	Public Property WATER_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._WATER_CODE
		End Get
		Set
			If (Me._WATER_CODE.Equals(value) = false) Then
				Me.OnWATER_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WATER_CODE = value
				Me.SendPropertyChanged("WATER_CODE")
				Me.OnWATER_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATER_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property WATER_DESCRIPTION() As String
		Get
			Return Me._WATER_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WATER_DESCRIPTION, value) = false) Then
				Me.OnWATER_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WATER_DESCRIPTION = value
				Me.SendPropertyChanged("WATER_DESCRIPTION")
				Me.OnWATER_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WATERTM")>  _
Partial Public Class MAS_WATERTM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WATERTM_ID As Integer
	
	Private _WATERTM_CODE As System.Nullable(Of Integer)
	
	Private _WATERTM_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWATERTM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWATERTM_IDChanged()
    End Sub
    Partial Private Sub OnWATERTM_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWATERTM_CODEChanged()
    End Sub
    Partial Private Sub OnWATERTM_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWATERTM_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WATERTM_ID() As Integer
		Get
			Return Me._WATERTM_ID
		End Get
		Set
			If ((Me._WATERTM_ID = value)  _
						= false) Then
				Me.OnWATERTM_IDChanging(value)
				Me.SendPropertyChanging
				Me._WATERTM_ID = value
				Me.SendPropertyChanged("WATERTM_ID")
				Me.OnWATERTM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTM_CODE", DbType:="Int")>  _
	Public Property WATERTM_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._WATERTM_CODE
		End Get
		Set
			If (Me._WATERTM_CODE.Equals(value) = false) Then
				Me.OnWATERTM_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WATERTM_CODE = value
				Me.SendPropertyChanged("WATERTM_CODE")
				Me.OnWATERTM_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTM_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property WATERTM_DESCRIPTION() As String
		Get
			Return Me._WATERTM_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WATERTM_DESCRIPTION, value) = false) Then
				Me.OnWATERTM_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WATERTM_DESCRIPTION = value
				Me.SendPropertyChanged("WATERTM_DESCRIPTION")
				Me.OnWATERTM_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WATERTYPE")>  _
Partial Public Class MAS_WATERTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WATERTYPE_ID As Integer
	
	Private _WATERTYPE_CODE As System.Nullable(Of Integer)
	
	Private _WATERTYPE_DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWATERTYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWATERTYPE_IDChanged()
    End Sub
    Partial Private Sub OnWATERTYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWATERTYPE_CODEChanged()
    End Sub
    Partial Private Sub OnWATERTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWATERTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTYPE_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property WATERTYPE_ID() As Integer
		Get
			Return Me._WATERTYPE_ID
		End Get
		Set
			If ((Me._WATERTYPE_ID = value)  _
						= false) Then
				Me.OnWATERTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._WATERTYPE_ID = value
				Me.SendPropertyChanged("WATERTYPE_ID")
				Me.OnWATERTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTYPE_CODE", DbType:="Int")>  _
	Public Property WATERTYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._WATERTYPE_CODE
		End Get
		Set
			If (Me._WATERTYPE_CODE.Equals(value) = false) Then
				Me.OnWATERTYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WATERTYPE_CODE = value
				Me.SendPropertyChanged("WATERTYPE_CODE")
				Me.OnWATERTYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WATERTYPE_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property WATERTYPE_DESCRIPTION() As String
		Get
			Return Me._WATERTYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WATERTYPE_DESCRIPTION, value) = false) Then
				Me.OnWATERTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WATERTYPE_DESCRIPTION = value
				Me.SendPropertyChanged("WATERTYPE_DESCRIPTION")
				Me.OnWATERTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="VarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WIDDEN_METHOD")>  _
Partial Public Class MAS_WIDDEN_METHOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _NAME As String
	
	Private _CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HELPDOCWORD")>  _
Partial Public Class MAS_HELPDOCWORD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME As String
	
	Private _USER_SERVICEUNIT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnUSER_SERVICEUNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSER_SERVICEUNITChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_SERVICEUNIT", DbType:="Int")>  _
	Public Property USER_SERVICEUNIT() As System.Nullable(Of Integer)
		Get
			Return Me._USER_SERVICEUNIT
		End Get
		Set
			If (Me._USER_SERVICEUNIT.Equals(value) = false) Then
				Me.OnUSER_SERVICEUNITChanging(value)
				Me.SendPropertyChanging
				Me._USER_SERVICEUNIT = value
				Me.SendPropertyChanged("USER_SERVICEUNIT")
				Me.OnUSER_SERVICEUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HELPDOC")>  _
Partial Public Class MAS_HELPDOC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _KEY_WORD As String
	
	Private _PASSAGE As String
	
	Private _GUID As String
	
	Private _CREATE_USER As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _USER_SERVICEUNIT As System.Nullable(Of Integer)
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnKEY_WORDChanging(value As String)
    End Sub
    Partial Private Sub OnKEY_WORDChanged()
    End Sub
    Partial Private Sub OnPASSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnPASSAGEChanged()
    End Sub
    Partial Private Sub OnGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnGUIDChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUSER_SERVICEUNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSER_SERVICEUNITChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEY_WORD", DbType:="NVarChar(MAX)")>  _
	Public Property KEY_WORD() As String
		Get
			Return Me._KEY_WORD
		End Get
		Set
			If (String.Equals(Me._KEY_WORD, value) = false) Then
				Me.OnKEY_WORDChanging(value)
				Me.SendPropertyChanging
				Me._KEY_WORD = value
				Me.SendPropertyChanged("KEY_WORD")
				Me.OnKEY_WORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property PASSAGE() As String
		Get
			Return Me._PASSAGE
		End Get
		Set
			If (String.Equals(Me._PASSAGE, value) = false) Then
				Me.OnPASSAGEChanging(value)
				Me.SendPropertyChanging
				Me._PASSAGE = value
				Me.SendPropertyChanged("PASSAGE")
				Me.OnPASSAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUID", DbType:="NVarChar(MAX)")>  _
	Public Property GUID() As String
		Get
			Return Me._GUID
		End Get
		Set
			If (String.Equals(Me._GUID, value) = false) Then
				Me.OnGUIDChanging(value)
				Me.SendPropertyChanging
				Me._GUID = value
				Me.SendPropertyChanged("GUID")
				Me.OnGUIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_SERVICEUNIT", DbType:="Int")>  _
	Public Property USER_SERVICEUNIT() As System.Nullable(Of Integer)
		Get
			Return Me._USER_SERVICEUNIT
		End Get
		Set
			If (Me._USER_SERVICEUNIT.Equals(value) = false) Then
				Me.OnUSER_SERVICEUNITChanging(value)
				Me.SendPropertyChanging
				Me._USER_SERVICEUNIT = value
				Me.SendPropertyChanged("USER_SERVICEUNIT")
				Me.OnUSER_SERVICEUNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
